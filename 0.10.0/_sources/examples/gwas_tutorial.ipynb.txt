{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "accurate-breakdown",
   "metadata": {},
   "source": [
    "# GWAS Tutorial"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "written-product",
   "metadata": {},
   "source": [
    "This notebook is an [sgkit](https://sgkit-dev.github.io/sgkit) port of Hail's [GWAS Tutorial](https://nbviewer.jupyter.org/github/tomwhite/sgkit/blob/86753e814c6d56982b6950ec3de727f3b1bfad7d/docs/examples/01-genome-wide-association-study.ipynb), which demonstrates how to run a genome-wide SNP association test. Readers are encouraged to read the Hail tutorial alongside this one for more background, and to see the motivation behind some of the steps.\n",
    "\n",
    "_Note that some of the results do not exactly match the output from Hail. Also, since sgkit is still a 0.x release, its API is still subject to non-backwards compatible changes._"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "valid-pride",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sgkit as sg"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "scheduled-spelling",
   "metadata": {},
   "source": [
    "Before using sgkit, we import some standard Python libraries and set the Xarray display options to not show all the attributes in a dataset by default."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "compound-activity",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import xarray as xr\n",
    "xr.set_options(display_expand_attrs=False, display_expand_data_vars=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "color-trinity",
   "metadata": {},
   "source": [
    "## Download public 1000 Genomes data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "useful-imperial",
   "metadata": {},
   "source": [
    "We use the same small (20MB) portion of the public 1000 Genomes data that Hail uses.\n",
    "\n",
    "First, download the file locally:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "taken-banana",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pathlib import Path\n",
    "import requests\n",
    "\n",
    "if not Path(\"1kg.vcf.bgz\").exists():\n",
    "    response = requests.get(\"https://storage.googleapis.com/sgkit-data/tutorial/1kg.vcf.bgz\")\n",
    "    with open(\"1kg.vcf.bgz\", \"wb\") as f:\n",
    "        f.write(response.content)\n",
    "if not Path(\"1kg.vcf.bgz.tbi\").exists():\n",
    "    response = requests.get(\"https://storage.googleapis.com/sgkit-data/tutorial/1kg.vcf.bgz.tbi\")\n",
    "    with open(\"1kg.vcf.bgz.tbi\", \"wb\") as f:\n",
    "        f.write(response.content)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "headed-restoration",
   "metadata": {},
   "source": [
    "## Importing data from VCF"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "elementary-college",
   "metadata": {},
   "source": [
    "Next, convert the VCF file to Zarr using the `vcf2zarr` command in [bio2zarr](https://sgkit-dev.github.io/bio2zarr/), stored on the local filesystem in a directory called _1kg.vcz_."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "78effc1d-b45e-4af5-85ae-e0e7a40ca049",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "    Scan:   0%|          | 0.00/1.00 [00:00<?, ?files/s][W::bcf_hdr_check_sanity] PL should be declared as Number=G\n",
      "    Scan: 100%|██████████| 1.00/1.00 [00:01<00:00, 1.00s/files]\n",
      " Explode:   0%|          | 0.00/10.9k [00:00<?, ?vars/s][W::bcf_hdr_check_sanity] PL should be declared as Number=G\n",
      " Explode: 100%|██████████| 10.9k/10.9k [00:19<00:00, 547vars/s]\n",
      "  Encode: 100%|██████████| 28.2M/28.2M [00:02<00:00, 12.1MB/s]\n",
      "Finalise: 100%|██████████| 13.0/13.0 [00:00<00:00, 1.01karray/s]\n"
     ]
    }
   ],
   "source": [
    "%%bash\n",
    "vcf2zarr explode --force 1kg.vcf.bgz 1kg.icf\n",
    "# vcf2zarr mkschema 1kg.icf > 1kg.schema.json # then edit 1kg.schema.json by hand\n",
    "vcf2zarr encode --force -s 1kg.schema.json 1kg.icf 1kg.vcz"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "plastic-running",
   "metadata": {},
   "source": [
    "We used the `vcf2zarr explode` command to first convert the VCF to an \"intermediate columnar format\" (ICF), then the `vcf2zarr encode` command to convert the ICF to Zarr, which by convention is stored in a directory with a `vcz` extension.\n",
    "\n",
    "Note that we specified a JSON schema file that was created with the `vcf2zarr mkschema` command (commented out above), then edited to drop some fields that are not needed for this tutorial (such as `FORMAT/PL`). It was also updated to change the `call_AD` field's third dimension to be `alleles`, which was not set by `vcf2zarr` since the dataset we are using defines `FORMAT/AD` as `.` which means \"unknown\", rather than `R`.\n",
    "\n",
    "For more information about using `vcf2zarr`, see the tutorial in the [bio2zarr documentation](https://sgkit-dev.github.io/bio2zarr/).\n",
    "\n",
    "Now the data has been written as Zarr, all downstream operations on will be much faster. Note that sgkit uses an [Xarray](http://xarray.pydata.org/en/stable/) dataset to represent the VCF data, where Hail uses MatrixTable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "blind-sunset",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = sg.load_dataset(\"1kg.vcz\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "imperial-california",
   "metadata": {},
   "source": [
    "## Getting to know our data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "otherwise-constant",
   "metadata": {},
   "source": [
    "To start with we'll look at some summary data from the dataset.\n",
    "\n",
    "The simplest thing is to look at the dimensions and data variables in the Xarray dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "hundred-manitoba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 28MB\n",
       "Dimensions:               (variants: 10879, samples: 284, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: variants, samples, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/17)\n",
       "    call_AD               (variants, samples, alleles) int8 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_DP               (variants, samples) int8 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    call_GQ               (variants, samples) int8 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    call_genotype         (variants, samples, ploidy) int8 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_genotype_mask    (variants, samples, ploidy) bool 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_genotype_phased  (variants, samples) bool 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    ...                    ...\n",
       "    variant_contig        (variants) int8 11kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_filter        (variants, filters) bool 11kB dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;\n",
       "    variant_id            (variants) object 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_id_mask       (variants) bool 11kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_position      (variants) int32 44kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_quality       (variants) float32 44kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-f44381dc-54b5-4bcd-bbd7-87b10ef5c739' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-f44381dc-54b5-4bcd-bbd7-87b10ef5c739' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>variants</span>: 10879</li><li><span>samples</span>: 284</li><li><span>alleles</span>: 2</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-18a0ec83-625e-452f-9485-42729456102f' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-18a0ec83-625e-452f-9485-42729456102f' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-76d8dcc4-44a9-4da4-8ef7-f8d098794202' class='xr-section-summary-in' type='checkbox'  checked><label for='section-76d8dcc4-44a9-4da4-8ef7-f8d098794202' class='xr-section-summary' >Data variables: <span>(17)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-7e49131c-b14a-457a-88ee-00fb360fe961' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7e49131c-b14a-457a-88ee-00fb360fe961' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-12d70fc2-9e45-4ed5-8626-e4da28c407bd' class='xr-var-data-in' type='checkbox'><label for='data-12d70fc2-9e45-4ed5-8626-e4da28c407bd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-753c4448-8e31-4fe1-bc56-59a73df4538a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-753c4448-8e31-4fe1-bc56-59a73df4538a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8502fb57-e165-41a2-a4b1-496a1107d406' class='xr-var-data-in' type='checkbox'><label for='data-8502fb57-e165-41a2-a4b1-496a1107d406' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-1cd19e2c-105b-46f6-8a66-5eaced99e5ec' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1cd19e2c-105b-46f6-8a66-5eaced99e5ec' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0a1fcfa0-ab4d-4b4a-9d47-8e5e5b2dd313' class='xr-var-data-in' type='checkbox'><label for='data-0a1fcfa0-ab4d-4b4a-9d47-8e5e5b2dd313' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-ba90d016-cfc4-4600-b97b-0f37315a2fd5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ba90d016-cfc4-4600-b97b-0f37315a2fd5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-005b0199-1d22-48ad-8ccc-46a9beea8852' class='xr-var-data-in' type='checkbox'><label for='data-005b0199-1d22-48ad-8ccc-46a9beea8852' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-2794d605-227e-44ce-9a2b-3e321403e2bc' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2794d605-227e-44ce-9a2b-3e321403e2bc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a51555c3-108e-43fe-9ac5-a292d9ccfce2' class='xr-var-data-in' type='checkbox'><label for='data-a51555c3-108e-43fe-9ac5-a292d9ccfce2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-0ef12c68-8a63-48a6-b5f3-f211a318f940' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0ef12c68-8a63-48a6-b5f3-f211a318f940' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e0d07f87-2ad4-4bc3-8e0c-dc4ff17a0332' class='xr-var-data-in' type='checkbox'><label for='data-e0d07f87-2ad4-4bc3-8e0c-dc4ff17a0332' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-5091e2dc-72f1-4f35-8b4c-ccd1858d7a89' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5091e2dc-72f1-4f35-8b4c-ccd1858d7a89' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-907fea80-7a8b-467c-b9a3-2362fa44e36a' class='xr-var-data-in' type='checkbox'><label for='data-907fea80-7a8b-467c-b9a3-2362fa44e36a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-da58b8a2-95c6-4c43-9ca2-cedb1d114d3c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-da58b8a2-95c6-4c43-9ca2-cedb1d114d3c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-335ddda1-bd71-4a94-a4a5-6a4971cc15b9' class='xr-var-data-in' type='checkbox'><label for='data-335ddda1-bd71-4a94-a4a5-6a4971cc15b9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-9e4f7cf7-f782-4793-a3b9-021614f4f1ba' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9e4f7cf7-f782-4793-a3b9-021614f4f1ba' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6ff21be1-1638-4455-a8c4-79c850bbc7c5' class='xr-var-data-in' type='checkbox'><label for='data-6ff21be1-1638-4455-a8c4-79c850bbc7c5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_id</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-5b220fed-c0a0-403f-b66e-4b3a42836125' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5b220fed-c0a0-403f-b66e-4b3a42836125' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5f005ae0-42ff-43bd-ba06-f2fa3aa08fb9' class='xr-var-data-in' type='checkbox'><label for='data-5f005ae0-42ff-43bd-ba06-f2fa3aa08fb9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-a02f1328-e0b1-4ff5-b29b-c72f54da7661' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a02f1328-e0b1-4ff5-b29b-c72f54da7661' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dff0e818-7724-4f06-bacb-d6479c6f519d' class='xr-var-data-in' type='checkbox'><label for='data-dff0e818-7724-4f06-bacb-d6479c6f519d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-01f8f0bc-9e3e-44fe-a67d-5aac5cf3fe05' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-01f8f0bc-9e3e-44fe-a67d-5aac5cf3fe05' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4521dfe5-cfbc-4e56-bf51-a84497a25368' class='xr-var-data-in' type='checkbox'><label for='data-4521dfe5-cfbc-4e56-bf51-a84497a25368' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;</div><input id='attrs-e4f6df9c-a650-486a-88ce-85c82446a678' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e4f6df9c-a650-486a-88ce-85c82446a678' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-38abd667-23e6-4b05-8a85-2076aabb6a4a' class='xr-var-data-in' type='checkbox'><label for='data-38abd667-23e6-4b05-8a85-2076aabb6a4a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 1) </td>\n",
       "                        <td> (10000, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-79d040eb-4cc5-49cc-8973-6b39daf32cfe' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-79d040eb-4cc5-49cc-8973-6b39daf32cfe' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ba0a88e1-60e5-4723-b869-c892d3910852' class='xr-var-data-in' type='checkbox'><label for='data-ba0a88e1-60e5-4723-b869-c892d3910852' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-37a8b771-6e85-4798-b20d-280d0ed5fabb' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-37a8b771-6e85-4798-b20d-280d0ed5fabb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-baed24c0-1a43-4577-b612-3a94b05821d7' class='xr-var-data-in' type='checkbox'><label for='data-baed24c0-1a43-4577-b612-3a94b05821d7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-d2e25b11-4a6e-40dc-87b8-b8bbe8b21683' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d2e25b11-4a6e-40dc-87b8-b8bbe8b21683' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b8113152-b88a-4dbc-a877-88bce67c8bf0' class='xr-var-data-in' type='checkbox'><label for='data-b8113152-b88a-4dbc-a877-88bce67c8bf0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-13824aef-dafc-4f00-a6b2-032bbdeef6e3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-13824aef-dafc-4f00-a6b2-032bbdeef6e3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2ec447e4-8d27-42be-981c-a6a9db79e670' class='xr-var-data-in' type='checkbox'><label for='data-2ec447e4-8d27-42be-981c-a6a9db79e670' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li></ul></div></li><li class='xr-section-item'><input id='section-5f3eff1b-3fb4-494b-b9d7-f07784b2c545' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-5f3eff1b-3fb4-494b-b9d7-f07784b2c545' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-615494b2-dd31-4ebc-b22f-dd044e43b7b2' class='xr-section-summary-in' type='checkbox'  ><label for='section-615494b2-dd31-4ebc-b22f-dd044e43b7b2' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 28MB\n",
       "Dimensions:               (variants: 10879, samples: 284, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: variants, samples, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/17)\n",
       "    call_AD               (variants, samples, alleles) int8 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_DP               (variants, samples) int8 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    call_GQ               (variants, samples) int8 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    call_genotype         (variants, samples, ploidy) int8 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_genotype_mask    (variants, samples, ploidy) bool 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_genotype_phased  (variants, samples) bool 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    ...                    ...\n",
       "    variant_contig        (variants) int8 11kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_filter        (variants, filters) bool 11kB dask.array<chunksize=(10000, 1), meta=np.ndarray>\n",
       "    variant_id            (variants) object 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_id_mask       (variants) bool 11kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_position      (variants) int32 44kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_quality       (variants) float32 44kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "available-officer",
   "metadata": {},
   "source": [
    "Next we'll use `display_genotypes` to show the the first and last few variants and samples.\n",
    "\n",
    "_Note: sgkit does not store the contig names in an easily accessible form, so we compute a variable `variant_contig_name` in the same dataset storing them for later use, and set an index so we can see the variant name, position, and ID._"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "friendly-nation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>samples</th>\n",
       "      <th>HG00096</th>\n",
       "      <th>HG00099</th>\n",
       "      <th>...</th>\n",
       "      <th>NA21133</th>\n",
       "      <th>NA21143</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>variants</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(1, 904165, .)</th>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(1, 909917, .)</th>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(1, 986963, .)</th>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(1, 1563691, .)</th>\n",
       "      <td>./.</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(1, 1707740, .)</th>\n",
       "      <td>0/1</td>\n",
       "      <td>0/1</td>\n",
       "      <td>...</td>\n",
       "      <td>0/1</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(X, 152660491, .)</th>\n",
       "      <td>./.</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>1/1</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(X, 153031688, .)</th>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(X, 153674876, .)</th>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(X, 153706320, .)</th>\n",
       "      <td>./.</td>\n",
       "      <td>0/0</td>\n",
       "      <td>...</td>\n",
       "      <td>0/0</td>\n",
       "      <td>0/0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(X, 154087368, .)</th>\n",
       "      <td>0/0</td>\n",
       "      <td>1/1</td>\n",
       "      <td>...</td>\n",
       "      <td>1/1</td>\n",
       "      <td>1/1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10879 rows x 284 columns</p></div>"
      ],
      "text/plain": [
       "samples           HG00096 HG00099  ... NA21133 NA21143\n",
       "variants                           ...                \n",
       "(1, 904165, .)        0/0     0/0  ...     0/0     0/0\n",
       "(1, 909917, .)        0/0     0/0  ...     0/0     0/0\n",
       "(1, 986963, .)        0/0     0/0  ...     0/0     0/0\n",
       "(1, 1563691, .)       ./.     0/0  ...     0/0     0/0\n",
       "(1, 1707740, .)       0/1     0/1  ...     0/1     0/0\n",
       "...                   ...     ...  ...     ...     ...\n",
       "(X, 152660491, .)     ./.     0/0  ...     1/1     0/0\n",
       "(X, 153031688, .)     0/0     0/0  ...     0/0     0/0\n",
       "(X, 153674876, .)     0/0     0/0  ...     0/0     0/0\n",
       "(X, 153706320, .)     ./.     0/0  ...     0/0     0/0\n",
       "(X, 154087368, .)     0/0     1/1  ...     1/1     1/1\n",
       "\n",
       "[10879 rows x 284 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds[\"variant_contig_name\"] = ds.contig_id[ds.variant_contig]\n",
    "ds2 = ds.set_index({\"variants\": (\"variant_contig_name\", \"variant_position\", \"variant_id\")})\n",
    "sg.display_genotypes(ds2, max_variants=10, max_samples=5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "durable-insured",
   "metadata": {},
   "source": [
    "We can show the alleles too.\n",
    "\n",
    "_Note: this needs work to make it easier to do_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "forward-testimony",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>variant_allele</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>variant_contig_name</th>\n",
       "      <th>variant_position</th>\n",
       "      <th>variant_id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1</th>\n",
       "      <th>904165</th>\n",
       "      <th>.</th>\n",
       "      <td>[G, A]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909917</th>\n",
       "      <th>.</th>\n",
       "      <td>[G, A]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986963</th>\n",
       "      <th>.</th>\n",
       "      <td>[C, T]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1563691</th>\n",
       "      <th>.</th>\n",
       "      <td>[T, G]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1707740</th>\n",
       "      <th>.</th>\n",
       "      <td>[T, G]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                variant_allele\n",
       "variant_contig_name variant_position variant_id               \n",
       "1                   904165           .                  [G, A]\n",
       "                    909917           .                  [G, A]\n",
       "                    986963           .                  [C, T]\n",
       "                    1563691          .                  [T, G]\n",
       "                    1707740          .                  [T, G]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_variant = ds[[v for v in ds.data_vars if v.startswith(\"variant_\")]].to_dataframe()\n",
    "df_variant.groupby([\"variant_contig_name\", \"variant_position\", \"variant_id\"]).agg({\"variant_allele\": lambda x: list(x)}).head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "systematic-bailey",
   "metadata": {},
   "source": [
    "Show the first five sample IDs by referencing the dataset variable directly:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "thick-newark",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['HG00096', 'HG00099', 'HG00105', 'HG00118', 'HG00129'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.sample_id[:5].values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "important-curtis",
   "metadata": {},
   "source": [
    "## Adding column fields"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "color-accounting",
   "metadata": {},
   "source": [
    "Xarray datasets can have any number of variables added to them, possibly loaded from different sources. Next we'll take a text file (CSV) containing annotations, and use it to annotate the samples in the dataset.\n",
    "\n",
    "First we load the annotation data using regular Pandas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "enhanced-companion",
   "metadata": {},
   "outputs": [],
   "source": [
    "ANNOTATIONS_FILE = \"https://storage.googleapis.com/sgkit-gwas-tutorial/1kg_annotations.txt\"\n",
    "df = pd.read_csv(ANNOTATIONS_FILE, sep=\"\\t\", index_col=\"Sample\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "empirical-queens",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 3500 entries, HG00096 to NA21144\n",
      "Data columns (total 5 columns):\n",
      " #   Column               Non-Null Count  Dtype \n",
      "---  ------               --------------  ----- \n",
      " 0   Population           3500 non-null   object\n",
      " 1   SuperPopulation      3500 non-null   object\n",
      " 2   isFemale             3500 non-null   bool  \n",
      " 3   PurpleHair           3500 non-null   bool  \n",
      " 4   CaffeineConsumption  3500 non-null   int64 \n",
      "dtypes: bool(2), int64(1), object(2)\n",
      "memory usage: 116.2+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ideal-typing",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Population</th>\n",
       "      <th>SuperPopulation</th>\n",
       "      <th>isFemale</th>\n",
       "      <th>PurpleHair</th>\n",
       "      <th>CaffeineConsumption</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sample</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>HG00096</th>\n",
       "      <td>GBR</td>\n",
       "      <td>EUR</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HG00097</th>\n",
       "      <td>GBR</td>\n",
       "      <td>EUR</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HG00098</th>\n",
       "      <td>GBR</td>\n",
       "      <td>EUR</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HG00099</th>\n",
       "      <td>GBR</td>\n",
       "      <td>EUR</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HG00100</th>\n",
       "      <td>GBR</td>\n",
       "      <td>EUR</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NA21137</th>\n",
       "      <td>GIH</td>\n",
       "      <td>SAS</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NA21141</th>\n",
       "      <td>GIH</td>\n",
       "      <td>SAS</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NA21142</th>\n",
       "      <td>GIH</td>\n",
       "      <td>SAS</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NA21143</th>\n",
       "      <td>GIH</td>\n",
       "      <td>SAS</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NA21144</th>\n",
       "      <td>GIH</td>\n",
       "      <td>SAS</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3500 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Population SuperPopulation  isFemale  PurpleHair  CaffeineConsumption\n",
       "Sample                                                                       \n",
       "HG00096        GBR             EUR     False       False                    4\n",
       "HG00097        GBR             EUR      True        True                    4\n",
       "HG00098        GBR             EUR     False       False                    5\n",
       "HG00099        GBR             EUR      True       False                    4\n",
       "HG00100        GBR             EUR      True       False                    5\n",
       "...            ...             ...       ...         ...                  ...\n",
       "NA21137        GIH             SAS      True       False                    1\n",
       "NA21141        GIH             SAS      True        True                    2\n",
       "NA21142        GIH             SAS      True        True                    2\n",
       "NA21143        GIH             SAS      True        True                    5\n",
       "NA21144        GIH             SAS      True       False                    3\n",
       "\n",
       "[3500 rows x 5 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "suited-split",
   "metadata": {},
   "source": [
    "To join the annotation data with the genetic data, we convert it to Xarray, then do a join."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "hidden-custom",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 28MB\n",
       "Dimensions:               (samples: 284, variants: 10879, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: samples, variants, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/22)\n",
       "    call_AD               (variants, samples, alleles) int8 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_DP               (variants, samples) int8 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    call_GQ               (variants, samples) int8 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    call_genotype         (variants, samples, ploidy) int8 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_genotype_mask    (variants, samples, ploidy) bool 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_genotype_phased  (variants, samples) bool 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    ...                    ...\n",
       "    variant_contig_name   (variants) object 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    Population            (samples) object 2kB &#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;\n",
       "    SuperPopulation       (samples) object 2kB &#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;\n",
       "    isFemale              (samples) bool 284B False True False ... False True\n",
       "    PurpleHair            (samples) bool 284B False False False ... True True\n",
       "    CaffeineConsumption   (samples) int64 2kB 4 4 4 3 6 2 4 2 ... 6 4 6 4 6 5 5\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-d871c8f3-d2c8-4f42-9b7c-a671c3c941c6' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-d871c8f3-d2c8-4f42-9b7c-a671c3c941c6' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>samples</span>: 284</li><li><span>variants</span>: 10879</li><li><span>alleles</span>: 2</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-d07fd4f1-fc09-4886-9e21-8a5c22e421a0' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-d07fd4f1-fc09-4886-9e21-8a5c22e421a0' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-e02da178-8354-452c-9334-d0efe8dcdbef' class='xr-section-summary-in' type='checkbox'  checked><label for='section-e02da178-8354-452c-9334-d0efe8dcdbef' class='xr-section-summary' >Data variables: <span>(22)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-cca964e8-a198-4c2a-ad1d-315e70a29abe' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-cca964e8-a198-4c2a-ad1d-315e70a29abe' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6b40e7df-e292-47f2-a31f-82eade5c8c62' class='xr-var-data-in' type='checkbox'><label for='data-6b40e7df-e292-47f2-a31f-82eade5c8c62' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-ba1ab96f-a8fc-467f-8d1f-c5ce3f3698f0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ba1ab96f-a8fc-467f-8d1f-c5ce3f3698f0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cd7f74ee-a286-4fca-815e-bd3ec4fc4f88' class='xr-var-data-in' type='checkbox'><label for='data-cd7f74ee-a286-4fca-815e-bd3ec4fc4f88' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-0991d6d0-9c5b-484f-b9b6-e4c374cf1c6c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0991d6d0-9c5b-484f-b9b6-e4c374cf1c6c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8b23658e-2411-4da5-b57f-6398e50b34be' class='xr-var-data-in' type='checkbox'><label for='data-8b23658e-2411-4da5-b57f-6398e50b34be' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-1f9b731a-a451-464b-b6a1-a38d5da77a35' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1f9b731a-a451-464b-b6a1-a38d5da77a35' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7b8a10a2-8df7-4152-a54d-1f0e13026e37' class='xr-var-data-in' type='checkbox'><label for='data-7b8a10a2-8df7-4152-a54d-1f0e13026e37' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-e6e2d95a-57f5-443c-8825-7768cc3770b3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e6e2d95a-57f5-443c-8825-7768cc3770b3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-12215f52-cd8e-419f-a6c9-e9ba5a1577cd' class='xr-var-data-in' type='checkbox'><label for='data-12215f52-cd8e-419f-a6c9-e9ba5a1577cd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-89db241f-cd2e-4835-bd3f-6c849fd0e24a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-89db241f-cd2e-4835-bd3f-6c849fd0e24a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-67308a76-a18f-433b-94a4-25ece42fc3fc' class='xr-var-data-in' type='checkbox'><label for='data-67308a76-a18f-433b-94a4-25ece42fc3fc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-133a4377-1f47-4e93-9ec0-2c75b2d85088' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-133a4377-1f47-4e93-9ec0-2c75b2d85088' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fe771051-fac5-4884-bd19-8dc925958f95' class='xr-var-data-in' type='checkbox'><label for='data-fe771051-fac5-4884-bd19-8dc925958f95' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-b18008e6-4181-47fc-af29-510eb88ac9e8' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b18008e6-4181-47fc-af29-510eb88ac9e8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-76993eed-f902-4844-8906-67f4d1454ab7' class='xr-var-data-in' type='checkbox'><label for='data-76993eed-f902-4844-8906-67f4d1454ab7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-e7beb6bf-b61d-4550-abec-dbc4c0f9fc27' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e7beb6bf-b61d-4550-abec-dbc4c0f9fc27' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-55d63bb5-6ec4-40ae-9cc4-12706ef40c96' class='xr-var-data-in' type='checkbox'><label for='data-55d63bb5-6ec4-40ae-9cc4-12706ef40c96' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-0e195607-a756-4e6d-8e0f-486a29979f65' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0e195607-a756-4e6d-8e0f-486a29979f65' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8eebcb45-ec17-42d6-8fb6-e5a6efade780' class='xr-var-data-in' type='checkbox'><label for='data-8eebcb45-ec17-42d6-8fb6-e5a6efade780' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-efcd83d3-d396-40bf-9b90-98a3c65ff2c4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-efcd83d3-d396-40bf-9b90-98a3c65ff2c4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2c162f31-59e1-48f7-99fe-3b0eb8a2e02b' class='xr-var-data-in' type='checkbox'><label for='data-2c162f31-59e1-48f7-99fe-3b0eb8a2e02b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;</div><input id='attrs-be635d59-a3b9-4d0b-937c-60cdb902ffd4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-be635d59-a3b9-4d0b-937c-60cdb902ffd4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8ffda6ef-76fe-45f7-8a4a-c729804befe1' class='xr-var-data-in' type='checkbox'><label for='data-8ffda6ef-76fe-45f7-8a4a-c729804befe1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 1) </td>\n",
       "                        <td> (10000, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-a731443c-b71b-4f31-ac6f-bfc644e6aa6b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a731443c-b71b-4f31-ac6f-bfc644e6aa6b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9a6cbeb6-e465-44db-b48d-9dd9a0c9ee3e' class='xr-var-data-in' type='checkbox'><label for='data-9a6cbeb6-e465-44db-b48d-9dd9a0c9ee3e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-ccd4ca41-573a-42f4-a604-41c2229016b9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ccd4ca41-573a-42f4-a604-41c2229016b9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-164539f8-3319-45a7-966d-e50da66da2ea' class='xr-var-data-in' type='checkbox'><label for='data-164539f8-3319-45a7-966d-e50da66da2ea' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-5559683c-d4da-4a9c-beb4-353442c7367b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5559683c-d4da-4a9c-beb4-353442c7367b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fa2b5e7c-28ec-497b-966c-ba7f475b1eef' class='xr-var-data-in' type='checkbox'><label for='data-fa2b5e7c-28ec-497b-966c-ba7f475b1eef' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-4749a519-513b-49de-a01c-1bd266afdfb8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4749a519-513b-49de-a01c-1bd266afdfb8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-466ff504-147e-4bd1-9ef8-3ec50a176cf9' class='xr-var-data-in' type='checkbox'><label for='data-466ff504-147e-4bd1-9ef8-3ec50a176cf9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-e906fc64-4d56-4b6a-82c1-cbee636b9733' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e906fc64-4d56-4b6a-82c1-cbee636b9733' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-faf8dc59-3b42-4728-acd2-24d1c9cb36fd' class='xr-var-data-in' type='checkbox'><label for='data-faf8dc59-3b42-4728-acd2-24d1c9cb36fd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-9933a123-d108-4b90-9f7e-6a22ade0663c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9933a123-d108-4b90-9f7e-6a22ade0663c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-10454850-d8f1-489f-8daf-f47bc7310635' class='xr-var-data-in' type='checkbox'><label for='data-10454850-d8f1-489f-8daf-f47bc7310635' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;GBR&#x27;,\n",
       "       &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;GBR&#x27;, &#x27;CLM&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-55fbca99-beb1-40b3-a43a-807120954f7d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-55fbca99-beb1-40b3-a43a-807120954f7d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-37d76cf5-b3ee-4857-9662-6f927aac0705' class='xr-var-data-in' type='checkbox'><label for='data-37d76cf5-b3ee-4857-9662-6f927aac0705' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-cd132de0-a9a0-49aa-a93a-1b5fd7e73911' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cd132de0-a9a0-49aa-a93a-1b5fd7e73911' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-036e3d37-923f-47f4-9710-7ce1a2f43406' class='xr-var-data-in' type='checkbox'><label for='data-036e3d37-923f-47f4-9710-7ce1a2f43406' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False, False,\n",
       "        True, False, False,  True,  True, False, False, False, False,\n",
       "        True, False, False,  True, False,  True, False, False, False,\n",
       "        True,  True,  True, False,  True,  True,  True, False,  True,\n",
       "        True, False, False,  True, False,  True, False,  True,  True,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False,  True, False,\n",
       "       False, False,  True,  True,  True, False, False, False, False,\n",
       "       False, False, False, False, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "        True,  True, False, False,  True, False, False, False, False,\n",
       "        True,  True,  True,  True, False,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True,  True,\n",
       "        True,  True,  True,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True, False,  True,  True, False,  True,\n",
       "       False,  True, False,  True,  True, False, False, False, False,\n",
       "        True, False,  True,  True, False,  True,  True,  True,  True,\n",
       "        True,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False, False,  True, False,  True, False,\n",
       "       False,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True,  True, False, False, False,  True, False,\n",
       "        True, False, False,  True,  True,  True, False, False, False,\n",
       "       False, False,  True, False, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True, False,  True, False,  True,  True,\n",
       "        True, False, False,  True, False, False,  True, False,  True,\n",
       "       False,  True, False, False,  True,  True, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-732c0ff7-702b-4aec-90fe-0d2491db51fc' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-732c0ff7-702b-4aec-90fe-0d2491db51fc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5217cdd5-7709-45ca-8730-b81de7efd3e3' class='xr-var-data-in' type='checkbox'><label for='data-5217cdd5-7709-45ca-8730-b81de7efd3e3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True,  True, False, False,\n",
       "       False,  True, False,  True,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True, False, False,\n",
       "       False, False,  True, False,  True,  True,  True, False,  True,\n",
       "       False,  True, False, False, False, False,  True, False, False,\n",
       "        True, False, False,  True,  True, False,  True, False, False,\n",
       "       False, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True, False,\n",
       "        True,  True, False, False, False, False,  True, False,  True,\n",
       "       False, False,  True,  True,  True,  True,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True, False, False,\n",
       "        True,  True,  True,  True,  True, False, False,  True,  True,\n",
       "       False, False, False, False, False,  True, False, False, False,\n",
       "       False,  True, False, False, False, False, False, False, False,\n",
       "       False, False,  True, False, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False, False, False, False, False,  True,  True,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True, False, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "       False,  True,  True, False, False, False, False,  True,  True,\n",
       "       False,  True,  True, False,  True,  True, False, False,  True,\n",
       "       False,  True,  True,  True, False, False, False, False, False,\n",
       "       False,  True, False, False, False,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False,  True, False,  True,  True,  True, False, False,\n",
       "       False, False,  True, False, False,  True,  True, False,  True,\n",
       "        True, False, False, False, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 4 2 ... 5 6 4 6 4 6 5 5</div><input id='attrs-ce23cae5-eba6-4ae8-ac5c-a0209193d706' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ce23cae5-eba6-4ae8-ac5c-a0209193d706' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6bf12e3b-f5f6-4365-b113-af5fe63b5a1c' class='xr-var-data-in' type='checkbox'><label for='data-6bf12e3b-f5f6-4365-b113-af5fe63b5a1c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 4, 2, 1, 2, 0, 5, 4, 5, 4, 3, 6, 5, 5, 7, 5, 5,\n",
       "       7, 5, 1, 5, 5, 5, 4, 4, 5, 5, 5, 6, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5,\n",
       "       5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5, 5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4,\n",
       "       6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5, 4, 4, 5, 8, 3, 4, 4, 4, 7, 5, 4,\n",
       "       2, 6, 7, 6, 5, 3, 3, 4, 5, 5, 5, 5, 6, 4, 5, 7, 2, 3, 3, 2, 3, 6,\n",
       "       4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5, 6, 7, 8, 6, 2, 3, 2,\n",
       "       0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5, 5, 3, 1, 1, 4, 3, 2,\n",
       "       4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4, 3, 3, 4, 4, 3, 5,\n",
       "       6, 5, 3, 5, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5, 7, 5, 6, 6, 4,\n",
       "       4, 5, 3, 5, 6, 5, 4, 3, 8, 2, 4, 4, 6, 8, 4, 3, 4, 3, 2, 5, 6, 6,\n",
       "       4, 3, 5, 7, 4, 2, 5, 5, 6, 3, 2, 4, 4, 6, 5, 6, 5, 7, 2, 4, 2, 1,\n",
       "       5, 3, 5, 3, 5, 2, 4, 9, 6, 4, 3, 4, 4, 6, 6, 7, 6, 6, 3, 4, 3, 6,\n",
       "       6, 3, 4, 4, 2, 4, 6, 7, 4, 5, 4, 5, 5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-1016f516-4a6d-47ae-8664-cc5b479793d4' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-1016f516-4a6d-47ae-8664-cc5b479793d4' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-29b1ecb0-0857-471e-a2ed-26519a9b9042' class='xr-section-summary-in' type='checkbox'  ><label for='section-29b1ecb0-0857-471e-a2ed-26519a9b9042' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 28MB\n",
       "Dimensions:               (samples: 284, variants: 10879, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: samples, variants, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/22)\n",
       "    call_AD               (variants, samples, alleles) int8 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_DP               (variants, samples) int8 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    call_GQ               (variants, samples) int8 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    call_genotype         (variants, samples, ploidy) int8 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_genotype_mask    (variants, samples, ploidy) bool 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_genotype_phased  (variants, samples) bool 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    ...                    ...\n",
       "    variant_contig_name   (variants) object 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    Population            (samples) object 2kB 'GBR' 'GBR' 'GBR' ... 'GIH' 'GIH'\n",
       "    SuperPopulation       (samples) object 2kB 'EUR' 'EUR' 'EUR' ... 'SAS' 'SAS'\n",
       "    isFemale              (samples) bool 284B False True False ... False True\n",
       "    PurpleHair            (samples) bool 284B False False False ... True True\n",
       "    CaffeineConsumption   (samples) int64 2kB 4 4 4 3 6 2 4 2 ... 6 4 6 4 6 5 5\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_annotations = pd.DataFrame.to_xarray(df).rename({\"Sample\":\"samples\"})\n",
    "ds = ds.set_index({\"samples\": \"sample_id\"})\n",
    "ds = ds.merge(ds_annotations, join=\"left\")\n",
    "ds = ds.reset_index(\"samples\").reset_coords(drop=True)\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "tough-concentrate",
   "metadata": {},
   "source": [
    "## Query functions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "israeli-saint",
   "metadata": {},
   "source": [
    "We can look at some statistics of the data by converting the relevant dataset variable to a Pandas series, then using its built-in summary functions. Annotation data is usually small enough to load into memory, which is why it's OK using Pandas here.\n",
    "\n",
    "Here's the population distribution by continent:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "floating-republican",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SuperPopulation\n",
       "AFR    1018\n",
       "EUR     669\n",
       "SAS     661\n",
       "EAS     617\n",
       "AMR     535\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_annotations.SuperPopulation.to_series().value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "second-gregory",
   "metadata": {},
   "source": [
    "The distribution of the `CaffeineConsumption` variable:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "advanced-leave",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3500.000000\n",
       "mean        3.983714\n",
       "std         1.702349\n",
       "min        -1.000000\n",
       "25%         3.000000\n",
       "50%         4.000000\n",
       "75%         5.000000\n",
       "max        10.000000\n",
       "Name: CaffeineConsumption, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_annotations.CaffeineConsumption.to_series().describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "applied-retrieval",
   "metadata": {},
   "source": [
    "There are far fewer samples in our dataset than the full 1000 genomes dataset, as we can see from the following queries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "considerable-dragon",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3500"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(ds_annotations.samples)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "gorgeous-fence",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "284"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(ds.samples)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "missing-border",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SuperPopulation\n",
       "AFR    76\n",
       "EAS    72\n",
       "SAS    55\n",
       "EUR    47\n",
       "AMR    34\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.SuperPopulation.to_series().value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "crazy-abraham",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    284.000000\n",
       "mean       4.415493\n",
       "std        1.580549\n",
       "min        0.000000\n",
       "25%        3.000000\n",
       "50%        4.000000\n",
       "75%        5.000000\n",
       "max        9.000000\n",
       "Name: CaffeineConsumption, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.CaffeineConsumption.to_series().describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "automated-oxford",
   "metadata": {},
   "source": [
    "Here's an example of doing an _ad hoc_ query to uncover a biological insight from the data: calculate the counts of each of the 12 possible unique SNPs (4 choices for the reference base * 3 choices for the alternate base)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "wrapped-confusion",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "variant_allele\n",
       "(C, T)    2418\n",
       "(G, A)    2367\n",
       "(A, G)    1929\n",
       "(T, C)    1864\n",
       "(C, A)     494\n",
       "(G, T)     477\n",
       "(T, G)     466\n",
       "(A, C)     451\n",
       "(C, G)     150\n",
       "(G, C)     111\n",
       "(T, A)      77\n",
       "(A, T)      75\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_variant.groupby([\"variant_contig_name\", \"variant_position\", \"variant_id\"])[\"variant_allele\"].apply(tuple).value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "subject-mistake",
   "metadata": {},
   "source": [
    "Often we want to plot the data, to get a feel for how it's distributed. Xarray has some convenience functions for plotting, which we use here to show the distribution of the `DP` field."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "raising-moderator",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1066.67x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dp = ds.call_DP.where(ds.call_DP >= 0) # filter out missing\n",
    "dp.attrs[\"long_name\"] = \"DP\"\n",
    "xr.plot.hist(dp, range=(0, 30), bins=30, size=8, edgecolor=\"black\");"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "capital-roller",
   "metadata": {},
   "source": [
    "## Quality control"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "quarterly-surfing",
   "metadata": {},
   "source": [
    "QC is the process of filtering out poor quality data before running an analysis. This is usually an iterative process.\n",
    "\n",
    "The [`sample_stats`](https://sgkit-dev.github.io/sgkit/latest/generated/sgkit.sample_stats.html) function in sgkit computes a collection of useful metrics for each sample and stores them in new variables. (The Hail equivalent is `sample_qc`.)\n",
    "\n",
    "Here's the dataset _before_ running `sample_stats`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "becoming-colon",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 28MB\n",
       "Dimensions:               (samples: 284, variants: 10879, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: samples, variants, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/22)\n",
       "    call_AD               (variants, samples, alleles) int8 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_DP               (variants, samples) int8 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    call_GQ               (variants, samples) int8 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    call_genotype         (variants, samples, ploidy) int8 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_genotype_mask    (variants, samples, ploidy) bool 6MB dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;\n",
       "    call_genotype_phased  (variants, samples) bool 3MB dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;\n",
       "    ...                    ...\n",
       "    variant_contig_name   (variants) object 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    Population            (samples) object 2kB &#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;\n",
       "    SuperPopulation       (samples) object 2kB &#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;\n",
       "    isFemale              (samples) bool 284B False True False ... False True\n",
       "    PurpleHair            (samples) bool 284B False False False ... True True\n",
       "    CaffeineConsumption   (samples) int64 2kB 4 4 4 3 6 2 4 2 ... 6 4 6 4 6 5 5\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-ae7caebe-377d-4ccf-987f-b78db44e8440' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-ae7caebe-377d-4ccf-987f-b78db44e8440' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>samples</span>: 284</li><li><span>variants</span>: 10879</li><li><span>alleles</span>: 2</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-9c8120dc-175f-4d9f-bddf-39a6cd32071e' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-9c8120dc-175f-4d9f-bddf-39a6cd32071e' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-191913c4-92b9-4a77-9a86-3d787e372cf5' class='xr-section-summary-in' type='checkbox'  checked><label for='section-191913c4-92b9-4a77-9a86-3d787e372cf5' class='xr-section-summary' >Data variables: <span>(22)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-32ad9367-8d1e-4707-897f-cc1fd5dd11d1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-32ad9367-8d1e-4707-897f-cc1fd5dd11d1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a3909ae1-34d9-4fca-8d00-376ef6b4ee5f' class='xr-var-data-in' type='checkbox'><label for='data-a3909ae1-34d9-4fca-8d00-376ef6b4ee5f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-e80884ae-4398-41ef-b4bd-917774e024d7' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e80884ae-4398-41ef-b4bd-917774e024d7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-99bdf320-1a2d-421b-b6cf-e039acc44e7e' class='xr-var-data-in' type='checkbox'><label for='data-99bdf320-1a2d-421b-b6cf-e039acc44e7e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-32c25e28-7533-4948-84cf-2ce2ce4ae8c8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-32c25e28-7533-4948-84cf-2ce2ce4ae8c8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-427def64-6f8a-4350-b202-20bf92056899' class='xr-var-data-in' type='checkbox'><label for='data-427def64-6f8a-4350-b202-20bf92056899' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-99043a3c-afc2-441f-8213-66abe745e635' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-99043a3c-afc2-441f-8213-66abe745e635' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-443ba0cf-0605-4d6a-a456-bebef4fe6116' class='xr-var-data-in' type='checkbox'><label for='data-443ba0cf-0605-4d6a-a456-bebef4fe6116' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-ffa04607-516c-45e7-87f2-076c371f2428' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ffa04607-516c-45e7-87f2-076c371f2428' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-518d45b4-f99f-4d98-9002-8d60ec31fa3a' class='xr-var-data-in' type='checkbox'><label for='data-518d45b4-f99f-4d98-9002-8d60ec31fa3a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-bddfc3a7-766c-4ef1-8076-c9dc452dd215' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bddfc3a7-766c-4ef1-8076-c9dc452dd215' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-644578df-989d-40ca-8f74-c963d6766669' class='xr-var-data-in' type='checkbox'><label for='data-644578df-989d-40ca-8f74-c963d6766669' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-19118a99-2276-4dbc-94a0-22d2ab1cf584' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-19118a99-2276-4dbc-94a0-22d2ab1cf584' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-233a2d1d-13a7-442b-a2ee-0b9caf37ccfd' class='xr-var-data-in' type='checkbox'><label for='data-233a2d1d-13a7-442b-a2ee-0b9caf37ccfd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-6afc3eb8-206e-4f28-9ff9-2786c0b8abc1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6afc3eb8-206e-4f28-9ff9-2786c0b8abc1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f32ea02e-960c-4cd5-a7af-a6fa8b58367e' class='xr-var-data-in' type='checkbox'><label for='data-f32ea02e-960c-4cd5-a7af-a6fa8b58367e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-141670b1-b954-4441-9f38-e9e03019aa2f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-141670b1-b954-4441-9f38-e9e03019aa2f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9b39212a-70ef-4cb1-b923-a3fa0ff9c37f' class='xr-var-data-in' type='checkbox'><label for='data-9b39212a-70ef-4cb1-b923-a3fa0ff9c37f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-6a8339ed-458d-4397-8fd2-b7249bcd497b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6a8339ed-458d-4397-8fd2-b7249bcd497b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1b1aba9e-45ac-4038-9322-0d7b8fd90584' class='xr-var-data-in' type='checkbox'><label for='data-1b1aba9e-45ac-4038-9322-0d7b8fd90584' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-dec0be47-ed0c-45b3-b2f3-e792d894d59b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-dec0be47-ed0c-45b3-b2f3-e792d894d59b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f517ceac-898f-4c27-b041-3a44b78576af' class='xr-var-data-in' type='checkbox'><label for='data-f517ceac-898f-4c27-b041-3a44b78576af' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;</div><input id='attrs-d7e01ae3-1d2f-48f1-bdd0-c33c70f30644' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d7e01ae3-1d2f-48f1-bdd0-c33c70f30644' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bd527644-8f6d-4482-9ba4-e5ca59d1dfd4' class='xr-var-data-in' type='checkbox'><label for='data-bd527644-8f6d-4482-9ba4-e5ca59d1dfd4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 1) </td>\n",
       "                        <td> (10000, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-6b8f6e88-f580-461a-a2ac-538d61be10c8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6b8f6e88-f580-461a-a2ac-538d61be10c8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dfb56b55-087d-40ac-8784-1860749f3449' class='xr-var-data-in' type='checkbox'><label for='data-dfb56b55-087d-40ac-8784-1860749f3449' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-d1bcd81d-2571-4d3d-a94c-883b7c860e82' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d1bcd81d-2571-4d3d-a94c-883b7c860e82' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-87f0d5f0-b4db-47be-a3ca-4b294d01af49' class='xr-var-data-in' type='checkbox'><label for='data-87f0d5f0-b4db-47be-a3ca-4b294d01af49' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-692a82a5-0298-417d-b529-b0d0f9e78831' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-692a82a5-0298-417d-b529-b0d0f9e78831' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1d5f4e71-19c6-497a-a737-e01f33ecef29' class='xr-var-data-in' type='checkbox'><label for='data-1d5f4e71-19c6-497a-a737-e01f33ecef29' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-e2335b11-cba1-4b0e-a893-d7456a9eb4aa' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e2335b11-cba1-4b0e-a893-d7456a9eb4aa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-70d54af0-8351-45e4-a3fe-f732de67709f' class='xr-var-data-in' type='checkbox'><label for='data-70d54af0-8351-45e4-a3fe-f732de67709f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-3f59cdf0-3899-4079-bcea-9ff9fcc99af0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3f59cdf0-3899-4079-bcea-9ff9fcc99af0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-76521e93-0741-4fc6-94df-53bab5e13a2d' class='xr-var-data-in' type='checkbox'><label for='data-76521e93-0741-4fc6-94df-53bab5e13a2d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-b840300a-df82-4e4a-9687-c2fcce878985' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b840300a-df82-4e4a-9687-c2fcce878985' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b42d07b5-bafd-42ac-86ce-e6edef24fdd3' class='xr-var-data-in' type='checkbox'><label for='data-b42d07b5-bafd-42ac-86ce-e6edef24fdd3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;GBR&#x27;,\n",
       "       &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;GBR&#x27;, &#x27;CLM&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-d6db81ee-a820-4a06-be0f-017979a76e7e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d6db81ee-a820-4a06-be0f-017979a76e7e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7f5a43dd-2fe6-45a2-8f0e-a0f46e19cb46' class='xr-var-data-in' type='checkbox'><label for='data-7f5a43dd-2fe6-45a2-8f0e-a0f46e19cb46' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-ea44726b-3f72-4bd7-8fd9-d7734cce5327' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ea44726b-3f72-4bd7-8fd9-d7734cce5327' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-58aa6c0e-ed19-4566-8da4-e949f4372082' class='xr-var-data-in' type='checkbox'><label for='data-58aa6c0e-ed19-4566-8da4-e949f4372082' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False, False,\n",
       "        True, False, False,  True,  True, False, False, False, False,\n",
       "        True, False, False,  True, False,  True, False, False, False,\n",
       "        True,  True,  True, False,  True,  True,  True, False,  True,\n",
       "        True, False, False,  True, False,  True, False,  True,  True,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False,  True, False,\n",
       "       False, False,  True,  True,  True, False, False, False, False,\n",
       "       False, False, False, False, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "        True,  True, False, False,  True, False, False, False, False,\n",
       "        True,  True,  True,  True, False,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True,  True,\n",
       "        True,  True,  True,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True, False,  True,  True, False,  True,\n",
       "       False,  True, False,  True,  True, False, False, False, False,\n",
       "        True, False,  True,  True, False,  True,  True,  True,  True,\n",
       "        True,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False, False,  True, False,  True, False,\n",
       "       False,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True,  True, False, False, False,  True, False,\n",
       "        True, False, False,  True,  True,  True, False, False, False,\n",
       "       False, False,  True, False, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True, False,  True, False,  True,  True,\n",
       "        True, False, False,  True, False, False,  True, False,  True,\n",
       "       False,  True, False, False,  True,  True, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-d89d31c8-1d15-41f2-8a07-3fc0990957f4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d89d31c8-1d15-41f2-8a07-3fc0990957f4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-303098df-a2e4-400b-9540-9dc9f77fa7fe' class='xr-var-data-in' type='checkbox'><label for='data-303098df-a2e4-400b-9540-9dc9f77fa7fe' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True,  True, False, False,\n",
       "       False,  True, False,  True,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True, False, False,\n",
       "       False, False,  True, False,  True,  True,  True, False,  True,\n",
       "       False,  True, False, False, False, False,  True, False, False,\n",
       "        True, False, False,  True,  True, False,  True, False, False,\n",
       "       False, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True, False,\n",
       "        True,  True, False, False, False, False,  True, False,  True,\n",
       "       False, False,  True,  True,  True,  True,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True, False, False,\n",
       "        True,  True,  True,  True,  True, False, False,  True,  True,\n",
       "       False, False, False, False, False,  True, False, False, False,\n",
       "       False,  True, False, False, False, False, False, False, False,\n",
       "       False, False,  True, False, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False, False, False, False, False,  True,  True,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True, False, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "       False,  True,  True, False, False, False, False,  True,  True,\n",
       "       False,  True,  True, False,  True,  True, False, False,  True,\n",
       "       False,  True,  True,  True, False, False, False, False, False,\n",
       "       False,  True, False, False, False,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False,  True, False,  True,  True,  True, False, False,\n",
       "       False, False,  True, False, False,  True,  True, False,  True,\n",
       "        True, False, False, False, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 4 2 ... 5 6 4 6 4 6 5 5</div><input id='attrs-bc5d5309-c407-4453-8c87-b2f234bda3ff' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bc5d5309-c407-4453-8c87-b2f234bda3ff' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-603b8241-ee5c-4d0d-8cb1-ed0c0f30208f' class='xr-var-data-in' type='checkbox'><label for='data-603b8241-ee5c-4d0d-8cb1-ed0c0f30208f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 4, 2, 1, 2, 0, 5, 4, 5, 4, 3, 6, 5, 5, 7, 5, 5,\n",
       "       7, 5, 1, 5, 5, 5, 4, 4, 5, 5, 5, 6, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5,\n",
       "       5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5, 5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4,\n",
       "       6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5, 4, 4, 5, 8, 3, 4, 4, 4, 7, 5, 4,\n",
       "       2, 6, 7, 6, 5, 3, 3, 4, 5, 5, 5, 5, 6, 4, 5, 7, 2, 3, 3, 2, 3, 6,\n",
       "       4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5, 6, 7, 8, 6, 2, 3, 2,\n",
       "       0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5, 5, 3, 1, 1, 4, 3, 2,\n",
       "       4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4, 3, 3, 4, 4, 3, 5,\n",
       "       6, 5, 3, 5, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5, 7, 5, 6, 6, 4,\n",
       "       4, 5, 3, 5, 6, 5, 4, 3, 8, 2, 4, 4, 6, 8, 4, 3, 4, 3, 2, 5, 6, 6,\n",
       "       4, 3, 5, 7, 4, 2, 5, 5, 6, 3, 2, 4, 4, 6, 5, 6, 5, 7, 2, 4, 2, 1,\n",
       "       5, 3, 5, 3, 5, 2, 4, 9, 6, 4, 3, 4, 4, 6, 6, 7, 6, 6, 3, 4, 3, 6,\n",
       "       6, 3, 4, 4, 2, 4, 6, 7, 4, 5, 4, 5, 5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-2115619d-98f9-477d-a8d5-c3a26903e3f5' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-2115619d-98f9-477d-a8d5-c3a26903e3f5' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-cc14c974-45b4-4f3f-bcf6-9ceaf7864796' class='xr-section-summary-in' type='checkbox'  ><label for='section-cc14c974-45b4-4f3f-bcf6-9ceaf7864796' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 28MB\n",
       "Dimensions:               (samples: 284, variants: 10879, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: samples, variants, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/22)\n",
       "    call_AD               (variants, samples, alleles) int8 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_DP               (variants, samples) int8 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    call_GQ               (variants, samples) int8 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    call_genotype         (variants, samples, ploidy) int8 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_genotype_mask    (variants, samples, ploidy) bool 6MB dask.array<chunksize=(10000, 284, 2), meta=np.ndarray>\n",
       "    call_genotype_phased  (variants, samples) bool 3MB dask.array<chunksize=(10000, 284), meta=np.ndarray>\n",
       "    ...                    ...\n",
       "    variant_contig_name   (variants) object 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    Population            (samples) object 2kB 'GBR' 'GBR' 'GBR' ... 'GIH' 'GIH'\n",
       "    SuperPopulation       (samples) object 2kB 'EUR' 'EUR' 'EUR' ... 'SAS' 'SAS'\n",
       "    isFemale              (samples) bool 284B False True False ... False True\n",
       "    PurpleHair            (samples) bool 284B False False False ... True True\n",
       "    CaffeineConsumption   (samples) int64 2kB 4 4 4 3 6 2 4 2 ... 6 4 6 4 6 5 5\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cognitive-aquarium",
   "metadata": {},
   "source": [
    "We can see the new variables (with names beginning `sample_`) after we run `sample_stats`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "incoming-valuation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 28MB\n",
       "Dimensions:               (samples: 284, variants: 10879, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: samples, variants, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/28)\n",
       "    sample_n_called       (samples) int64 2kB dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;\n",
       "    sample_call_rate      (samples) float64 2kB dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;\n",
       "    sample_n_het          (samples) int64 2kB dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;\n",
       "    sample_n_hom_ref      (samples) int64 2kB dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;\n",
       "    sample_n_hom_alt      (samples) int64 2kB dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;\n",
       "    sample_n_non_ref      (samples) int64 2kB dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;\n",
       "    ...                    ...\n",
       "    variant_contig_name   (variants) object 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    Population            (samples) object 2kB &#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;\n",
       "    SuperPopulation       (samples) object 2kB &#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;\n",
       "    isFemale              (samples) bool 284B False True False ... False True\n",
       "    PurpleHair            (samples) bool 284B False False False ... True True\n",
       "    CaffeineConsumption   (samples) int64 2kB 4 4 4 3 6 2 4 2 ... 6 4 6 4 6 5 5\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-2f8d0143-42d2-40dc-b82e-1fe23d1606b5' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-2f8d0143-42d2-40dc-b82e-1fe23d1606b5' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>samples</span>: 284</li><li><span>variants</span>: 10879</li><li><span>alleles</span>: 2</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-52607c0c-6eef-4225-8ce1-b2ffd278bf84' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-52607c0c-6eef-4225-8ce1-b2ffd278bf84' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-acf6d7f1-4338-4501-9651-8fdc1ae3e73e' class='xr-section-summary-in' type='checkbox'  checked><label for='section-acf6d7f1-4338-4501-9651-8fdc1ae3e73e' class='xr-section-summary' >Data variables: <span>(28)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_called</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-2cea5176-4052-456e-a613-7734634ad8bc' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2cea5176-4052-456e-a613-7734634ad8bc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6ef40062-ba3e-4791-93df-f31670e08920' class='xr-var-data-in' type='checkbox'><label for='data-6ef40062-ba3e-4791-93df-f31670e08920' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_call_rate</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-fc8a5f2e-acad-4da3-aed1-20ebe893151b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fc8a5f2e-acad-4da3-aed1-20ebe893151b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-85f16614-4504-4dd0-98e0-9d571e3ea5f9' class='xr-var-data-in' type='checkbox'><label for='data-85f16614-4504-4dd0-98e0-9d571e3ea5f9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_het</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-94f96916-cfc6-42f3-aa82-e4df044f7e77' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-94f96916-cfc6-42f3-aa82-e4df044f7e77' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5ad162e9-5ced-41ad-89a7-1fb7694dd039' class='xr-var-data-in' type='checkbox'><label for='data-5ad162e9-5ced-41ad-89a7-1fb7694dd039' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-464fd20e-1a49-4a32-aedd-fb2a73542658' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-464fd20e-1a49-4a32-aedd-fb2a73542658' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5bb45b32-454d-4571-908b-bca58f103096' class='xr-var-data-in' type='checkbox'><label for='data-5bb45b32-454d-4571-908b-bca58f103096' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_alt</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-979c1107-cb1f-473f-82f2-22e8e5a9cd4e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-979c1107-cb1f-473f-82f2-22e8e5a9cd4e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-30025d64-9d4e-420e-85fa-65cae958dd4a' class='xr-var-data-in' type='checkbox'><label for='data-30025d64-9d4e-420e-85fa-65cae958dd4a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_non_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(284,), meta=np.ndarray&gt;</div><input id='attrs-da7eb1ab-ec7f-48ac-aee8-e31ed49c1817' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-da7eb1ab-ec7f-48ac-aee8-e31ed49c1817' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b861fe8f-dc5f-46aa-aa97-536c6be068b9' class='xr-var-data-in' type='checkbox'><label for='data-b861fe8f-dc5f-46aa-aa97-536c6be068b9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                        <td> 2.22 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (284,) </td>\n",
       "                        <td> (284,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-5a492058-c0b3-488d-9769-20155bd85c50' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5a492058-c0b3-488d-9769-20155bd85c50' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-02afe50e-9ae7-4132-a258-571bbe095e31' class='xr-var-data-in' type='checkbox'><label for='data-02afe50e-9ae7-4132-a258-571bbe095e31' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-b19bedf2-216a-4732-a77a-b73cd70642aa' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b19bedf2-216a-4732-a77a-b73cd70642aa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-90446098-1a78-438d-86e6-3f06f14cf771' class='xr-var-data-in' type='checkbox'><label for='data-90446098-1a78-438d-86e6-3f06f14cf771' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-2bd91649-6e13-42d5-93e0-89028eda9303' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2bd91649-6e13-42d5-93e0-89028eda9303' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e9db5d53-ff45-41e8-a9ba-f727230255cc' class='xr-var-data-in' type='checkbox'><label for='data-e9db5d53-ff45-41e8-a9ba-f727230255cc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-06a4ef74-f231-4866-8f72-a500fe361c8d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-06a4ef74-f231-4866-8f72-a500fe361c8d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c4c08321-cd42-469f-be33-9f3243eab809' class='xr-var-data-in' type='checkbox'><label for='data-c4c08321-cd42-469f-be33-9f3243eab809' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284, 2), meta=np.ndarray&gt;</div><input id='attrs-fe4dd95f-c4d1-4dff-ac54-f0ee47a0ee68' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-fe4dd95f-c4d1-4dff-ac54-f0ee47a0ee68' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-240d911c-9154-4113-94d8-731305bd183c' class='xr-var-data-in' type='checkbox'><label for='data-240d911c-9154-4113-94d8-731305bd183c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.89 MiB </td>\n",
       "                        <td> 5.42 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284, 2) </td>\n",
       "                        <td> (10000, 284, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"30\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"95\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.15329994890719 10.0,30.56506465478954\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.15329994890719 80.58823529411765,101.15329994890719\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.153300\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.870768\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.870768)\">284</text>\n",
       "  <text x=\"35.294118\" y=\"85.859182\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.859182)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 284), meta=np.ndarray&gt;</div><input id='attrs-7f747de2-f0b1-4d86-be84-b901c86f4542' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7f747de2-f0b1-4d86-be84-b901c86f4542' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-edc03253-244e-4959-8bb2-bfad80391773' class='xr-var-data-in' type='checkbox'><label for='data-edc03253-244e-4959-8bb2-bfad80391773' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.95 MiB </td>\n",
       "                        <td> 2.71 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 284) </td>\n",
       "                        <td> (10000, 284) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"80\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"30\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"30\" y1=\"0\" x2=\"30\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 30.56506465478954,0.0 30.56506465478954,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.282532\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >284</text>\n",
       "  <text x=\"50.565065\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,50.565065,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-2c825239-5c40-416d-a6a9-a931a76c294f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2c825239-5c40-416d-a6a9-a931a76c294f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-df88aeb8-b42d-4249-ab38-1dfa48ca65f6' class='xr-var-data-in' type='checkbox'><label for='data-df88aeb8-b42d-4249-ab38-1dfa48ca65f6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-e07a2f03-f278-4cbd-b66a-a1fdae6c3724' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e07a2f03-f278-4cbd-b66a-a1fdae6c3724' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0d1f4fdd-8e16-40f8-a8e1-c77f92ffb37c' class='xr-var-data-in' type='checkbox'><label for='data-0d1f4fdd-8e16-40f8-a8e1-c77f92ffb37c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-594cfbc9-8798-464a-82bb-45014afc829c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-594cfbc9-8798-464a-82bb-45014afc829c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-010ce5de-a6eb-479d-92aa-2457d89b8592' class='xr-var-data-in' type='checkbox'><label for='data-010ce5de-a6eb-479d-92aa-2457d89b8592' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-a294638e-cd92-4b81-983a-39595bc9cd85' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a294638e-cd92-4b81-983a-39595bc9cd85' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5fed7fe7-9c04-4236-8651-7ee8ef9e6823' class='xr-var-data-in' type='checkbox'><label for='data-5fed7fe7-9c04-4236-8651-7ee8ef9e6823' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-6c1351d7-6e2f-4a32-9b04-66aafbbdb976' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6c1351d7-6e2f-4a32-9b04-66aafbbdb976' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-adad2b4c-997a-4415-9631-eed83d8f5761' class='xr-var-data-in' type='checkbox'><label for='data-adad2b4c-997a-4415-9631-eed83d8f5761' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;</div><input id='attrs-e00c8fb7-457b-4bb8-96be-67cf3d223ade' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e00c8fb7-457b-4bb8-96be-67cf3d223ade' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-071ea36e-c90f-4c87-a83a-912110d81beb' class='xr-var-data-in' type='checkbox'><label for='data-071ea36e-c90f-4c87-a83a-912110d81beb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 1) </td>\n",
       "                        <td> (10000, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-a989ebae-1702-42d7-9d4b-65214750e963' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a989ebae-1702-42d7-9d4b-65214750e963' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-db8743b6-d68d-4313-a292-13e73d876026' class='xr-var-data-in' type='checkbox'><label for='data-db8743b6-d68d-4313-a292-13e73d876026' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-38713627-b534-420a-9add-da4df58df793' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-38713627-b534-420a-9add-da4df58df793' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1b6ac54f-653c-411e-9405-272d3781d265' class='xr-var-data-in' type='checkbox'><label for='data-1b6ac54f-653c-411e-9405-272d3781d265' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-7d03deda-45b5-43bb-bc8f-c6692136cb57' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7d03deda-45b5-43bb-bc8f-c6692136cb57' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-09e542d3-6a3f-4b72-846a-77f6fb97350e' class='xr-var-data-in' type='checkbox'><label for='data-09e542d3-6a3f-4b72-846a-77f6fb97350e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-95cbdd4f-2d3b-40cf-ad84-6f1b39f20953' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-95cbdd4f-2d3b-40cf-ad84-6f1b39f20953' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-52202505-c925-4fb6-a588-ba66b188006a' class='xr-var-data-in' type='checkbox'><label for='data-52202505-c925-4fb6-a588-ba66b188006a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-699443c4-89d3-4e02-a5ae-b079eb39f239' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-699443c4-89d3-4e02-a5ae-b079eb39f239' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ce6218cd-8842-4e78-8887-050aa04d6945' class='xr-var-data-in' type='checkbox'><label for='data-ce6218cd-8842-4e78-8887-050aa04d6945' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-ce01c097-72bb-41a6-88ea-594f6e565b68' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ce01c097-72bb-41a6-88ea-594f6e565b68' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8fbb02e9-53c6-4daa-9f9e-a96f03ea3a10' class='xr-var-data-in' type='checkbox'><label for='data-8fbb02e9-53c6-4daa-9f9e-a96f03ea3a10' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;GBR&#x27;,\n",
       "       &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;GBR&#x27;, &#x27;CLM&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-487285e0-5b8d-4324-84e1-1c8d6d091916' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-487285e0-5b8d-4324-84e1-1c8d6d091916' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-95bf3321-55b0-4e59-b4ad-06c85947036e' class='xr-var-data-in' type='checkbox'><label for='data-95bf3321-55b0-4e59-b4ad-06c85947036e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-ddcd94b2-c974-49d2-8c26-5b2f0f875e00' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ddcd94b2-c974-49d2-8c26-5b2f0f875e00' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-247662e8-200f-4391-bae0-da0d75197281' class='xr-var-data-in' type='checkbox'><label for='data-247662e8-200f-4391-bae0-da0d75197281' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False, False,\n",
       "        True, False, False,  True,  True, False, False, False, False,\n",
       "        True, False, False,  True, False,  True, False, False, False,\n",
       "        True,  True,  True, False,  True,  True,  True, False,  True,\n",
       "        True, False, False,  True, False,  True, False,  True,  True,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False,  True, False,\n",
       "       False, False,  True,  True,  True, False, False, False, False,\n",
       "       False, False, False, False, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "        True,  True, False, False,  True, False, False, False, False,\n",
       "        True,  True,  True,  True, False,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True,  True,\n",
       "        True,  True,  True,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True, False,  True,  True, False,  True,\n",
       "       False,  True, False,  True,  True, False, False, False, False,\n",
       "        True, False,  True,  True, False,  True,  True,  True,  True,\n",
       "        True,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False, False,  True, False,  True, False,\n",
       "       False,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True,  True, False, False, False,  True, False,\n",
       "        True, False, False,  True,  True,  True, False, False, False,\n",
       "       False, False,  True, False, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True, False,  True, False,  True,  True,\n",
       "        True, False, False,  True, False, False,  True, False,  True,\n",
       "       False,  True, False, False,  True,  True, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-3fa775c6-af09-433c-89ae-0fe6a2d21bb8' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3fa775c6-af09-433c-89ae-0fe6a2d21bb8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9fb01740-69e2-41d7-8dfc-110e11ee2349' class='xr-var-data-in' type='checkbox'><label for='data-9fb01740-69e2-41d7-8dfc-110e11ee2349' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True,  True, False, False,\n",
       "       False,  True, False,  True,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True, False, False,\n",
       "       False, False,  True, False,  True,  True,  True, False,  True,\n",
       "       False,  True, False, False, False, False,  True, False, False,\n",
       "        True, False, False,  True,  True, False,  True, False, False,\n",
       "       False, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True, False,\n",
       "        True,  True, False, False, False, False,  True, False,  True,\n",
       "       False, False,  True,  True,  True,  True,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True, False, False,\n",
       "        True,  True,  True,  True,  True, False, False,  True,  True,\n",
       "       False, False, False, False, False,  True, False, False, False,\n",
       "       False,  True, False, False, False, False, False, False, False,\n",
       "       False, False,  True, False, False,  True,  True,  True, False,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False, False, False, False, False,  True,  True,  True,  True,\n",
       "        True, False, False,  True, False,  True,  True, False, False,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "       False,  True,  True, False, False, False, False,  True,  True,\n",
       "       False,  True,  True, False,  True,  True, False, False,  True,\n",
       "       False,  True,  True,  True, False, False, False, False, False,\n",
       "       False,  True, False, False, False,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False,  True, False,  True,  True,  True, False, False,\n",
       "       False, False,  True, False, False,  True,  True, False,  True,\n",
       "        True, False, False, False, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 4 2 ... 5 6 4 6 4 6 5 5</div><input id='attrs-fd25b82b-f869-4678-9ef8-6b96af018454' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fd25b82b-f869-4678-9ef8-6b96af018454' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-01bde634-7d1e-47ca-ae70-8698a9ee2f70' class='xr-var-data-in' type='checkbox'><label for='data-01bde634-7d1e-47ca-ae70-8698a9ee2f70' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 4, 2, 1, 2, 0, 5, 4, 5, 4, 3, 6, 5, 5, 7, 5, 5,\n",
       "       7, 5, 1, 5, 5, 5, 4, 4, 5, 5, 5, 6, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5,\n",
       "       5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5, 5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4,\n",
       "       6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5, 4, 4, 5, 8, 3, 4, 4, 4, 7, 5, 4,\n",
       "       2, 6, 7, 6, 5, 3, 3, 4, 5, 5, 5, 5, 6, 4, 5, 7, 2, 3, 3, 2, 3, 6,\n",
       "       4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5, 6, 7, 8, 6, 2, 3, 2,\n",
       "       0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5, 5, 3, 1, 1, 4, 3, 2,\n",
       "       4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4, 3, 3, 4, 4, 3, 5,\n",
       "       6, 5, 3, 5, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5, 7, 5, 6, 6, 4,\n",
       "       4, 5, 3, 5, 6, 5, 4, 3, 8, 2, 4, 4, 6, 8, 4, 3, 4, 3, 2, 5, 6, 6,\n",
       "       4, 3, 5, 7, 4, 2, 5, 5, 6, 3, 2, 4, 4, 6, 5, 6, 5, 7, 2, 4, 2, 1,\n",
       "       5, 3, 5, 3, 5, 2, 4, 9, 6, 4, 3, 4, 4, 6, 6, 7, 6, 6, 3, 4, 3, 6,\n",
       "       6, 3, 4, 4, 2, 4, 6, 7, 4, 5, 4, 5, 5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-dc46ba14-5dc8-4078-a37b-eb87eaff78ac' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-dc46ba14-5dc8-4078-a37b-eb87eaff78ac' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-3b7bbe7f-6153-4cd8-9a14-466743f4ea70' class='xr-section-summary-in' type='checkbox'  ><label for='section-3b7bbe7f-6153-4cd8-9a14-466743f4ea70' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 28MB\n",
       "Dimensions:               (samples: 284, variants: 10879, alleles: 2,\n",
       "                           ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: samples, variants, alleles, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/28)\n",
       "    sample_n_called       (samples) int64 2kB dask.array<chunksize=(284,), meta=np.ndarray>\n",
       "    sample_call_rate      (samples) float64 2kB dask.array<chunksize=(284,), meta=np.ndarray>\n",
       "    sample_n_het          (samples) int64 2kB dask.array<chunksize=(284,), meta=np.ndarray>\n",
       "    sample_n_hom_ref      (samples) int64 2kB dask.array<chunksize=(284,), meta=np.ndarray>\n",
       "    sample_n_hom_alt      (samples) int64 2kB dask.array<chunksize=(284,), meta=np.ndarray>\n",
       "    sample_n_non_ref      (samples) int64 2kB dask.array<chunksize=(284,), meta=np.ndarray>\n",
       "    ...                    ...\n",
       "    variant_contig_name   (variants) object 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    Population            (samples) object 2kB 'GBR' 'GBR' 'GBR' ... 'GIH' 'GIH'\n",
       "    SuperPopulation       (samples) object 2kB 'EUR' 'EUR' 'EUR' ... 'SAS' 'SAS'\n",
       "    isFemale              (samples) bool 284B False True False ... False True\n",
       "    PurpleHair            (samples) bool 284B False False False ... True True\n",
       "    CaffeineConsumption   (samples) int64 2kB 4 4 4 3 6 2 4 2 ... 6 4 6 4 6 5 5\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds = sg.sample_stats(ds)\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "together-drink",
   "metadata": {},
   "source": [
    "We can plot the metrics next."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "dimensional-merchandise",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1066.67x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds.sample_call_rate.attrs[\"long_name\"] = \"Sample call rate\"\n",
    "xr.plot.hist(ds.sample_call_rate, range=(.88,1), bins=50, size=8, edgecolor=\"black\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "certain-needle",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1066.67x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gq = ds.call_GQ.where(ds.call_GQ >= 0) # filter out missing\n",
    "sample_gq_mean = gq.mean(dim=\"variants\")\n",
    "sample_gq_mean.attrs[\"long_name\"] = \"Mean Sample GQ\"\n",
    "xr.plot.hist(sample_gq_mean, range=(10,70), bins=60, size=8, edgecolor=\"black\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "north-bryan",
   "metadata": {},
   "outputs": [],
   "source": [
    "dp = ds.call_DP.where(ds.call_DP >= 0) # filter out missing\n",
    "sample_dp_mean = dp.mean(dim=\"variants\")\n",
    "sample_dp_mean.attrs[\"long_name\"] = \"Mean Sample DP\"\n",
    "ds[\"sample_dp_mean\"] = sample_dp_mean # add new data array to dataset\n",
    "# Following does not work with recent versions of xarray, see https://github.com/sgkit-dev/sgkit/issues/934\n",
    "#ds.plot.scatter(x=\"sample_dp_mean\", y=\"sample_call_rate\", size=8, s=10);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "voluntary-dietary",
   "metadata": {},
   "source": [
    "The following removes outliers using an arbitrary cutoff."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "handed-reducing",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "After filter, 250/284 samples remain.\n"
     ]
    }
   ],
   "source": [
    "ds = ds.sel(samples=((ds.sample_dp_mean >= 4) & (ds.sample_call_rate >= 0.97)).compute())\n",
    "print(f\"After filter, {len(ds.samples)}/284 samples remain.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "wicked-threshold",
   "metadata": {},
   "source": [
    "Genotype QC is more complicated. First we calculate a variable `ab`, which is the fraction of reads that were the alternate allele."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "selective-interval",
   "metadata": {},
   "outputs": [],
   "source": [
    "# fill rows with nan where no alternate alleles were read or where sum of reads is 0\n",
    "ad1 = ds.call_AD.sel(dict(alleles=1)).pipe(lambda v: v.where(v >= 0))\n",
    "adsum = ds.call_AD.sum(dim=\"alleles\").pipe(lambda v: v.where(v != 0))\n",
    "# compute alternate allele read fraction\n",
    "ab = ad1 / adsum"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "transsexual-macro",
   "metadata": {},
   "source": [
    "Then we can use the `ab` variable in the filter condition, to filter homozygous reference calls with >10% alternate reads, homozygous alternate calls with >10% reference reads, or heterozygote calls without a ref/alt balance near 50%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "bearing-jenny",
   "metadata": {},
   "outputs": [],
   "source": [
    "GT = ds.call_genotype\n",
    "hom_ref = (GT == 0).all(dim=\"ploidy\")\n",
    "het = GT[..., 0] != GT[..., 1]\n",
    "hom_alt = ((GT > 0) & (GT[..., 0] == GT)).all(dim=\"ploidy\")\n",
    "filter_condition_ab = ((hom_ref & (ab <= 0.1)) |\n",
    "                        (het & (ab >= 0.25) & (ab <= 0.75)) |\n",
    "                        (hom_alt & (ab >= 0.9)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "painted-terminal",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filtering 3.65% entries out of downstream analysis.\n"
     ]
    }
   ],
   "source": [
    "filter_mask = xr.where(ds.call_genotype_mask, True, filter_condition_ab)\n",
    "fraction_filtered = GT.where(~filter_mask).count().values / GT.size\n",
    "print(f\"Filtering {fraction_filtered * 100:.2f}% entries out of downstream analysis.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "israeli-harris",
   "metadata": {},
   "source": [
    "_Note: genotype QC is filtering out slightly different numbers of entries compared to the Hail tutorial._"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "banner-structure",
   "metadata": {},
   "source": [
    "Variant QC is similar. This time we use the [`variant_stats`](https://sgkit-dev.github.io/sgkit/latest/generated/sgkit.variant_stats.html) function, but we won't do any filtering on these variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "specialized-train",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 26MB\n",
       "Dimensions:                   (variants: 10879, alleles: 2, samples: 250,\n",
       "                               ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: variants, alleles, samples, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/38)\n",
       "    variant_n_called          (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_call_rate         (variants) float64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_n_het             (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_n_hom_ref         (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_n_hom_alt         (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_n_non_ref         (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    ...                        ...\n",
       "    Population                (samples) object 2kB &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;\n",
       "    SuperPopulation           (samples) object 2kB &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;\n",
       "    isFemale                  (samples) bool 250B False True ... False True\n",
       "    PurpleHair                (samples) bool 250B False False ... True True\n",
       "    CaffeineConsumption       (samples) int64 2kB 4 4 4 3 6 2 2 ... 4 6 4 6 5 5\n",
       "    sample_dp_mean            (samples) float32 1kB dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-b5398d0f-80aa-4cfc-90cd-3c2c3f1e629d' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-b5398d0f-80aa-4cfc-90cd-3c2c3f1e629d' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>variants</span>: 10879</li><li><span>alleles</span>: 2</li><li><span>samples</span>: 250</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-a6a1a1a8-3286-4969-8dab-1b6713eba7fb' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-a6a1a1a8-3286-4969-8dab-1b6713eba7fb' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-43461ce4-10df-41cc-9100-4f156eb23db7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-43461ce4-10df-41cc-9100-4f156eb23db7' class='xr-section-summary' >Data variables: <span>(38)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_called</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-0b5c9011-52c7-4ccb-ac77-32e192b3dc70' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0b5c9011-52c7-4ccb-ac77-32e192b3dc70' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c118c0e9-1098-40c8-aa46-413f106a813e' class='xr-var-data-in' type='checkbox'><label for='data-c118c0e9-1098-40c8-aa46-413f106a813e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_call_rate</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-64e4e5a9-5ad0-491b-aede-c81cc44ea9bd' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-64e4e5a9-5ad0-491b-aede-c81cc44ea9bd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7521192b-99bf-40ca-b10b-566d17d6ebfd' class='xr-var-data-in' type='checkbox'><label for='data-7521192b-99bf-40ca-b10b-566d17d6ebfd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_het</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-508abb99-8ade-4bc7-a087-8a13603489c1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-508abb99-8ade-4bc7-a087-8a13603489c1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e9ddc62b-58f5-4eb0-85c4-e56862424225' class='xr-var-data-in' type='checkbox'><label for='data-e9ddc62b-58f5-4eb0-85c4-e56862424225' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-fb332f71-a57f-4228-af08-11a413f3e31c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fb332f71-a57f-4228-af08-11a413f3e31c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d800cf30-a955-4268-ade8-f047081e267c' class='xr-var-data-in' type='checkbox'><label for='data-d800cf30-a955-4268-ade8-f047081e267c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_alt</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-e1d1e59f-ea4a-46b0-a575-4075fd48c011' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e1d1e59f-ea4a-46b0-a575-4075fd48c011' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5ac67476-7cae-4c0b-9e4f-9e1bdf3aa970' class='xr-var-data-in' type='checkbox'><label for='data-5ac67476-7cae-4c0b-9e4f-9e1bdf3aa970' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_non_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-db9685e2-7fbe-4340-b524-dac489908c98' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-db9685e2-7fbe-4340-b524-dac489908c98' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f555421a-7adc-40c3-b878-d4c972762a7b' class='xr-var-data-in' type='checkbox'><label for='data-f555421a-7adc-40c3-b878-d4c972762a7b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_count</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-7e414856-cbe7-4f4d-b2df-65b50b016489' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7e414856-cbe7-4f4d-b2df-65b50b016489' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-62103103-a7bd-4ba9-9e32-084107969f93' class='xr-var-data-in' type='checkbox'><label for='data-62103103-a7bd-4ba9-9e32-084107969f93' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>Variant allele counts. With shape (variants, alleles) and values\n",
       "corresponding to the number of non-missing occurrences of each allele.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_total</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-820bc611-33ca-4965-abae-c4c97fd7ddd1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-820bc611-33ca-4965-abae-c4c97fd7ddd1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f41135dc-77ed-4b0b-aa0b-f485ed9d47c2' class='xr-var-data-in' type='checkbox'><label for='data-f41135dc-77ed-4b0b-aa0b-f485ed9d47c2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_frequency</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-6e433dab-1d23-4a5b-bfba-e934f4ecb84e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6e433dab-1d23-4a5b-bfba-e934f4ecb84e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0b2c690b-b36e-45c4-85e5-829e47d97517' class='xr-var-data-in' type='checkbox'><label for='data-0b2c690b-b36e-45c4-85e5-829e47d97517' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 13 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_called</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-a6e324db-7adb-42ca-9cc5-ab7913b8b961' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a6e324db-7adb-42ca-9cc5-ab7913b8b961' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c5bcb074-69fd-4eac-a2ad-6b025dfb03f3' class='xr-var-data-in' type='checkbox'><label for='data-c5bcb074-69fd-4eac-a2ad-6b025dfb03f3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_call_rate</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-534e2f64-eff9-46ee-b227-f410457e6cd0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-534e2f64-eff9-46ee-b227-f410457e6cd0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-02eff125-6d24-4d8c-9cdc-1f2f3a4449fb' class='xr-var-data-in' type='checkbox'><label for='data-02eff125-6d24-4d8c-9cdc-1f2f3a4449fb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Sample call rate</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_het</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-e02ea845-003b-44f0-8dba-124802eb04fa' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e02ea845-003b-44f0-8dba-124802eb04fa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-08221196-d3d6-4e3d-9f9b-1eba05c94e0e' class='xr-var-data-in' type='checkbox'><label for='data-08221196-d3d6-4e3d-9f9b-1eba05c94e0e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-7b0732d5-e251-481a-aabe-f4af0a48c571' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7b0732d5-e251-481a-aabe-f4af0a48c571' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d4883b33-c579-4e71-9cae-4a0786907267' class='xr-var-data-in' type='checkbox'><label for='data-d4883b33-c579-4e71-9cae-4a0786907267' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_alt</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-d9a14b13-074f-47a8-b98e-3f2243e3bd9f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d9a14b13-074f-47a8-b98e-3f2243e3bd9f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-06e6e3c3-b106-4879-a36c-fed60c94ba5e' class='xr-var-data-in' type='checkbox'><label for='data-06e6e3c3-b106-4879-a36c-fed60c94ba5e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_non_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-2f703122-0fbe-40f9-a874-a9b4db55171a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2f703122-0fbe-40f9-a874-a9b4db55171a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9378c9fa-21c9-4b8e-9da6-0f2f06519fe0' class='xr-var-data-in' type='checkbox'><label for='data-9378c9fa-21c9-4b8e-9da6-0f2f06519fe0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-6786a7d2-ee07-4225-8abf-742e67dbf4e4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6786a7d2-ee07-4225-8abf-742e67dbf4e4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7c3fecc1-b05f-44ee-b998-41aaa604aecb' class='xr-var-data-in' type='checkbox'><label for='data-7c3fecc1-b05f-44ee-b998-41aaa604aecb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.19 MiB </td>\n",
       "                        <td> 4.77 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250, 2) </td>\n",
       "                        <td> (10000, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"150\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"29\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"29\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"94\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,100.4104163302228 10.0,29.82218103610515\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"100\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,100.4104163302228 80.58823529411765,100.4104163302228\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"120.410416\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.499326\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.499326)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"85.116299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.116299)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250), meta=np.ndarray&gt;</div><input id='attrs-bd69f245-c3bb-441d-bbc5-bd5736ea80b6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bd69f245-c3bb-441d-bbc5-bd5736ea80b6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a2fe8c62-875c-43d7-af56-d22ba9219e63' class='xr-var-data-in' type='checkbox'><label for='data-a2fe8c62-875c-43d7-af56-d22ba9219e63' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                        <td> 2.38 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250) </td>\n",
       "                        <td> (10000, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"79\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"29\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"29\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 29.82218103610515,0.0 29.82218103610515,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"14.911091\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"49.822181\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,49.822181,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250), meta=np.ndarray&gt;</div><input id='attrs-25d0f095-eef3-4935-a646-d1c8c4b69410' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-25d0f095-eef3-4935-a646-d1c8c4b69410' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cadcb533-08cc-4e3a-8f5c-15b99ef9c50a' class='xr-var-data-in' type='checkbox'><label for='data-cadcb533-08cc-4e3a-8f5c-15b99ef9c50a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                        <td> 2.38 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250) </td>\n",
       "                        <td> (10000, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"79\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"29\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"29\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 29.82218103610515,0.0 29.82218103610515,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"14.911091\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"49.822181\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,49.822181,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-367008a9-2e00-42f0-aa6f-b35a08312c8d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-367008a9-2e00-42f0-aa6f-b35a08312c8d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d3bf9a68-0cdd-4ceb-9986-53e7fcc24055' class='xr-var-data-in' type='checkbox'><label for='data-d3bf9a68-0cdd-4ceb-9986-53e7fcc24055' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.19 MiB </td>\n",
       "                        <td> 4.77 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250, 2) </td>\n",
       "                        <td> (10000, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"150\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"29\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"29\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"94\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,100.4104163302228 10.0,29.82218103610515\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"100\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,100.4104163302228 80.58823529411765,100.4104163302228\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"120.410416\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.499326\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.499326)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"85.116299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.116299)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-c2900213-f661-4ce1-9611-b9511b03345a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c2900213-f661-4ce1-9611-b9511b03345a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9f48711a-6953-4800-983f-0bac54aaf9b5' class='xr-var-data-in' type='checkbox'><label for='data-9f48711a-6953-4800-983f-0bac54aaf9b5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.19 MiB </td>\n",
       "                        <td> 4.77 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250, 2) </td>\n",
       "                        <td> (10000, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"150\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"29\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"29\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"94\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,100.4104163302228 10.0,29.82218103610515\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"100\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,100.4104163302228 80.58823529411765,100.4104163302228\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"120.410416\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.499326\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.499326)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"85.116299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.116299)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250), meta=np.ndarray&gt;</div><input id='attrs-f65909fb-235a-43d0-8389-3e4d09cae941' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f65909fb-235a-43d0-8389-3e4d09cae941' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0c5dafb3-c988-4035-a72e-8bcd0e560299' class='xr-var-data-in' type='checkbox'><label for='data-0c5dafb3-c988-4035-a72e-8bcd0e560299' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                        <td> 2.38 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250) </td>\n",
       "                        <td> (10000, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"79\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"29\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"29\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 29.82218103610515,0.0 29.82218103610515,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"14.911091\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"49.822181\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,49.822181,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-9b7872a9-8620-421a-b1b2-6ec33554c96d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9b7872a9-8620-421a-b1b2-6ec33554c96d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3d569069-65ec-40c5-a69d-59e90e47cb8e' class='xr-var-data-in' type='checkbox'><label for='data-3d569069-65ec-40c5-a69d-59e90e47cb8e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-91800db9-da63-43b9-9111-5958f08747c3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-91800db9-da63-43b9-9111-5958f08747c3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6b0952d5-fd9c-4fb7-b52d-3962c383ce88' class='xr-var-data-in' type='checkbox'><label for='data-6b0952d5-fd9c-4fb7-b52d-3962c383ce88' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-951be66b-1e55-4d30-95aa-74be24fdae67' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-951be66b-1e55-4d30-95aa-74be24fdae67' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dadfb7c5-8833-45ab-9acc-bfeea09ae72d' class='xr-var-data-in' type='checkbox'><label for='data-dadfb7c5-8833-45ab-9acc-bfeea09ae72d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-5346eb42-3e12-4e66-9512-296b197a60ed' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5346eb42-3e12-4e66-9512-296b197a60ed' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6de24da1-7693-42a0-87e8-a8e50784fa56' class='xr-var-data-in' type='checkbox'><label for='data-6de24da1-7693-42a0-87e8-a8e50784fa56' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-bb2f964b-44c9-496a-87d5-4e85dfc56267' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bb2f964b-44c9-496a-87d5-4e85dfc56267' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dbc8f985-3675-4240-85ed-d71adf25054d' class='xr-var-data-in' type='checkbox'><label for='data-dbc8f985-3675-4240-85ed-d71adf25054d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;</div><input id='attrs-12e48714-863d-4b26-a5b8-fe89da13f2a3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-12e48714-863d-4b26-a5b8-fe89da13f2a3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-30293d8e-7ab5-4754-af37-5c285dcf8f09' class='xr-var-data-in' type='checkbox'><label for='data-30293d8e-7ab5-4754-af37-5c285dcf8f09' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 1) </td>\n",
       "                        <td> (10000, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-82450eb9-c661-4656-abf4-603782562575' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-82450eb9-c661-4656-abf4-603782562575' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a13e6431-70fe-4d91-a767-e571e0f6de13' class='xr-var-data-in' type='checkbox'><label for='data-a13e6431-70fe-4d91-a767-e571e0f6de13' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-612ff782-b1aa-44da-bbcd-ab250132545b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-612ff782-b1aa-44da-bbcd-ab250132545b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ad911390-0ce0-40a5-8020-9876219b4e13' class='xr-var-data-in' type='checkbox'><label for='data-ad911390-0ce0-40a5-8020-9876219b4e13' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-e27f98c9-b6a8-49db-8638-75e086888a3b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e27f98c9-b6a8-49db-8638-75e086888a3b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d465f236-77d8-454b-8f1c-1e90114a3d61' class='xr-var-data-in' type='checkbox'><label for='data-d465f236-77d8-454b-8f1c-1e90114a3d61' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-9a4b7eda-94ad-4bde-80ab-24505b02355e' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9a4b7eda-94ad-4bde-80ab-24505b02355e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1d2e9231-d532-405c-9078-2824c1211f12' class='xr-var-data-in' type='checkbox'><label for='data-1d2e9231-d532-405c-9078-2824c1211f12' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-c97b0807-ae86-4e38-997f-72c3928fd1ea' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c97b0807-ae86-4e38-997f-72c3928fd1ea' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-23ad7945-a0cf-456d-94d3-40f5e4bae784' class='xr-var-data-in' type='checkbox'><label for='data-23ad7945-a0cf-456d-94d3-40f5e4bae784' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-0b295787-639e-4195-92f6-b5aef1f7be12' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0b295787-639e-4195-92f6-b5aef1f7be12' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1f91d088-03fd-45d1-8d8a-d9e86ae8faa4' class='xr-var-data-in' type='checkbox'><label for='data-1f91d088-03fd-45d1-8d8a-d9e86ae8faa4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;,\n",
       "       &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;GBR&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;,\n",
       "       &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-49eb6032-df20-4c03-a8a9-512eb265f26d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-49eb6032-df20-4c03-a8a9-512eb265f26d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7a3ec634-d6ce-42f4-adb9-67a83ea25a91' class='xr-var-data-in' type='checkbox'><label for='data-7a3ec634-d6ce-42f4-adb9-67a83ea25a91' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-e4468b27-5e44-4fee-9103-b28cfdf33a42' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e4468b27-5e44-4fee-9103-b28cfdf33a42' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f6000a90-0c66-4431-80ae-3fa9219240e1' class='xr-var-data-in' type='checkbox'><label for='data-f6000a90-0c66-4431-80ae-3fa9219240e1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False, False, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True, False,\n",
       "       False,  True, False,  True, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "       False,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False, False,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True,  True,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True,  True, False,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False,  True,  True, False, False,  True, False,\n",
       "       False, False, False,  True,  True,  True,  True, False,  True,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True, False,  True, False,  True,  True, False,  True,  True,\n",
       "       False,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False,  True,  True, False,  True,  True,\n",
       "        True,  True,  True, False,  True, False,  True,  True, False,\n",
       "       False, False, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True, False,  True, False,  True, False, False,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True, False, False,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-bc602962-462e-4f34-b71e-fad3fa2a9974' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bc602962-462e-4f34-b71e-fad3fa2a9974' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-871ebd16-314a-42c0-b8ae-bc7ce055617a' class='xr-var-data-in' type='checkbox'><label for='data-871ebd16-314a-42c0-b8ae-bc7ce055617a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True, False,  True,\n",
       "       False, False, False, False,  True, False, False,  True, False,\n",
       "       False,  True,  True, False,  True, False, False, False, False,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True, False, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False, False, False,  True, False, False, False, False,\n",
       "       False, False, False, False,  True, False, False,  True,  True,\n",
       "        True, False,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False,  True,  True,\n",
       "        True,  True, False, False,  True, False,  True,  True, False,\n",
       "       False,  True, False, False,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True,  True, False,\n",
       "       False, False, False, False,  True, False, False, False,  True,\n",
       "       False, False,  True, False, False, False, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True, False,\n",
       "        True, False,  True,  True, False, False, False, False,  True,\n",
       "        True,  True,  True,  True,  True, False, False,  True, False,\n",
       "       False,  True,  True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 2 5 ... 5 6 4 6 4 6 5 5</div><input id='attrs-36e1d886-831e-4929-a96b-148ba5947ad9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-36e1d886-831e-4929-a96b-148ba5947ad9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-eeaef4f9-b42d-43df-bd6f-41aecea39ece' class='xr-var-data-in' type='checkbox'><label for='data-eeaef4f9-b42d-43df-bd6f-41aecea39ece' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 2, 5, 5, 4, 6, 5, 7, 5, 7, 1, 5, 5, 4, 4, 5, 5,\n",
       "       5, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5, 5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5,\n",
       "       5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4, 6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5,\n",
       "       4, 4, 5, 8, 3, 4, 4, 7, 5, 2, 6, 7, 6, 5, 3, 4, 5, 5, 5, 5, 6, 4,\n",
       "       5, 7, 2, 3, 3, 2, 6, 4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5,\n",
       "       6, 7, 8, 6, 2, 3, 2, 0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5,\n",
       "       5, 3, 1, 1, 3, 2, 4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4,\n",
       "       3, 3, 4, 4, 3, 5, 6, 5, 3, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5,\n",
       "       7, 5, 6, 6, 4, 4, 5, 3, 5, 4, 3, 8, 4, 6, 8, 3, 4, 2, 5, 6, 6, 4,\n",
       "       3, 5, 7, 4, 5, 5, 6, 3, 2, 4, 5, 6, 7, 2, 4, 2, 1, 5, 3, 4, 9, 6,\n",
       "       4, 3, 4, 4, 6, 7, 6, 3, 4, 3, 6, 6, 3, 4, 4, 4, 6, 7, 4, 5, 4, 5,\n",
       "       5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_dp_mean</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-452f2959-c846-4ef8-be4c-63b93c49f30d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-452f2959-c846-4ef8-be4c-63b93c49f30d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c9dbf255-48a4-4ba5-a313-7e9104aaec1b' class='xr-var-data-in' type='checkbox'><label for='data-c9dbf255-48a4-4ba5-a313-7e9104aaec1b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Mean Sample DP</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li></ul></div></li><li class='xr-section-item'><input id='section-606799cb-2db4-4d46-a82d-a6d420b40c72' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-606799cb-2db4-4d46-a82d-a6d420b40c72' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-a2547978-996d-48d7-854c-6a3356f8adc0' class='xr-section-summary-in' type='checkbox'  ><label for='section-a2547978-996d-48d7-854c-6a3356f8adc0' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 26MB\n",
       "Dimensions:                   (variants: 10879, alleles: 2, samples: 250,\n",
       "                               ploidy: 2, contigs: 84, filters: 1)\n",
       "Dimensions without coordinates: variants, alleles, samples, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/38)\n",
       "    variant_n_called          (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_call_rate         (variants) float64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_n_het             (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_n_hom_ref         (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_n_hom_alt         (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_n_non_ref         (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    ...                        ...\n",
       "    Population                (samples) object 2kB 'GBR' 'GBR' ... 'GIH' 'GIH'\n",
       "    SuperPopulation           (samples) object 2kB 'EUR' 'EUR' ... 'SAS' 'SAS'\n",
       "    isFemale                  (samples) bool 250B False True ... False True\n",
       "    PurpleHair                (samples) bool 250B False False ... True True\n",
       "    CaffeineConsumption       (samples) int64 2kB 4 4 4 3 6 2 2 ... 4 6 4 6 5 5\n",
       "    sample_dp_mean            (samples) float32 1kB dask.array<chunksize=(250,), meta=np.ndarray>\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds = sg.variant_stats(ds)\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "jewish-people",
   "metadata": {},
   "source": [
    "## Let's do a GWAS!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "determined-population",
   "metadata": {},
   "source": [
    "First we need to restrict to common variants (1% cutoff), and not far from Hardy-Weinberg equilibrium."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "delayed-destiny",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = sg.hardy_weinberg_test(ds)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "color-detection",
   "metadata": {},
   "source": [
    "(The warning is telling us that some variables are being regenerated, and can be safely ignored.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "optical-television",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 26MB\n",
       "Dimensions:                   (variants: 10879, genotypes: 3, alleles: 2,\n",
       "                               samples: 250, ploidy: 2, contigs: 84, filters: 1)\n",
       "Coordinates:\n",
       "  * genotypes                 (genotypes) &lt;U3 36B &#x27;0/0&#x27; &#x27;0/1&#x27; &#x27;1/1&#x27;\n",
       "Dimensions without coordinates: variants, alleles, samples, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/41)\n",
       "    variant_hwe_p_value       (variants) float64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_genotype_count    (variants, genotypes) uint64 261kB dask.array&lt;chunksize=(10000, 3), meta=np.ndarray&gt;\n",
       "    genotype_id               (genotypes) &lt;U3 36B dask.array&lt;chunksize=(3,), meta=np.ndarray&gt;\n",
       "    variant_n_called          (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_call_rate         (variants) float64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    variant_n_het             (variants) int64 87kB dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;\n",
       "    ...                        ...\n",
       "    Population                (samples) object 2kB &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;\n",
       "    SuperPopulation           (samples) object 2kB &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;\n",
       "    isFemale                  (samples) bool 250B False True ... False True\n",
       "    PurpleHair                (samples) bool 250B False False ... True True\n",
       "    CaffeineConsumption       (samples) int64 2kB 4 4 4 3 6 2 2 ... 4 6 4 6 5 5\n",
       "    sample_dp_mean            (samples) float32 1kB dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-d8a2cf96-84eb-4a71-abe8-dd6ba1ae934c' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-d8a2cf96-84eb-4a71-abe8-dd6ba1ae934c' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>variants</span>: 10879</li><li><span class='xr-has-index'>genotypes</span>: 3</li><li><span>alleles</span>: 2</li><li><span>samples</span>: 250</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-838f2b6f-defb-4556-8802-4708e89c3e1f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-838f2b6f-defb-4556-8802-4708e89c3e1f' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>genotypes</span></div><div class='xr-var-dims'>(genotypes)</div><div class='xr-var-dtype'>&lt;U3</div><div class='xr-var-preview xr-preview'>&#x27;0/0&#x27; &#x27;0/1&#x27; &#x27;1/1&#x27;</div><input id='attrs-6cea6ada-0a16-4ede-8682-63504c40ad50' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6cea6ada-0a16-4ede-8682-63504c40ad50' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-78d4252d-db62-431f-8947-e926fb436ab5' class='xr-var-data-in' type='checkbox'><label for='data-78d4252d-db62-431f-8947-e926fb436ab5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;0/0&#x27;, &#x27;0/1&#x27;, &#x27;1/1&#x27;], dtype=&#x27;&lt;U3&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-9d6be5a8-dd40-4508-9681-8a7bd3771a3f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-9d6be5a8-dd40-4508-9681-8a7bd3771a3f' class='xr-section-summary' >Data variables: <span>(41)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>variant_hwe_p_value</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-c50cc08c-515a-4c48-8530-50db14573779' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c50cc08c-515a-4c48-8530-50db14573779' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3d3ee425-3742-4cbb-9693-b9f8bf9c4a76' class='xr-var-data-in' type='checkbox'><label for='data-3d3ee425-3742-4cbb-9693-b9f8bf9c4a76' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>P values from HWE test for each variant as float in [0, 1].</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_genotype_count</span></div><div class='xr-var-dims'>(variants, genotypes)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 3), meta=np.ndarray&gt;</div><input id='attrs-938a241b-9550-4253-b4c4-e17ed44f70a6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-938a241b-9550-4253-b4c4-e17ed44f70a6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-19a5628a-dde9-49ac-9a61-53192581758d' class='xr-var-data-in' type='checkbox'><label for='data-19a5628a-dde9-49ac-9a61-53192581758d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>The number of observations for each possible genotype at each variant.\n",
       "Counts are sorted following the ordering defined in the VCF specification.\n",
       "\n",
       "- For biallelic, diploid genotypes the ordering is ``00``, ``01``, ``11``\n",
       "  (homozygous reference, heterozygous, homozygous alternate).\n",
       "- For triallelic, diploid genotypes the ordering is ``00``, ``01``, ``11``,\n",
       "  ``02``, ``12``, ``22``\n",
       "- For triallelic, triploid genotypes the ordering is  ``000``, ``001``, ``011``,\n",
       "  ``111``, ``002``, ``012``, ``112``, ``022``, ``122``, ``222``</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 254.98 kiB </td>\n",
       "                        <td> 234.38 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 3) </td>\n",
       "                        <td> (10000, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>genotype_id</span></div><div class='xr-var-dims'>(genotypes)</div><div class='xr-var-dtype'>&lt;U3</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3,), meta=np.ndarray&gt;</div><input id='attrs-901d2f35-06df-440e-9405-e4fea1457be4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-901d2f35-06df-440e-9405-e4fea1457be4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a7ac996c-575e-423f-8059-05210efafbef' class='xr-var-data-in' type='checkbox'><label for='data-a7ac996c-575e-423f-8059-05210efafbef' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>VCF style genotype strings for all possible genotypes given the size of the\n",
       "ploidy and alleles dimensions. The ordering of genotype strings follows the\n",
       "ordering outlined in the VCF specification for arrays of size &quot;G&quot;.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 36 B </td>\n",
       "                        <td> 36 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3,) </td>\n",
       "                        <td> (3,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> <U3 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"93\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"43\" x2=\"120\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,43.88583450710766 0.0,43.88583450710766\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"63.885835\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"140.000000\" y=\"21.942917\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,21.942917)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_called</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-036799d0-4128-4cd9-947c-85e4fe7f294f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-036799d0-4128-4cd9-947c-85e4fe7f294f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f7ac18b1-573b-438b-aa39-d01b125b4907' class='xr-var-data-in' type='checkbox'><label for='data-f7ac18b1-573b-438b-aa39-d01b125b4907' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_call_rate</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-8f23a5cd-5b6f-4672-ad5b-fbfdbd0204a6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8f23a5cd-5b6f-4672-ad5b-fbfdbd0204a6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d1426be0-5dfa-4a4f-9359-a0177ec543e5' class='xr-var-data-in' type='checkbox'><label for='data-d1426be0-5dfa-4a4f-9359-a0177ec543e5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_het</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-a0516fb7-41ac-4f4f-be3e-97354a35bf04' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a0516fb7-41ac-4f4f-be3e-97354a35bf04' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-895a374a-7d2d-42eb-8043-af20be911a47' class='xr-var-data-in' type='checkbox'><label for='data-895a374a-7d2d-42eb-8043-af20be911a47' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-3b214291-e1af-4d35-b52c-7c5f024443b7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3b214291-e1af-4d35-b52c-7c5f024443b7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2c18d344-e7c8-481b-ad1e-53f33d927631' class='xr-var-data-in' type='checkbox'><label for='data-2c18d344-e7c8-481b-ad1e-53f33d927631' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_alt</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-06f3b6d0-f0d7-484f-a422-139246b1a2ca' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-06f3b6d0-f0d7-484f-a422-139246b1a2ca' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-474a51e3-6122-435b-aa6b-a381beea8a86' class='xr-var-data-in' type='checkbox'><label for='data-474a51e3-6122-435b-aa6b-a381beea8a86' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_non_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-eee3e560-822d-40c6-bd5c-fc89c8e858ad' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-eee3e560-822d-40c6-bd5c-fc89c8e858ad' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bbe0b48f-3fe5-45bb-ab1c-e10df7c6e317' class='xr-var-data-in' type='checkbox'><label for='data-bbe0b48f-3fe5-45bb-ab1c-e10df7c6e317' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_count</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-5de8257f-5408-4555-ac8d-10132c29b976' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5de8257f-5408-4555-ac8d-10132c29b976' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1bdaf485-70dd-410d-bf65-b0fcfe8d7e51' class='xr-var-data-in' type='checkbox'><label for='data-1bdaf485-70dd-410d-bf65-b0fcfe8d7e51' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>Variant allele counts. With shape (variants, alleles) and values\n",
       "corresponding to the number of non-missing occurrences of each allele.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_total</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-b727fbe1-c848-49fc-a26b-9c8c71470c80' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b727fbe1-c848-49fc-a26b-9c8c71470c80' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d3376de0-ada8-47ab-86f9-37436edee9d5' class='xr-var-data-in' type='checkbox'><label for='data-d3376de0-ada8-47ab-86f9-37436edee9d5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_frequency</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-3ff05cb4-2867-4945-9d9e-1779dd966430' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3ff05cb4-2867-4945-9d9e-1779dd966430' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-55184010-5bd4-447d-aa11-f61735c2cf2f' class='xr-var-data-in' type='checkbox'><label for='data-55184010-5bd4-447d-aa11-f61735c2cf2f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 13 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_called</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-22a6b200-2369-41a6-b46f-f3fc8f48b0e7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-22a6b200-2369-41a6-b46f-f3fc8f48b0e7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f4f9f485-3b89-4163-ba06-875468d3d39e' class='xr-var-data-in' type='checkbox'><label for='data-f4f9f485-3b89-4163-ba06-875468d3d39e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_call_rate</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-99daf8b9-e24e-4a30-b3e7-96f82931076d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-99daf8b9-e24e-4a30-b3e7-96f82931076d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9c61f26e-61c9-4849-a4c8-c4a172161a26' class='xr-var-data-in' type='checkbox'><label for='data-9c61f26e-61c9-4849-a4c8-c4a172161a26' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Sample call rate</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_het</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-f7c8fd97-a235-4a2e-bb0f-3bac7c36bb54' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f7c8fd97-a235-4a2e-bb0f-3bac7c36bb54' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8de857f0-0c52-47cf-aba4-3e99f5779b77' class='xr-var-data-in' type='checkbox'><label for='data-8de857f0-0c52-47cf-aba4-3e99f5779b77' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-03502c74-2c82-4ca7-a94b-8223f78c62a1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-03502c74-2c82-4ca7-a94b-8223f78c62a1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0baa690d-d45d-4042-8cf5-f20123c778d0' class='xr-var-data-in' type='checkbox'><label for='data-0baa690d-d45d-4042-8cf5-f20123c778d0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_alt</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-615b94af-c2cc-4c81-a102-659d4160f23c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-615b94af-c2cc-4c81-a102-659d4160f23c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dbb44de8-1571-4f8e-8eb1-2270f50dd848' class='xr-var-data-in' type='checkbox'><label for='data-dbb44de8-1571-4f8e-8eb1-2270f50dd848' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_non_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-2a64787f-066a-45c8-a79e-02ccb2ecd02d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2a64787f-066a-45c8-a79e-02ccb2ecd02d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7668f356-6a9d-45e1-91b8-2f5836044bdf' class='xr-var-data-in' type='checkbox'><label for='data-7668f356-6a9d-45e1-91b8-2f5836044bdf' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-f736c266-a2c1-4537-8696-e266a3029efc' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f736c266-a2c1-4537-8696-e266a3029efc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1cb3f75e-ab3d-418b-b0a8-11444593262e' class='xr-var-data-in' type='checkbox'><label for='data-1cb3f75e-ab3d-418b-b0a8-11444593262e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.19 MiB </td>\n",
       "                        <td> 4.77 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250, 2) </td>\n",
       "                        <td> (10000, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"150\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"29\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"29\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"94\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,100.4104163302228 10.0,29.82218103610515\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"100\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,100.4104163302228 80.58823529411765,100.4104163302228\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"120.410416\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.499326\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.499326)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"85.116299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.116299)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250), meta=np.ndarray&gt;</div><input id='attrs-509304da-3580-4706-94e6-02427f811b9f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-509304da-3580-4706-94e6-02427f811b9f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-70163ff1-29fd-463d-a5a3-601dc392ffc9' class='xr-var-data-in' type='checkbox'><label for='data-70163ff1-29fd-463d-a5a3-601dc392ffc9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                        <td> 2.38 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250) </td>\n",
       "                        <td> (10000, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"79\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"29\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"29\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 29.82218103610515,0.0 29.82218103610515,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"14.911091\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"49.822181\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,49.822181,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250), meta=np.ndarray&gt;</div><input id='attrs-4934f721-b8df-4e4c-a965-076d9f0bafe9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4934f721-b8df-4e4c-a965-076d9f0bafe9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4137aa37-4192-44b3-abf4-7605a33b309b' class='xr-var-data-in' type='checkbox'><label for='data-4137aa37-4192-44b3-abf4-7605a33b309b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                        <td> 2.38 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250) </td>\n",
       "                        <td> (10000, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"79\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"29\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"29\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 29.82218103610515,0.0 29.82218103610515,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"14.911091\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"49.822181\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,49.822181,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-303c38a9-0db3-4c6b-aa3f-e30be07d1fbc' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-303c38a9-0db3-4c6b-aa3f-e30be07d1fbc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8ff2bf37-84d8-4254-b0e7-cce6d38b8e9c' class='xr-var-data-in' type='checkbox'><label for='data-8ff2bf37-84d8-4254-b0e7-cce6d38b8e9c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.19 MiB </td>\n",
       "                        <td> 4.77 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250, 2) </td>\n",
       "                        <td> (10000, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"150\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"29\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"29\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"94\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,100.4104163302228 10.0,29.82218103610515\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"100\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,100.4104163302228 80.58823529411765,100.4104163302228\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"120.410416\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.499326\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.499326)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"85.116299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.116299)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-ef64e49a-ea29-47cb-a5d2-e8fc76187e0d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ef64e49a-ea29-47cb-a5d2-e8fc76187e0d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ebc1f2c3-c574-4d1f-b162-08c7485fbdf9' class='xr-var-data-in' type='checkbox'><label for='data-ebc1f2c3-c574-4d1f-b162-08c7485fbdf9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 5.19 MiB </td>\n",
       "                        <td> 4.77 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250, 2) </td>\n",
       "                        <td> (10000, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"150\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"29\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"29\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"94\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,100.4104163302228 10.0,29.82218103610515\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"100\" y2=\"64\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"100\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"100\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,100.4104163302228 80.58823529411765,100.4104163302228\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"120.410416\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"85.499326\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,85.499326)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"85.116299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,85.116299)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 250), meta=np.ndarray&gt;</div><input id='attrs-f77e8980-1a9c-4ccd-8c5e-d46b29f5f0d0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f77e8980-1a9c-4ccd-8c5e-d46b29f5f0d0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f38701e4-47ec-480b-b3a3-f06ecef23fbd' class='xr-var-data-in' type='checkbox'><label for='data-f38701e4-47ec-480b-b3a3-f06ecef23fbd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                        <td> 2.38 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 250) </td>\n",
       "                        <td> (10000, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"79\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"29\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"29\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 29.82218103610515,0.0 29.82218103610515,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"14.911091\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"49.822181\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,49.822181,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-0815ece8-3acc-4f37-9469-b51008ed4226' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0815ece8-3acc-4f37-9469-b51008ed4226' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0e51fef3-4181-4d41-9761-94e4760369c0' class='xr-var-data-in' type='checkbox'><label for='data-0e51fef3-4181-4d41-9761-94e4760369c0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-0573dfc3-955d-4c42-a3b5-bfbe178c0643' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0573dfc3-955d-4c42-a3b5-bfbe178c0643' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7e376db7-e74a-4104-9386-c68ecd4d7467' class='xr-var-data-in' type='checkbox'><label for='data-7e376db7-e74a-4104-9386-c68ecd4d7467' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-f1f497ec-397c-4535-aaba-1fb084489919' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f1f497ec-397c-4535-aaba-1fb084489919' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5a13069b-788a-4033-96c9-02791a684d0d' class='xr-var-data-in' type='checkbox'><label for='data-5a13069b-788a-4033-96c9-02791a684d0d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 2), meta=np.ndarray&gt;</div><input id='attrs-17c06b07-94d4-404c-a361-959c7876b26e' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-17c06b07-94d4-404c-a361-959c7876b26e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-92804824-3044-474c-8467-084de041f8df' class='xr-var-data-in' type='checkbox'><label for='data-92804824-3044-474c-8467-084de041f8df' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 169.98 kiB </td>\n",
       "                        <td> 156.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 2) </td>\n",
       "                        <td> (10000, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-6e004302-af10-442d-b873-a605c7470959' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6e004302-af10-442d-b873-a605c7470959' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f59a0725-1a8c-4103-ba62-429263d656b8' class='xr-var-data-in' type='checkbox'><label for='data-f59a0725-1a8c-4103-ba62-429263d656b8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000, 1), meta=np.ndarray&gt;</div><input id='attrs-25eee921-22dc-4b44-bf63-1300390c4cd2' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-25eee921-22dc-4b44-bf63-1300390c4cd2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d9395434-53a4-4f8d-89f2-cd87b9576255' class='xr-var-data-in' type='checkbox'><label for='data-d9395434-53a4-4f8d-89f2-cd87b9576255' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879, 1) </td>\n",
       "                        <td> (10000, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"110\" x2=\"25\" y2=\"110\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">10879</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-9219345e-9389-4825-83f0-73a4ddb3bea3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9219345e-9389-4825-83f0-73a4ddb3bea3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4331790f-7091-4e21-9ed3-e56587016639' class='xr-var-data-in' type='checkbox'><label for='data-4331790f-7091-4e21-9ed3-e56587016639' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-b7e44cd6-30b8-4c62-983a-8e4d586b8b91' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b7e44cd6-30b8-4c62-983a-8e4d586b8b91' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-be7187cc-e5e0-4087-8863-df21eeae5195' class='xr-var-data-in' type='checkbox'><label for='data-be7187cc-e5e0-4087-8863-df21eeae5195' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 10.62 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-422822e9-c745-4a68-96ed-17036bda1428' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-422822e9-c745-4a68-96ed-17036bda1428' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8d9ad7b5-2783-4564-a2de-850db2e4b5d8' class='xr-var-data-in' type='checkbox'><label for='data-8d9ad7b5-2783-4564-a2de-850db2e4b5d8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-2394670e-3a1a-407d-9491-0db1e4a05c96' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2394670e-3a1a-407d-9491-0db1e4a05c96' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b886943d-4016-469c-a7c5-150b8cf0e8c5' class='xr-var-data-in' type='checkbox'><label for='data-b886943d-4016-469c-a7c5-150b8cf0e8c5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 42.50 kiB </td>\n",
       "                        <td> 39.06 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10000,), meta=np.ndarray&gt;</div><input id='attrs-936bfc64-4964-4bae-970b-2ea20f073d05' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-936bfc64-4964-4bae-970b-2ea20f073d05' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-792c9598-b73f-4022-9780-9d18bd4c0bab' class='xr-var-data-in' type='checkbox'><label for='data-792c9598-b73f-4022-9780-9d18bd4c0bab' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 84.99 kiB </td>\n",
       "                        <td> 78.12 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10879,) </td>\n",
       "                        <td> (10000,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"110\" y1=\"0\" x2=\"110\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10879</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-c85b7651-94ca-4a6f-97fc-2c10c557d7bb' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c85b7651-94ca-4a6f-97fc-2c10c557d7bb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b540c1b3-a8fe-4b98-9a9e-9b4dcc364bc3' class='xr-var-data-in' type='checkbox'><label for='data-b540c1b3-a8fe-4b98-9a9e-9b4dcc364bc3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;,\n",
       "       &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;GBR&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;,\n",
       "       &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-2ed1d368-42e4-4199-8848-422ad4d3b882' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2ed1d368-42e4-4199-8848-422ad4d3b882' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ba89a4b7-a3cc-4288-983e-a2c908f88025' class='xr-var-data-in' type='checkbox'><label for='data-ba89a4b7-a3cc-4288-983e-a2c908f88025' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-f3462127-efb0-4e72-a35c-2efbd65df132' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f3462127-efb0-4e72-a35c-2efbd65df132' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c32bb992-e674-4bfc-8614-bd64c8b90a1a' class='xr-var-data-in' type='checkbox'><label for='data-c32bb992-e674-4bfc-8614-bd64c8b90a1a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False, False, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True, False,\n",
       "       False,  True, False,  True, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "       False,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False, False,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True,  True,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True,  True, False,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False,  True,  True, False, False,  True, False,\n",
       "       False, False, False,  True,  True,  True,  True, False,  True,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True, False,  True, False,  True,  True, False,  True,  True,\n",
       "       False,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False,  True,  True, False,  True,  True,\n",
       "        True,  True,  True, False,  True, False,  True,  True, False,\n",
       "       False, False, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True, False,  True, False,  True, False, False,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True, False, False,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-8adbf5e0-0861-4d15-b92f-552f64a029f4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8adbf5e0-0861-4d15-b92f-552f64a029f4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-eab55999-b40f-47e3-96ee-0a39ce6037e6' class='xr-var-data-in' type='checkbox'><label for='data-eab55999-b40f-47e3-96ee-0a39ce6037e6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True, False,  True,\n",
       "       False, False, False, False,  True, False, False,  True, False,\n",
       "       False,  True,  True, False,  True, False, False, False, False,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True, False, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False, False, False,  True, False, False, False, False,\n",
       "       False, False, False, False,  True, False, False,  True,  True,\n",
       "        True, False,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False,  True,  True,\n",
       "        True,  True, False, False,  True, False,  True,  True, False,\n",
       "       False,  True, False, False,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True,  True, False,\n",
       "       False, False, False, False,  True, False, False, False,  True,\n",
       "       False, False,  True, False, False, False, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True, False,\n",
       "        True, False,  True,  True, False, False, False, False,  True,\n",
       "        True,  True,  True,  True,  True, False, False,  True, False,\n",
       "       False,  True,  True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 2 5 ... 5 6 4 6 4 6 5 5</div><input id='attrs-ecb9536b-5acc-4fac-b5b0-c46779b0a5a0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ecb9536b-5acc-4fac-b5b0-c46779b0a5a0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8f19e89f-afd4-47c3-ac10-db19638f0f31' class='xr-var-data-in' type='checkbox'><label for='data-8f19e89f-afd4-47c3-ac10-db19638f0f31' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 2, 5, 5, 4, 6, 5, 7, 5, 7, 1, 5, 5, 4, 4, 5, 5,\n",
       "       5, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5, 5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5,\n",
       "       5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4, 6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5,\n",
       "       4, 4, 5, 8, 3, 4, 4, 7, 5, 2, 6, 7, 6, 5, 3, 4, 5, 5, 5, 5, 6, 4,\n",
       "       5, 7, 2, 3, 3, 2, 6, 4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5,\n",
       "       6, 7, 8, 6, 2, 3, 2, 0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5,\n",
       "       5, 3, 1, 1, 3, 2, 4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4,\n",
       "       3, 3, 4, 4, 3, 5, 6, 5, 3, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5,\n",
       "       7, 5, 6, 6, 4, 4, 5, 3, 5, 4, 3, 8, 4, 6, 8, 3, 4, 2, 5, 6, 6, 4,\n",
       "       3, 5, 7, 4, 5, 5, 6, 3, 2, 4, 5, 6, 7, 2, 4, 2, 1, 5, 3, 4, 9, 6,\n",
       "       4, 3, 4, 4, 6, 7, 6, 3, 4, 3, 6, 6, 3, 4, 4, 4, 6, 7, 4, 5, 4, 5,\n",
       "       5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_dp_mean</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-07fc3227-3bb7-42d0-8a03-a1c1681b2cd0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-07fc3227-3bb7-42d0-8a03-a1c1681b2cd0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fd9bb175-830e-4875-8b91-6d2b5df28c59' class='xr-var-data-in' type='checkbox'><label for='data-fd9bb175-830e-4875-8b91-6d2b5df28c59' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Mean Sample DP</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li></ul></div></li><li class='xr-section-item'><input id='section-cd86a66f-bdf0-4449-996d-359c44418e3c' class='xr-section-summary-in' type='checkbox'  ><label for='section-cd86a66f-bdf0-4449-996d-359c44418e3c' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>genotypes</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-c94d60f3-9b42-40c1-bf37-d7a5ce0dc864' class='xr-index-data-in' type='checkbox'/><label for='index-c94d60f3-9b42-40c1-bf37-d7a5ce0dc864' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;0/0&#x27;, &#x27;0/1&#x27;, &#x27;1/1&#x27;], dtype=&#x27;object&#x27;, name=&#x27;genotypes&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-58f46b85-2a47-4b87-a06e-fa4e4e38b0af' class='xr-section-summary-in' type='checkbox'  ><label for='section-58f46b85-2a47-4b87-a06e-fa4e4e38b0af' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 26MB\n",
       "Dimensions:                   (variants: 10879, genotypes: 3, alleles: 2,\n",
       "                               samples: 250, ploidy: 2, contigs: 84, filters: 1)\n",
       "Coordinates:\n",
       "  * genotypes                 (genotypes) <U3 36B '0/0' '0/1' '1/1'\n",
       "Dimensions without coordinates: variants, alleles, samples, ploidy, contigs,\n",
       "                                filters\n",
       "Data variables: (12/41)\n",
       "    variant_hwe_p_value       (variants) float64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_genotype_count    (variants, genotypes) uint64 261kB dask.array<chunksize=(10000, 3), meta=np.ndarray>\n",
       "    genotype_id               (genotypes) <U3 36B dask.array<chunksize=(3,), meta=np.ndarray>\n",
       "    variant_n_called          (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_call_rate         (variants) float64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    variant_n_het             (variants) int64 87kB dask.array<chunksize=(10000,), meta=np.ndarray>\n",
       "    ...                        ...\n",
       "    Population                (samples) object 2kB 'GBR' 'GBR' ... 'GIH' 'GIH'\n",
       "    SuperPopulation           (samples) object 2kB 'EUR' 'EUR' ... 'SAS' 'SAS'\n",
       "    isFemale                  (samples) bool 250B False True ... False True\n",
       "    PurpleHair                (samples) bool 250B False False ... True True\n",
       "    CaffeineConsumption       (samples) int64 2kB 4 4 4 3 6 2 2 ... 4 6 4 6 5 5\n",
       "    sample_dp_mean            (samples) float32 1kB dask.array<chunksize=(250,), meta=np.ndarray>\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "minus-airline",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = ds.sel(variants=((ds.variant_allele_frequency[:,1] > 0.01) & (ds.variant_hwe_p_value > 1e-6)).compute())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "wireless-italian",
   "metadata": {},
   "source": [
    "_Note: again, the number of variants is different to the Hail tutorial, but the final results work out to be very similar._"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "sexual-charles",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Samples: 250  Variants: 8394\n"
     ]
    }
   ],
   "source": [
    "print(f\"Samples: {len(ds.samples)}  Variants: {len(ds.variants)}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "lovely-scratch",
   "metadata": {},
   "source": [
    "Run a linear regression of dosage (number of alt alleles) against the `CaffeineConsumption` trait."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "forty-richardson",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 37MB\n",
       "Dimensions:                   (variants: 8394, traits: 1, genotypes: 3,\n",
       "                               alleles: 2, samples: 250, ploidy: 2,\n",
       "                               contigs: 84, filters: 1)\n",
       "Coordinates:\n",
       "  * genotypes                 (genotypes) &lt;U3 36B &#x27;0/0&#x27; &#x27;0/1&#x27; &#x27;1/1&#x27;\n",
       "Dimensions without coordinates: variants, traits, alleles, samples, ploidy,\n",
       "                                contigs, filters\n",
       "Data variables: (12/45)\n",
       "    variant_linreg_beta       (variants, traits) float64 67kB dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;\n",
       "    variant_linreg_t_value    (variants, traits) float64 67kB dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;\n",
       "    variant_linreg_p_value    (variants, traits) float64 67kB dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;\n",
       "    variant_hwe_p_value       (variants) float64 67kB dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;\n",
       "    variant_genotype_count    (variants, genotypes) uint64 201kB dask.array&lt;chunksize=(5439, 3), meta=np.ndarray&gt;\n",
       "    genotype_id               (genotypes) &lt;U3 36B dask.array&lt;chunksize=(3,), meta=np.ndarray&gt;\n",
       "    ...                        ...\n",
       "    SuperPopulation           (samples) object 2kB &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;\n",
       "    isFemale                  (samples) bool 250B False True ... False True\n",
       "    PurpleHair                (samples) bool 250B False False ... True True\n",
       "    CaffeineConsumption       (samples) int64 2kB 4 4 4 3 6 2 2 ... 4 6 4 6 5 5\n",
       "    sample_dp_mean            (samples) float32 1kB dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;\n",
       "    call_dosage               (variants, samples) int64 17MB dask.array&lt;chunksize=(5439, 250), meta=np.ndarray&gt;\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-5bb24ef0-6097-4ed6-817b-79fec20f032b' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-5bb24ef0-6097-4ed6-817b-79fec20f032b' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>variants</span>: 8394</li><li><span>traits</span>: 1</li><li><span class='xr-has-index'>genotypes</span>: 3</li><li><span>alleles</span>: 2</li><li><span>samples</span>: 250</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-3f7028be-79f3-4671-b380-1097daddfdeb' class='xr-section-summary-in' type='checkbox'  checked><label for='section-3f7028be-79f3-4671-b380-1097daddfdeb' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>genotypes</span></div><div class='xr-var-dims'>(genotypes)</div><div class='xr-var-dtype'>&lt;U3</div><div class='xr-var-preview xr-preview'>&#x27;0/0&#x27; &#x27;0/1&#x27; &#x27;1/1&#x27;</div><input id='attrs-499a068a-0bb4-41c2-b081-6f42d58fa8e9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-499a068a-0bb4-41c2-b081-6f42d58fa8e9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6fce5e2f-6f74-4012-b9c7-bcd88a94270b' class='xr-var-data-in' type='checkbox'><label for='data-6fce5e2f-6f74-4012-b9c7-bcd88a94270b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;0/0&#x27;, &#x27;0/1&#x27;, &#x27;1/1&#x27;], dtype=&#x27;&lt;U3&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-654e72f6-a377-4d3f-870b-ae6a42338819' class='xr-section-summary-in' type='checkbox'  checked><label for='section-654e72f6-a377-4d3f-870b-ae6a42338819' class='xr-section-summary' >Data variables: <span>(45)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>variant_linreg_beta</span></div><div class='xr-var-dims'>(variants, traits)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;</div><input id='attrs-0313c109-09da-4a02-8bc6-a053407a3f19' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0313c109-09da-4a02-8bc6-a053407a3f19' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-31f4b4f2-49a4-428f-b833-362b8b089a40' class='xr-var-data-in' type='checkbox'><label for='data-31f4b4f2-49a4-428f-b833-362b8b089a40' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>Beta values associated with each variant and trait.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 1) </td>\n",
       "                        <td> (5439, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 33 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_linreg_t_value</span></div><div class='xr-var-dims'>(variants, traits)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;</div><input id='attrs-484da872-8591-4149-a8b1-336169d58215' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-484da872-8591-4149-a8b1-336169d58215' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-90ab16f6-62ca-4417-85c2-b4cf92cc5a2f' class='xr-var-data-in' type='checkbox'><label for='data-90ab16f6-62ca-4417-85c2-b4cf92cc5a2f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>T statistics for each beta.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 1) </td>\n",
       "                        <td> (5439, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 45 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_linreg_p_value</span></div><div class='xr-var-dims'>(variants, traits)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;</div><input id='attrs-9cf6ec63-7293-4c79-b4f6-974322c8c632' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9cf6ec63-7293-4c79-b4f6-974322c8c632' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b41d804d-ce62-4d70-aadb-2d2085046fc7' class='xr-var-data-in' type='checkbox'><label for='data-b41d804d-ce62-4d70-aadb-2d2085046fc7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>P values as float in [0, 1].</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 1) </td>\n",
       "                        <td> (5439, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 47 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_hwe_p_value</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-08541742-46e9-4080-9fe3-30959cf68f16' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-08541742-46e9-4080-9fe3-30959cf68f16' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-eee73853-70fd-4f5a-985b-cd78b33c0a37' class='xr-var-data-in' type='checkbox'><label for='data-eee73853-70fd-4f5a-985b-cd78b33c0a37' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>P values from HWE test for each variant as float in [0, 1].</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_genotype_count</span></div><div class='xr-var-dims'>(variants, genotypes)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 3), meta=np.ndarray&gt;</div><input id='attrs-b4be4d99-7b10-47e0-8bc6-dad399605cf6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b4be4d99-7b10-47e0-8bc6-dad399605cf6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f0050f7b-e43a-43f6-b10e-7a28b59ac5e5' class='xr-var-data-in' type='checkbox'><label for='data-f0050f7b-e43a-43f6-b10e-7a28b59ac5e5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>The number of observations for each possible genotype at each variant.\n",
       "Counts are sorted following the ordering defined in the VCF specification.\n",
       "\n",
       "- For biallelic, diploid genotypes the ordering is ``00``, ``01``, ``11``\n",
       "  (homozygous reference, heterozygous, homozygous alternate).\n",
       "- For triallelic, diploid genotypes the ordering is ``00``, ``01``, ``11``,\n",
       "  ``02``, ``12``, ``22``\n",
       "- For triallelic, triploid genotypes the ordering is  ``000``, ``001``, ``011``,\n",
       "  ``111``, ``002``, ``012``, ``112``, ``022``, ``122``, ``222``</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 196.73 kiB </td>\n",
       "                        <td> 127.48 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 3) </td>\n",
       "                        <td> (5439, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>genotype_id</span></div><div class='xr-var-dims'>(genotypes)</div><div class='xr-var-dtype'>&lt;U3</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3,), meta=np.ndarray&gt;</div><input id='attrs-ec93aba7-6e7e-4b73-b68f-cbfce27cecd1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ec93aba7-6e7e-4b73-b68f-cbfce27cecd1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8d8d87c2-0e1f-4680-ab1e-9b896bdc1a64' class='xr-var-data-in' type='checkbox'><label for='data-8d8d87c2-0e1f-4680-ab1e-9b896bdc1a64' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>VCF style genotype strings for all possible genotypes given the size of the\n",
       "ploidy and alleles dimensions. The ordering of genotype strings follows the\n",
       "ordering outlined in the VCF specification for arrays of size &quot;G&quot;.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 36 B </td>\n",
       "                        <td> 36 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3,) </td>\n",
       "                        <td> (3,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> <U3 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"93\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"43\" x2=\"120\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,43.88583450710766 0.0,43.88583450710766\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"63.885835\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"140.000000\" y=\"21.942917\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,21.942917)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_called</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-896c69fa-f3ec-405a-849b-de32d156c1cf' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-896c69fa-f3ec-405a-849b-de32d156c1cf' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bde5c58b-00df-41d2-84f3-4e50f9d1a7e2' class='xr-var-data-in' type='checkbox'><label for='data-bde5c58b-00df-41d2-84f3-4e50f9d1a7e2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_call_rate</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-2767c3db-0966-44e3-92c7-d72a1bd9ecb2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2767c3db-0966-44e3-92c7-d72a1bd9ecb2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0137b61f-249c-4187-b94b-e2e94ca00077' class='xr-var-data-in' type='checkbox'><label for='data-0137b61f-249c-4187-b94b-e2e94ca00077' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 11 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_het</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-d2bdd0d0-8f45-42f8-86b0-dc6f0d47c074' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d2bdd0d0-8f45-42f8-86b0-dc6f0d47c074' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b0305929-381f-47ef-a3a0-fb2ac36027c1' class='xr-var-data-in' type='checkbox'><label for='data-b0305929-381f-47ef-a3a0-fb2ac36027c1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-1a7687a1-e729-485a-8b95-f9cd98611c44' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1a7687a1-e729-485a-8b95-f9cd98611c44' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9a26ef5b-ced7-44a4-801b-388c473883f4' class='xr-var-data-in' type='checkbox'><label for='data-9a26ef5b-ced7-44a4-801b-388c473883f4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_alt</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-b4bb5b6c-e680-458b-a3c9-5780336dc983' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b4bb5b6c-e680-458b-a3c9-5780336dc983' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-351a08f3-ced1-46fb-b536-bb681e544f53' class='xr-var-data-in' type='checkbox'><label for='data-351a08f3-ced1-46fb-b536-bb681e544f53' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_non_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-27787758-4489-4aeb-8fb6-a0a79a2e949d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-27787758-4489-4aeb-8fb6-a0a79a2e949d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-677c68a8-dfce-4d7e-9244-7908d2540395' class='xr-var-data-in' type='checkbox'><label for='data-677c68a8-dfce-4d7e-9244-7908d2540395' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 11 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_count</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 2), meta=np.ndarray&gt;</div><input id='attrs-48ee79e3-ee88-4d05-a535-ab32d80f7811' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-48ee79e3-ee88-4d05-a535-ab32d80f7811' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7287ac7d-c063-447d-af44-238f4ede0368' class='xr-var-data-in' type='checkbox'><label for='data-7287ac7d-c063-447d-af44-238f4ede0368' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>Variant allele counts. With shape (variants, alleles) and values\n",
       "corresponding to the number of non-missing occurrences of each allele.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 131.16 kiB </td>\n",
       "                        <td> 84.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 2) </td>\n",
       "                        <td> (5439, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_total</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-13f917c7-7276-4bc0-82ad-a38a40213ec6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-13f917c7-7276-4bc0-82ad-a38a40213ec6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f514033f-0b81-41ea-a7fe-c911ecd94d52' class='xr-var-data-in' type='checkbox'><label for='data-f514033f-0b81-41ea-a7fe-c911ecd94d52' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_frequency</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 2), meta=np.ndarray&gt;</div><input id='attrs-3ae08b13-8be8-494f-b363-aac8c0daf426' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3ae08b13-8be8-494f-b363-aac8c0daf426' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cca03c03-a7e1-45a0-bef1-2aa2b495385b' class='xr-var-data-in' type='checkbox'><label for='data-cca03c03-a7e1-45a0-bef1-2aa2b495385b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 131.16 kiB </td>\n",
       "                        <td> 84.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 2) </td>\n",
       "                        <td> (5439, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 14 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_called</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-90006792-91bf-4da1-8677-a2688a7fca6d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-90006792-91bf-4da1-8677-a2688a7fca6d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a5ee166f-ebf0-49df-9e6b-815e1afe1d7f' class='xr-var-data-in' type='checkbox'><label for='data-a5ee166f-ebf0-49df-9e6b-815e1afe1d7f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_call_rate</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-a51d8507-94ac-473d-931c-a7f09abf1336' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a51d8507-94ac-473d-931c-a7f09abf1336' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e7a91da8-ed56-4d73-916c-686cc0cc4ef8' class='xr-var-data-in' type='checkbox'><label for='data-e7a91da8-ed56-4d73-916c-686cc0cc4ef8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Sample call rate</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_het</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-56da3c75-26b7-4565-8577-4b330a44b2f0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-56da3c75-26b7-4565-8577-4b330a44b2f0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b50ace94-d6aa-49a8-9c00-bfc6aea5eec6' class='xr-var-data-in' type='checkbox'><label for='data-b50ace94-d6aa-49a8-9c00-bfc6aea5eec6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-faf3faa1-68ac-4fcb-ae83-596f0d246666' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-faf3faa1-68ac-4fcb-ae83-596f0d246666' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bef64b78-75b2-4b68-9fc5-dca36f047403' class='xr-var-data-in' type='checkbox'><label for='data-bef64b78-75b2-4b68-9fc5-dca36f047403' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_alt</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-a460fdfc-e4f0-45be-9655-754003152cc9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a460fdfc-e4f0-45be-9655-754003152cc9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-96c1abb5-59b5-4439-8bcc-4b243217f612' class='xr-var-data-in' type='checkbox'><label for='data-96c1abb5-59b5-4439-8bcc-4b243217f612' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_non_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-284a6fdb-e8a8-4df9-ab3c-1ce1d0cc1334' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-284a6fdb-e8a8-4df9-ab3c-1ce1d0cc1334' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ab81ebbb-ca38-41a3-9a58-ba44e86b425d' class='xr-var-data-in' type='checkbox'><label for='data-ab81ebbb-ca38-41a3-9a58-ba44e86b425d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-4b3dfc63-7292-4757-b535-c6538bf6ac4c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4b3dfc63-7292-4757-b535-c6538bf6ac4c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-603e32b5-b00f-4f5a-a8b9-3a2697a37889' class='xr-var-data-in' type='checkbox'><label for='data-603e32b5-b00f-4f5a-a8b9-3a2697a37889' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 4.00 MiB </td>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250, 2) </td>\n",
       "                        <td> (5439, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"31\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"31\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"55\" y2=\"77\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.93521893328393 10.0,31.346983639166282\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"81\" y2=\"45\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.93521893328393 80.58823529411765,101.93521893328393\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.935219\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"86.261727\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,86.261727)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"86.641101\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,86.641101)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250), meta=np.ndarray&gt;</div><input id='attrs-9b4d9ed2-2911-494e-8756-2329691ecd50' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9b4d9ed2-2911-494e-8756-2329691ecd50' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-927d3a4b-32fd-4b1a-aaef-aa138d2a681e' class='xr-var-data-in' type='checkbox'><label for='data-927d3a4b-32fd-4b1a-aaef-aa138d2a681e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.00 MiB </td>\n",
       "                        <td> 1.30 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250) </td>\n",
       "                        <td> (5439, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"81\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"31\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"31\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"31\" y1=\"0\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 31.346983639166282,0.0 31.346983639166282,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.673492\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"51.346984\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,51.346984,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250), meta=np.ndarray&gt;</div><input id='attrs-c8fb031d-f381-416d-8f68-c43db30e9489' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c8fb031d-f381-416d-8f68-c43db30e9489' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-93ebf744-a842-47d3-bac4-234321f81ce0' class='xr-var-data-in' type='checkbox'><label for='data-93ebf744-a842-47d3-bac4-234321f81ce0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.00 MiB </td>\n",
       "                        <td> 1.30 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250) </td>\n",
       "                        <td> (5439, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"81\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"31\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"31\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"31\" y1=\"0\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 31.346983639166282,0.0 31.346983639166282,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.673492\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"51.346984\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,51.346984,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-d5a6eb8d-215f-495a-b701-2d818f0929f1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d5a6eb8d-215f-495a-b701-2d818f0929f1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c1288d9f-e348-41a6-b07e-c9b2839350e0' class='xr-var-data-in' type='checkbox'><label for='data-c1288d9f-e348-41a6-b07e-c9b2839350e0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 4.00 MiB </td>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250, 2) </td>\n",
       "                        <td> (5439, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"31\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"31\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"55\" y2=\"77\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.93521893328393 10.0,31.346983639166282\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"81\" y2=\"45\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.93521893328393 80.58823529411765,101.93521893328393\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.935219\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"86.261727\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,86.261727)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"86.641101\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,86.641101)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-052be7c8-10fe-4629-a3d6-f3b64da87c9e' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-052be7c8-10fe-4629-a3d6-f3b64da87c9e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-abbfffc0-5519-4c9e-9db8-932d10cf811f' class='xr-var-data-in' type='checkbox'><label for='data-abbfffc0-5519-4c9e-9db8-932d10cf811f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 4.00 MiB </td>\n",
       "                        <td> 2.59 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250, 2) </td>\n",
       "                        <td> (5439, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"151\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"31\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"31\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"55\" y2=\"77\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,101.93521893328393 10.0,31.346983639166282\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"81\" y2=\"45\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"101\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"101\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,101.93521893328393 80.58823529411765,101.93521893328393\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"121.935219\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"86.261727\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,86.261727)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"86.641101\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,86.641101)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250), meta=np.ndarray&gt;</div><input id='attrs-6c32fa08-2f2c-4af1-8809-f72e7ef4f5d9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6c32fa08-2f2c-4af1-8809-f72e7ef4f5d9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8bfcd8a1-e236-4407-ace6-1f7aa332c3b5' class='xr-var-data-in' type='checkbox'><label for='data-8bfcd8a1-e236-4407-ace6-1f7aa332c3b5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 2.00 MiB </td>\n",
       "                        <td> 1.30 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250) </td>\n",
       "                        <td> (5439, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"81\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"31\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"31\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"31\" y1=\"0\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 31.346983639166282,0.0 31.346983639166282,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.673492\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"51.346984\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,51.346984,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-db8ff06f-b0ad-47db-9588-a48673b3e807' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-db8ff06f-b0ad-47db-9588-a48673b3e807' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fe7dab84-4358-4d65-9502-91d216e91d77' class='xr-var-data-in' type='checkbox'><label for='data-fe7dab84-4358-4d65-9502-91d216e91d77' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-7c2e8a85-1701-47b4-82a8-9ed23f333c2b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7c2e8a85-1701-47b4-82a8-9ed23f333c2b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-182ad079-4207-446f-a587-072b45e35eb3' class='xr-var-data-in' type='checkbox'><label for='data-182ad079-4207-446f-a587-072b45e35eb3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-eb37e945-fb7f-451c-acc3-91d757195a41' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-eb37e945-fb7f-451c-acc3-91d757195a41' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-78667ca1-1f88-44a6-87ec-1e3e16d9f947' class='xr-var-data-in' type='checkbox'><label for='data-78667ca1-1f88-44a6-87ec-1e3e16d9f947' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 2), meta=np.ndarray&gt;</div><input id='attrs-7f236c65-f410-4c6a-ad40-bb3a528a2ac5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7f236c65-f410-4c6a-ad40-bb3a528a2ac5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d901de14-b400-4872-93b1-f9f09575a56a' class='xr-var-data-in' type='checkbox'><label for='data-d901de14-b400-4872-93b1-f9f09575a56a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 131.16 kiB </td>\n",
       "                        <td> 84.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 2) </td>\n",
       "                        <td> (5439, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-04c2722e-b9aa-496e-b70c-664dc4eae909' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-04c2722e-b9aa-496e-b70c-664dc4eae909' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c377a53e-7932-4213-a06f-54157d9b4c6d' class='xr-var-data-in' type='checkbox'><label for='data-c377a53e-7932-4213-a06f-54157d9b4c6d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8.20 kiB </td>\n",
       "                        <td> 5.31 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 1), meta=np.ndarray&gt;</div><input id='attrs-a56c9f54-544c-430a-901b-e15eac12118e' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a56c9f54-544c-430a-901b-e15eac12118e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2c1c4493-15f6-4140-9616-c6aee0992cc7' class='xr-var-data-in' type='checkbox'><label for='data-2c1c4493-15f6-4140-9616-c6aee0992cc7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8.20 kiB </td>\n",
       "                        <td> 5.31 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 1) </td>\n",
       "                        <td> (5439, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"25\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-6d4613e8-0b03-4bc8-965a-70e07200b28a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6d4613e8-0b03-4bc8-965a-70e07200b28a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d5d13373-185e-4542-9fe8-2b40e3eec07b' class='xr-var-data-in' type='checkbox'><label for='data-d5d13373-185e-4542-9fe8-2b40e3eec07b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-557349d3-7d61-4b0c-a441-aa77343b3c1b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-557349d3-7d61-4b0c-a441-aa77343b3c1b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-95ecee3c-781c-414c-9117-4b70e5f07462' class='xr-var-data-in' type='checkbox'><label for='data-95ecee3c-781c-414c-9117-4b70e5f07462' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8.20 kiB </td>\n",
       "                        <td> 5.31 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-8d90bb90-0b2f-4a88-9bb6-ff6e8170c93a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8d90bb90-0b2f-4a88-9bb6-ff6e8170c93a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-416659e0-bcce-4381-b085-b171828530af' class='xr-var-data-in' type='checkbox'><label for='data-416659e0-bcce-4381-b085-b171828530af' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 32.79 kiB </td>\n",
       "                        <td> 21.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-f8caec78-4755-4492-9f0b-3c3bcab5f2b5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f8caec78-4755-4492-9f0b-3c3bcab5f2b5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a7a986c8-f3e6-4267-be3e-dcd0b39eeeba' class='xr-var-data-in' type='checkbox'><label for='data-a7a986c8-f3e6-4267-be3e-dcd0b39eeeba' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 32.79 kiB </td>\n",
       "                        <td> 21.25 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 3 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439,), meta=np.ndarray&gt;</div><input id='attrs-056794f8-e200-458b-8471-6c8da1ba4017' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-056794f8-e200-458b-8471-6c8da1ba4017' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-15e63588-0b53-4164-8b4b-9ea974515418' class='xr-var-data-in' type='checkbox'><label for='data-15e63588-0b53-4164-8b4b-9ea974515418' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 65.58 kiB </td>\n",
       "                        <td> 42.49 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394,) </td>\n",
       "                        <td> (5439,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8394</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-7820d827-838a-42dc-ade7-c720697fba9a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7820d827-838a-42dc-ade7-c720697fba9a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-61c74af7-39f9-464a-b9aa-8d3b1f920fe0' class='xr-var-data-in' type='checkbox'><label for='data-61c74af7-39f9-464a-b9aa-8d3b1f920fe0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;,\n",
       "       &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;GBR&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;,\n",
       "       &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-b8a5dc6e-f735-4199-8067-042b6989128e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b8a5dc6e-f735-4199-8067-042b6989128e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-15eb282a-3a70-423e-823c-c9fdfac59bae' class='xr-var-data-in' type='checkbox'><label for='data-15eb282a-3a70-423e-823c-c9fdfac59bae' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-d15f7210-2858-4b6d-b12b-6680fdb310ef' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d15f7210-2858-4b6d-b12b-6680fdb310ef' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b3e0bb0c-bf93-4047-895e-6959372e79bf' class='xr-var-data-in' type='checkbox'><label for='data-b3e0bb0c-bf93-4047-895e-6959372e79bf' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False, False, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True, False,\n",
       "       False,  True, False,  True, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "       False,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False, False,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True,  True,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True,  True, False,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False,  True,  True, False, False,  True, False,\n",
       "       False, False, False,  True,  True,  True,  True, False,  True,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True, False,  True, False,  True,  True, False,  True,  True,\n",
       "       False,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False,  True,  True, False,  True,  True,\n",
       "        True,  True,  True, False,  True, False,  True,  True, False,\n",
       "       False, False, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True, False,  True, False,  True, False, False,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True, False, False,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-5cb5ef3a-aa26-4fe6-baad-21b1e2e47805' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5cb5ef3a-aa26-4fe6-baad-21b1e2e47805' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-443167e8-1a5a-419f-b58c-adffe6284f95' class='xr-var-data-in' type='checkbox'><label for='data-443167e8-1a5a-419f-b58c-adffe6284f95' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True, False,  True,\n",
       "       False, False, False, False,  True, False, False,  True, False,\n",
       "       False,  True,  True, False,  True, False, False, False, False,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True, False, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False, False, False,  True, False, False, False, False,\n",
       "       False, False, False, False,  True, False, False,  True,  True,\n",
       "        True, False,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False,  True,  True,\n",
       "        True,  True, False, False,  True, False,  True,  True, False,\n",
       "       False,  True, False, False,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True,  True, False,\n",
       "       False, False, False, False,  True, False, False, False,  True,\n",
       "       False, False,  True, False, False, False, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True, False,\n",
       "        True, False,  True,  True, False, False, False, False,  True,\n",
       "        True,  True,  True,  True,  True, False, False,  True, False,\n",
       "       False,  True,  True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 2 5 ... 5 6 4 6 4 6 5 5</div><input id='attrs-c39748dd-5b6b-4782-affe-60c37d23a298' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c39748dd-5b6b-4782-affe-60c37d23a298' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e331ad3e-5cbd-4f71-8eda-9929dfbc417a' class='xr-var-data-in' type='checkbox'><label for='data-e331ad3e-5cbd-4f71-8eda-9929dfbc417a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 2, 5, 5, 4, 6, 5, 7, 5, 7, 1, 5, 5, 4, 4, 5, 5,\n",
       "       5, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5, 5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5,\n",
       "       5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4, 6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5,\n",
       "       4, 4, 5, 8, 3, 4, 4, 7, 5, 2, 6, 7, 6, 5, 3, 4, 5, 5, 5, 5, 6, 4,\n",
       "       5, 7, 2, 3, 3, 2, 6, 4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5,\n",
       "       6, 7, 8, 6, 2, 3, 2, 0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5,\n",
       "       5, 3, 1, 1, 3, 2, 4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4,\n",
       "       3, 3, 4, 4, 3, 5, 6, 5, 3, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5,\n",
       "       7, 5, 6, 6, 4, 4, 5, 3, 5, 4, 3, 8, 4, 6, 8, 3, 4, 2, 5, 6, 6, 4,\n",
       "       3, 5, 7, 4, 5, 5, 6, 3, 2, 4, 5, 6, 7, 2, 4, 2, 1, 5, 3, 4, 9, 6,\n",
       "       4, 3, 4, 4, 6, 7, 6, 3, 4, 3, 6, 6, 3, 4, 4, 4, 6, 7, 4, 5, 4, 5,\n",
       "       5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_dp_mean</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-12340d32-7e36-4561-98f2-30f09f9e0ff8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-12340d32-7e36-4561-98f2-30f09f9e0ff8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4add728e-1ce4-408c-9a6d-ac3b8044192d' class='xr-var-data-in' type='checkbox'><label for='data-4add728e-1ce4-408c-9a6d-ac3b8044192d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Mean Sample DP</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_dosage</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(5439, 250), meta=np.ndarray&gt;</div><input id='attrs-a4a7ebcc-c00c-4360-a425-13be82bb51fb' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a4a7ebcc-c00c-4360-a425-13be82bb51fb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-15854f80-fbac-4e5f-96cb-b36ce4fe10e5' class='xr-var-data-in' type='checkbox'><label for='data-15854f80-fbac-4e5f-96cb-b36ce4fe10e5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 16.01 MiB </td>\n",
       "                        <td> 10.37 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8394, 250) </td>\n",
       "                        <td> (5439, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 2 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"81\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"31\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"77\" x2=\"31\" y2=\"77\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"31\" y1=\"0\" x2=\"31\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 31.346983639166282,0.0 31.346983639166282,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"15.673492\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"51.346984\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,51.346984,60.000000)\">8394</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li></ul></div></li><li class='xr-section-item'><input id='section-1f7d76ca-e804-498b-9d42-455fea6750a1' class='xr-section-summary-in' type='checkbox'  ><label for='section-1f7d76ca-e804-498b-9d42-455fea6750a1' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>genotypes</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-9532ee52-3609-4be7-acec-9d4ca2bec6ee' class='xr-index-data-in' type='checkbox'/><label for='index-9532ee52-3609-4be7-acec-9d4ca2bec6ee' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;0/0&#x27;, &#x27;0/1&#x27;, &#x27;1/1&#x27;], dtype=&#x27;object&#x27;, name=&#x27;genotypes&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-0f77a1a4-bfba-49ad-904a-a8955a59f69c' class='xr-section-summary-in' type='checkbox'  ><label for='section-0f77a1a4-bfba-49ad-904a-a8955a59f69c' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 37MB\n",
       "Dimensions:                   (variants: 8394, traits: 1, genotypes: 3,\n",
       "                               alleles: 2, samples: 250, ploidy: 2,\n",
       "                               contigs: 84, filters: 1)\n",
       "Coordinates:\n",
       "  * genotypes                 (genotypes) <U3 36B '0/0' '0/1' '1/1'\n",
       "Dimensions without coordinates: variants, traits, alleles, samples, ploidy,\n",
       "                                contigs, filters\n",
       "Data variables: (12/45)\n",
       "    variant_linreg_beta       (variants, traits) float64 67kB dask.array<chunksize=(5439, 1), meta=np.ndarray>\n",
       "    variant_linreg_t_value    (variants, traits) float64 67kB dask.array<chunksize=(5439, 1), meta=np.ndarray>\n",
       "    variant_linreg_p_value    (variants, traits) float64 67kB dask.array<chunksize=(5439, 1), meta=np.ndarray>\n",
       "    variant_hwe_p_value       (variants) float64 67kB dask.array<chunksize=(5439,), meta=np.ndarray>\n",
       "    variant_genotype_count    (variants, genotypes) uint64 201kB dask.array<chunksize=(5439, 3), meta=np.ndarray>\n",
       "    genotype_id               (genotypes) <U3 36B dask.array<chunksize=(3,), meta=np.ndarray>\n",
       "    ...                        ...\n",
       "    SuperPopulation           (samples) object 2kB 'EUR' 'EUR' ... 'SAS' 'SAS'\n",
       "    isFemale                  (samples) bool 250B False True ... False True\n",
       "    PurpleHair                (samples) bool 250B False False ... True True\n",
       "    CaffeineConsumption       (samples) int64 2kB 4 4 4 3 6 2 2 ... 4 6 4 6 5 5\n",
       "    sample_dp_mean            (samples) float32 1kB dask.array<chunksize=(250,), meta=np.ndarray>\n",
       "    call_dosage               (variants, samples) int64 17MB dask.array<chunksize=(5439, 250), meta=np.ndarray>\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds[\"call_dosage\"] = ds.call_genotype.sum(dim=\"ploidy\")\n",
    "ds_lr = sg.gwas_linear_regression(ds, dosage=\"call_dosage\",\n",
    "                                  add_intercept=True, covariates=[], traits=[\"CaffeineConsumption\"])\n",
    "ds_lr"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "caring-bikini",
   "metadata": {},
   "source": [
    "You can see that new variables have been added for `variant_linreg_p_value`, `variant_linreg_t_value`, and `variant_linreg_beta`.\n",
    "\n",
    "Since sgkit doesn't have any plotting utilities,  we implement Manhattan plots and QQ plots here using Seaborn."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "cubic-assessment",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "radio-gnome",
   "metadata": {},
   "outputs": [],
   "source": [
    "def manhattan_plot(ds):\n",
    "    df = ds[[\"variant_contig_name\", \"variant_contig\", \"variant_position\", \"variant_linreg_p_value\"]].to_dataframe()\n",
    "    df[\"variant_linreg_log_p_value\"] = -np.log10(df[\"variant_linreg_p_value\"])\n",
    "    df = df.astype({\"variant_position\": np.int64}) # to avoid overflow in cumulative_pos\n",
    "    \n",
    "    # from https://github.com/mojones/video_notebooks/blob/master/Manhattan%20plots%20in%20Python.ipynb, cell 20\n",
    "    running_pos = 0\n",
    "    cumulative_pos = []\n",
    "    for chrom, group_df in df.groupby(\"variant_contig\"):  \n",
    "        cumulative_pos.append(group_df[\"variant_position\"] + running_pos)\n",
    "        running_pos += group_df[\"variant_position\"].max()\n",
    "    df[\"cumulative_pos\"] = pd.concat(cumulative_pos)\n",
    "    \n",
    "    df[\"color group\"] = df[\"variant_contig\"].apply(lambda x : \"A\" if x % 2 == 0 else \"B\")\n",
    "    \n",
    "    g = sns.relplot(\n",
    "        data = df,\n",
    "        x = \"cumulative_pos\",\n",
    "        y = \"variant_linreg_log_p_value\",\n",
    "        hue = \"color group\",\n",
    "        palette = [\"blue\", \"orange\"],\n",
    "        linewidth=0,\n",
    "        s=10,\n",
    "        legend=None,\n",
    "        aspect=3\n",
    "    )\n",
    "    g.ax.set_xlabel(\"Chromosome\")\n",
    "    g.ax.set_xticks(df.groupby(\"variant_contig\")[\"cumulative_pos\"].median())\n",
    "    g.ax.set_xticklabels(df[\"variant_contig_name\"].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "inner-egypt",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "manhattan_plot(ds_lr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "static-grove",
   "metadata": {},
   "outputs": [],
   "source": [
    "import math\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def qq_plot(ds):\n",
    "    p = ds[\"variant_linreg_p_value\"].squeeze().values\n",
    "    p.sort()\n",
    "    n = len(p)\n",
    "    expected_p = -np.log10(np.arange(1, n + 1) / n)\n",
    "    observed_p = -np.log10(p)\n",
    "    max_val = math.ceil(max(np.max(expected_p), np.max(observed_p)))\n",
    "\n",
    "    df = pd.DataFrame({\"Expected -log10(p)\": expected_p, \"Observed -log10(p)\": observed_p})\n",
    "\n",
    "    fig, ax = plt.subplots(figsize=(12, 12));\n",
    "    g = sns.scatterplot(data=df, x=\"Expected -log10(p)\", y=\"Observed -log10(p)\", ax=ax, linewidth=0)\n",
    "\n",
    "    x_pred = np.linspace(0, max_val, 50)\n",
    "    sns.lineplot(x=x_pred, y=x_pred, ax=ax)\n",
    "    \n",
    "    g.set(xlim=(0, max_val), ylim=(0, max_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "brutal-pharmaceutical",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x1200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "qq_plot(ds_lr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "timely-tsunami",
   "metadata": {},
   "source": [
    "## Confounded!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "young-parallel",
   "metadata": {},
   "source": [
    "As explained in the Hail tutorial, the data contains a confounder, so it is necessary to include ancestry as a covariate in the linear regression.\n",
    "\n",
    "Rather than just use the reported ancestry, it's better to use principal components from running a PCA on the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "virgin-creativity",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds_pca = sg.stats.pca.count_call_alternate_alleles(ds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "humanitarian-starter",
   "metadata": {},
   "outputs": [],
   "source": [
    "# To run PCA we need to filter out variants with any missing alt allele counts\n",
    "# Or where the counts are zero for all samples\n",
    "variant_mask = (((ds_pca.call_alternate_allele_count < 0).any(dim=\"samples\")) | \\\n",
    "    (ds_pca.call_alternate_allele_count.std(dim=\"samples\") <= 0.0)).compute()\n",
    "ds_pca = ds_pca.sel(variants=~variant_mask)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "statistical-bolivia",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds_pca = sg.pca(ds_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "furnished-modem",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ -8.453593 , -26.128805 , -11.008166 , ..., -14.8012085,\n",
       "         24.537292 ,  -1.0794816],\n",
       "       [ -9.496219 , -26.31961  , -10.1165   , ...,   1.6827679,\n",
       "          7.681701 ,  -5.957277 ],\n",
       "       [ -7.8734045, -25.404318 ,  -9.859189 , ...,   4.3828707,\n",
       "         -9.368455 ,   6.384332 ],\n",
       "       ...,\n",
       "       [-10.974407 , -11.576625 ,  20.124645 , ...,  -4.421063 ,\n",
       "         -0.5393095,   1.0124555],\n",
       "       [-10.754403 , -11.41477  ,  15.358788 , ...,   1.7951674,\n",
       "          3.4263668,  -7.985674 ],\n",
       "       [-13.0628805, -11.688103 ,  16.351276 , ...,  -7.2050505,\n",
       "         -1.7339798,   5.17502  ]], dtype=float32)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_pca.sample_pca_projection.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "faced-dutch",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 17MB\n",
       "Dimensions:                              (samples: 250, components: 10,\n",
       "                                          variants: 3491, genotypes: 3,\n",
       "                                          alleles: 2, ploidy: 2, contigs: 84,\n",
       "                                          filters: 1)\n",
       "Coordinates:\n",
       "  * genotypes                            (genotypes) &lt;U3 36B &#x27;0/0&#x27; &#x27;0/1&#x27; &#x27;1/1&#x27;\n",
       "Dimensions without coordinates: samples, components, variants, alleles, ploidy,\n",
       "                                contigs, filters\n",
       "Data variables: (12/48)\n",
       "    sample_pca_projection                (samples, components) float32 10kB dask.array&lt;chunksize=(250, 10), meta=np.ndarray&gt;\n",
       "    sample_pca_component                 (variants, components) float32 140kB dask.array&lt;chunksize=(3491, 10), meta=np.ndarray&gt;\n",
       "    sample_pca_explained_variance        (components) float32 40B dask.array&lt;chunksize=(10,), meta=np.ndarray&gt;\n",
       "    sample_pca_explained_variance_ratio  (components) float32 40B dask.array&lt;chunksize=(10,), meta=np.ndarray&gt;\n",
       "    sample_pca_loading                   (variants, components) float32 140kB dask.array&lt;chunksize=(3491, 10), meta=np.ndarray&gt;\n",
       "    call_alternate_allele_count          (variants, samples) int16 2MB dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;\n",
       "    ...                                   ...\n",
       "    SuperPopulation                      (samples) object 2kB &#x27;EUR&#x27; ... &#x27;SAS&#x27;\n",
       "    isFemale                             (samples) bool 250B False True ... True\n",
       "    PurpleHair                           (samples) bool 250B False ... True\n",
       "    CaffeineConsumption                  (samples) int64 2kB 4 4 4 3 ... 4 6 5 5\n",
       "    sample_dp_mean                       (samples) float32 1kB dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;\n",
       "    call_dosage                          (variants, samples) int64 7MB dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;\n",
       "Attributes: (3)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-cd93a909-8349-4d39-8cca-316120c89598' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-cd93a909-8349-4d39-8cca-316120c89598' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>samples</span>: 250</li><li><span>components</span>: 10</li><li><span>variants</span>: 3491</li><li><span class='xr-has-index'>genotypes</span>: 3</li><li><span>alleles</span>: 2</li><li><span>ploidy</span>: 2</li><li><span>contigs</span>: 84</li><li><span>filters</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-98b9e1eb-7642-43f0-ae94-e35da0adaa94' class='xr-section-summary-in' type='checkbox'  checked><label for='section-98b9e1eb-7642-43f0-ae94-e35da0adaa94' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>genotypes</span></div><div class='xr-var-dims'>(genotypes)</div><div class='xr-var-dtype'>&lt;U3</div><div class='xr-var-preview xr-preview'>&#x27;0/0&#x27; &#x27;0/1&#x27; &#x27;1/1&#x27;</div><input id='attrs-1467240b-655e-4157-a4d6-7fc961784f44' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1467240b-655e-4157-a4d6-7fc961784f44' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bf4e66de-a31c-42f8-9d24-3a0457068586' class='xr-var-data-in' type='checkbox'><label for='data-bf4e66de-a31c-42f8-9d24-3a0457068586' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;0/0&#x27;, &#x27;0/1&#x27;, &#x27;1/1&#x27;], dtype=&#x27;&lt;U3&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-59bd61ac-7bff-4d36-bd1b-ad41e5098f7f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-59bd61ac-7bff-4d36-bd1b-ad41e5098f7f' class='xr-section-summary' >Data variables: <span>(48)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>sample_pca_projection</span></div><div class='xr-var-dims'>(samples, components)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250, 10), meta=np.ndarray&gt;</div><input id='attrs-b2ca0f90-3fc1-458a-835f-07ce7cf2e741' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b2ca0f90-3fc1-458a-835f-07ce7cf2e741' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d351b592-d894-40c0-95ce-01d59454fb04' class='xr-var-data-in' type='checkbox'><label for='data-d351b592-d894-40c0-95ce-01d59454fb04' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                        <td> 9.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250, 10) </td>\n",
       "                        <td> (250, 10) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 52 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"83\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"33\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"33\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"33\" y1=\"0\" x2=\"33\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 33.13387930424821,0.0 33.13387930424821,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"16.566940\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10</text>\n",
       "  <text x=\"53.133879\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,53.133879,60.000000)\">250</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_pca_component</span></div><div class='xr-var-dims'>(variants, components)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 10), meta=np.ndarray&gt;</div><input id='attrs-847f63a6-8de9-4b07-8b99-c2932ba2c56a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-847f63a6-8de9-4b07-8b99-c2932ba2c56a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1b889ef4-ad8f-4070-8252-6caa43726461' class='xr-var-data-in' type='checkbox'><label for='data-1b889ef4-ad8f-4070-8252-6caa43726461' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 136.37 kiB </td>\n",
       "                        <td> 136.37 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 10) </td>\n",
       "                        <td> (3491, 10) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 49 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_pca_explained_variance</span></div><div class='xr-var-dims'>(components)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10,), meta=np.ndarray&gt;</div><input id='attrs-e50ac4ae-72ab-41ea-be72-c336d33ec7da' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e50ac4ae-72ab-41ea-be72-c336d33ec7da' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-470aa865-7568-45e6-9ce7-7db4b8fa0f45' class='xr-var-data-in' type='checkbox'><label for='data-470aa865-7568-45e6-9ce7-7db4b8fa0f45' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 40 B </td>\n",
       "                        <td> 40 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10,) </td>\n",
       "                        <td> (10,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 55 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"88\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"38\" x2=\"120\" y2=\"38\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"38\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"38\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,38.596863036086 0.0,38.596863036086\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"58.596863\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10</text>\n",
       "  <text x=\"140.000000\" y=\"19.298432\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,19.298432)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_pca_explained_variance_ratio</span></div><div class='xr-var-dims'>(components)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(10,), meta=np.ndarray&gt;</div><input id='attrs-1c9ea288-6474-4558-ae58-b34ef169788a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1c9ea288-6474-4558-ae58-b34ef169788a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7914e8fe-65d7-4afe-917c-2c570192988f' class='xr-var-data-in' type='checkbox'><label for='data-7914e8fe-65d7-4afe-917c-2c570192988f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 40 B </td>\n",
       "                        <td> 40 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (10,) </td>\n",
       "                        <td> (10,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 60 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"88\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"38\" x2=\"120\" y2=\"38\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"38\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"38\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,38.596863036086 0.0,38.596863036086\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"58.596863\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10</text>\n",
       "  <text x=\"140.000000\" y=\"19.298432\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,19.298432)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_pca_loading</span></div><div class='xr-var-dims'>(variants, components)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 10), meta=np.ndarray&gt;</div><input id='attrs-f9097709-55fa-4227-b717-bba2675699b0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f9097709-55fa-4227-b717-bba2675699b0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-860762d2-1fdd-45f4-b176-03dd17c894a7' class='xr-var-data-in' type='checkbox'><label for='data-860762d2-1fdd-45f4-b176-03dd17c894a7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 136.37 kiB </td>\n",
       "                        <td> 136.37 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 10) </td>\n",
       "                        <td> (3491, 10) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 61 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >10</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_alternate_allele_count</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int16</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;</div><input id='attrs-afad228d-3847-4e74-ad1b-373b39ffadeb' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-afad228d-3847-4e74-ad1b-373b39ffadeb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-970f9da9-bc50-4908-a723-ea8692dad85d' class='xr-var-data-in' type='checkbox'><label for='data-970f9da9-bc50-4908-a723-ea8692dad85d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250) </td>\n",
       "                        <td> (3491, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 18 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int16 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"86\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"36\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 36.6748228670204,0.0 36.6748228670204,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"18.337411\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"56.674823\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,56.674823,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_hwe_p_value</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-efecd29d-72a9-44f3-9df5-69cbe99a1987' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-efecd29d-72a9-44f3-9df5-69cbe99a1987' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c22a3021-6cb3-471e-b291-84c7fbeb9a1b' class='xr-var-data-in' type='checkbox'><label for='data-c22a3021-6cb3-471e-b291-84c7fbeb9a1b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>P values from HWE test for each variant as float in [0, 1].</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_genotype_count</span></div><div class='xr-var-dims'>(variants, genotypes)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 3), meta=np.ndarray&gt;</div><input id='attrs-be299f73-8895-4644-98f9-2b6ebdbe0483' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-be299f73-8895-4644-98f9-2b6ebdbe0483' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f734836b-8e8d-4cd3-9045-ede275abda4b' class='xr-var-data-in' type='checkbox'><label for='data-f734836b-8e8d-4cd3-9045-ede275abda4b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>The number of observations for each possible genotype at each variant.\n",
       "Counts are sorted following the ordering defined in the VCF specification.\n",
       "\n",
       "- For biallelic, diploid genotypes the ordering is ``00``, ``01``, ``11``\n",
       "  (homozygous reference, heterozygous, homozygous alternate).\n",
       "- For triallelic, diploid genotypes the ordering is ``00``, ``01``, ``11``,\n",
       "  ``02``, ``12``, ``22``\n",
       "- For triallelic, triploid genotypes the ordering is  ``000``, ``001``, ``011``,\n",
       "  ``111``, ``002``, ``012``, ``112``, ``022``, ``122``, ``222``</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 81.82 kiB </td>\n",
       "                        <td> 81.82 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 3) </td>\n",
       "                        <td> (3491, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>genotype_id</span></div><div class='xr-var-dims'>(genotypes)</div><div class='xr-var-dtype'>&lt;U3</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3,), meta=np.ndarray&gt;</div><input id='attrs-91446523-d7b7-4aef-b173-e35482bda74a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-91446523-d7b7-4aef-b173-e35482bda74a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-19af6fa2-794e-416b-bdab-5a0e010b6384' class='xr-var-data-in' type='checkbox'><label for='data-19af6fa2-794e-416b-bdab-5a0e010b6384' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>VCF style genotype strings for all possible genotypes given the size of the\n",
       "ploidy and alleles dimensions. The ordering of genotype strings follows the\n",
       "ordering outlined in the VCF specification for arrays of size &quot;G&quot;.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 36 B </td>\n",
       "                        <td> 36 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3,) </td>\n",
       "                        <td> (3,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> <U3 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"93\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"43\" x2=\"120\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"43\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,43.88583450710766 0.0,43.88583450710766\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"63.885835\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"140.000000\" y=\"21.942917\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,21.942917)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_called</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-a8dce570-2146-4e85-af53-67c554b28d12' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a8dce570-2146-4e85-af53-67c554b28d12' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9ea597ac-7f0e-4ae2-97b5-750f3ba5aade' class='xr-var-data-in' type='checkbox'><label for='data-9ea597ac-7f0e-4ae2-97b5-750f3ba5aade' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_call_rate</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-e1a7fb47-c6a4-43e2-84cd-e1bbc85e6d08' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e1a7fb47-c6a4-43e2-84cd-e1bbc85e6d08' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-88ea9807-c5ae-4826-a5c4-45d4343f4f76' class='xr-var-data-in' type='checkbox'><label for='data-88ea9807-c5ae-4826-a5c4-45d4343f4f76' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 12 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_het</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-c32cd6b6-a62e-4068-bc33-526320353ce1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c32cd6b6-a62e-4068-bc33-526320353ce1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bc578540-8272-4c79-ad24-692d9c94d5a2' class='xr-var-data-in' type='checkbox'><label for='data-bc578540-8272-4c79-ad24-692d9c94d5a2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-5db4bfb4-5198-420e-814e-5e4851a473ba' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5db4bfb4-5198-420e-814e-5e4851a473ba' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8944504a-9f4d-4720-b2b1-17ff2ca8c6e2' class='xr-var-data-in' type='checkbox'><label for='data-8944504a-9f4d-4720-b2b1-17ff2ca8c6e2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_hom_alt</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-b5e4be03-4fe0-4c63-b73e-4b775609c1c1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b5e4be03-4fe0-4c63-b73e-4b775609c1c1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e8751d03-e2c3-4c5f-adb3-1497fd2b77f9' class='xr-var-data-in' type='checkbox'><label for='data-e8751d03-e2c3-4c5f-adb3-1497fd2b77f9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_n_non_ref</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-2d21bd7c-66cb-4b95-b5f7-27a25ba09689' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2d21bd7c-66cb-4b95-b5f7-27a25ba09689' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-78f86785-9104-4a6e-9988-fb0bb720e686' class='xr-var-data-in' type='checkbox'><label for='data-78f86785-9104-4a6e-9988-fb0bb720e686' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 12 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_count</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>uint64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 2), meta=np.ndarray&gt;</div><input id='attrs-d753a9a4-725f-4d60-9a2f-4d8ea27486cd' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d753a9a4-725f-4d60-9a2f-4d8ea27486cd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c01d0554-e4aa-42fa-9c65-54c7e97fbd4e' class='xr-var-data-in' type='checkbox'><label for='data-c01d0554-e4aa-42fa-9c65-54c7e97fbd4e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>comment :</span></dt><dd>Variant allele counts. With shape (variants, alleles) and values\n",
       "corresponding to the number of non-missing occurrences of each allele.</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 54.55 kiB </td>\n",
       "                        <td> 54.55 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 2) </td>\n",
       "                        <td> (3491, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_total</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-9e1526c2-ef5d-46e1-9982-8ae3dfa1f38e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9e1526c2-ef5d-46e1-9982-8ae3dfa1f38e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d7cde76c-c241-4aba-bd59-4d2882496daa' class='xr-var-data-in' type='checkbox'><label for='data-d7cde76c-c241-4aba-bd59-4d2882496daa' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele_frequency</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 2), meta=np.ndarray&gt;</div><input id='attrs-e0e16303-21e1-47c4-ad7e-31e30dac6b33' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e0e16303-21e1-47c4-ad7e-31e30dac6b33' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0cdf9198-8694-4594-99ba-ec7ab6af0122' class='xr-var-data-in' type='checkbox'><label for='data-0cdf9198-8694-4594-99ba-ec7ab6af0122' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 54.55 kiB </td>\n",
       "                        <td> 54.55 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 2) </td>\n",
       "                        <td> (3491, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 15 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_called</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-5ad5cae2-28e6-4712-93f3-f663b3321c6f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5ad5cae2-28e6-4712-93f3-f663b3321c6f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-de296656-6e6d-4199-ac13-84a809ea411d' class='xr-var-data-in' type='checkbox'><label for='data-de296656-6e6d-4199-ac13-84a809ea411d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_call_rate</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-59620ae0-9a51-4a4c-ace2-1def581cf62b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-59620ae0-9a51-4a4c-ace2-1def581cf62b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-801fb11e-b064-4ef3-9854-46baee9b8f39' class='xr-var-data-in' type='checkbox'><label for='data-801fb11e-b064-4ef3-9854-46baee9b8f39' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Sample call rate</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_het</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-2cbe9f1a-9294-47ba-9b73-579250aab553' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2cbe9f1a-9294-47ba-9b73-579250aab553' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f26f2d7f-d47c-4323-98a2-efbb7c3e4676' class='xr-var-data-in' type='checkbox'><label for='data-f26f2d7f-d47c-4323-98a2-efbb7c3e4676' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-36664975-5e22-4b75-949e-4d50e08926d6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-36664975-5e22-4b75-949e-4d50e08926d6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fbc2d053-a352-4269-b80e-3f69beb37204' class='xr-var-data-in' type='checkbox'><label for='data-fbc2d053-a352-4269-b80e-3f69beb37204' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_hom_alt</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-c9d49af5-b5f6-450b-8542-aae2189e5b59' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c9d49af5-b5f6-450b-8542-aae2189e5b59' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bc628f76-7a52-44fb-af4e-c29fd3ab1140' class='xr-var-data-in' type='checkbox'><label for='data-bc628f76-7a52-44fb-af4e-c29fd3ab1140' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 6 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_n_non_ref</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-0f1afed6-5317-4591-8a7f-eebceaa47468' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0f1afed6-5317-4591-8a7f-eebceaa47468' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-362c5dd8-727d-4913-9809-2b7af54400f0' class='xr-var-data-in' type='checkbox'><label for='data-362c5dd8-727d-4913-9809-2b7af54400f0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                        <td> 1.95 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 9 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_AD</span></div><div class='xr-var-dims'>(variants, samples, alleles)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-60947b57-6231-4a64-8dde-20ae04a38750' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-60947b57-6231-4a64-8dde-20ae04a38750' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-095d1478-b218-41e7-b4fc-06928fb856a9' class='xr-var-data-in' type='checkbox'><label for='data-095d1478-b218-41e7-b4fc-06928fb856a9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250, 2) </td>\n",
       "                        <td> (3491, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"157\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"36\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"36\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,107.26305816113805 10.0,36.6748228670204\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"107\" x2=\"106\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,107.26305816113805 80.58823529411765,107.26305816113805\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"127.263058\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"88.925647\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,88.925647)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"91.968941\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,91.968941)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_DP</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;</div><input id='attrs-b669d88a-32f1-4752-a2ce-88975d9bf10c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b669d88a-32f1-4752-a2ce-88975d9bf10c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-890c840b-a9b2-42a0-9b7a-293a0d1d10c9' class='xr-var-data-in' type='checkbox'><label for='data-890c840b-a9b2-42a0-9b7a-293a0d1d10c9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 852.29 kiB </td>\n",
       "                        <td> 852.29 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250) </td>\n",
       "                        <td> (3491, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"86\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"36\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 36.6748228670204,0.0 36.6748228670204,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"18.337411\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"56.674823\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,56.674823,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_GQ</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;</div><input id='attrs-d6ac6626-3f36-4e46-bdb0-8cd39889719d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d6ac6626-3f36-4e46-bdb0-8cd39889719d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f48a3bbc-1545-4a10-8b8e-934ba11fddf4' class='xr-var-data-in' type='checkbox'><label for='data-f48a3bbc-1545-4a10-8b8e-934ba11fddf4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 852.29 kiB </td>\n",
       "                        <td> 852.29 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250) </td>\n",
       "                        <td> (3491, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"86\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"36\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 36.6748228670204,0.0 36.6748228670204,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"18.337411\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"56.674823\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,56.674823,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-ecd0f03b-b15f-4b73-be38-4e9b5fd4e4da' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ecd0f03b-b15f-4b73-be38-4e9b5fd4e4da' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c08dd3d0-306e-49d6-8298-e31069721c3c' class='xr-var-data-in' type='checkbox'><label for='data-c08dd3d0-306e-49d6-8298-e31069721c3c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250, 2) </td>\n",
       "                        <td> (3491, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"157\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"36\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"36\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,107.26305816113805 10.0,36.6748228670204\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"107\" x2=\"106\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,107.26305816113805 80.58823529411765,107.26305816113805\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"127.263058\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"88.925647\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,88.925647)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"91.968941\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,91.968941)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_mask</span></div><div class='xr-var-dims'>(variants, samples, ploidy)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250, 2), meta=np.ndarray&gt;</div><input id='attrs-2158102a-e526-48f9-9093-22845f22dae0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2158102a-e526-48f9-9093-22845f22dae0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2130bf92-68c7-47a3-8617-d9ade94904e2' class='xr-var-data-in' type='checkbox'><label for='data-2130bf92-68c7-47a3-8617-d9ade94904e2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                        <td> 1.66 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250, 2) </td>\n",
       "                        <td> (3491, 250, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"156\" height=\"157\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"36\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"36\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 80.58823529411765,70.58823529411765 80.58823529411765,107.26305816113805 10.0,36.6748228670204\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"35\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 35.41261651458248,0.0 106.00085180870013,70.58823529411765 80.58823529411765,70.58823529411765\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"106\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"107\" x2=\"106\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"106\" y1=\"70\" x2=\"106\" y2=\"107\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.58823529411765,70.58823529411765 106.00085180870013,70.58823529411765 106.00085180870013,107.26305816113805 80.58823529411765,107.26305816113805\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"93.294544\" y=\"127.263058\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"126.000852\" y=\"88.925647\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,126.000852,88.925647)\">250</text>\n",
       "  <text x=\"35.294118\" y=\"91.968941\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,91.968941)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_genotype_phased</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;</div><input id='attrs-59f60802-9a39-4f7b-9a98-09d3c01bf70c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-59f60802-9a39-4f7b-9a98-09d3c01bf70c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-56b40f04-3974-45cf-85a2-71875b117091' class='xr-var-data-in' type='checkbox'><label for='data-56b40f04-3974-45cf-85a2-71875b117091' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 852.29 kiB </td>\n",
       "                        <td> 852.29 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250) </td>\n",
       "                        <td> (3491, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 5 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"86\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"36\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 36.6748228670204,0.0 36.6748228670204,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"18.337411\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"56.674823\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,56.674823,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_id</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-abf2fbf6-13c7-452d-a892-e1f0843da781' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-abf2fbf6-13c7-452d-a892-e1f0843da781' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7f0e4bcc-2550-4827-b13b-1ea8dd0bf714' class='xr-var-data-in' type='checkbox'><label for='data-7f0e4bcc-2550-4827-b13b-1ea8dd0bf714' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>contig_length</span></div><div class='xr-var-dims'>(contigs)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(84,), meta=np.ndarray&gt;</div><input id='attrs-68fbf59b-d816-4286-9404-931130445c45' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-68fbf59b-d816-4286-9404-931130445c45' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d7c1d009-00b9-41d0-b4b8-2ed2b5c0e0b0' class='xr-var-data-in' type='checkbox'><label for='data-d7c1d009-00b9-41d0-b4b8-2ed2b5c0e0b0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 672 B </td>\n",
       "                        <td> 672 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (84,) </td>\n",
       "                        <td> (84,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"76\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"26\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"26\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,26.26679152969952 0.0,26.26679152969952\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"46.266792\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >84</text>\n",
       "  <text x=\"140.000000\" y=\"13.133396\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,13.133396)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>filter_id</span></div><div class='xr-var-dims'>(filters)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</div><input id='attrs-07a077f2-b246-4c0b-b424-d986f46d6fe0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-07a077f2-b246-4c0b-b424-d986f46d6fe0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-69054126-a976-462d-979d-5d3db05b2e25' class='xr-var-data-in' type='checkbox'><label for='data-69054126-a976-462d-979d-5d3db05b2e25' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8 B </td>\n",
       "                        <td> 8 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1,) </td>\n",
       "                        <td> (1,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_allele</span></div><div class='xr-var-dims'>(variants, alleles)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 2), meta=np.ndarray&gt;</div><input id='attrs-8f1e5c4a-96f9-48a3-8cf1-84065b8d7824' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8f1e5c4a-96f9-48a3-8cf1-84065b8d7824' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-897289be-d16b-4be1-965e-824041c80459' class='xr-var-data-in' type='checkbox'><label for='data-897289be-d16b-4be1-965e-824041c80459' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of the reference and alternate alleles</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 54.55 kiB </td>\n",
       "                        <td> 54.55 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 2) </td>\n",
       "                        <td> (3491, 2) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int8</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-61519a29-be25-471f-93b9-7b57c50a704d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-61519a29-be25-471f-93b9-7b57c50a704d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b1a9c59f-c5a3-435e-a139-b614ab435e59' class='xr-var-data-in' type='checkbox'><label for='data-b1a9c59f-c5a3-435e-a139-b614ab435e59' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>An identifier from the reference genome or an angle-bracketed ID string pointing to a contig in the assembly file</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 3.41 kiB </td>\n",
       "                        <td> 3.41 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int8 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_filter</span></div><div class='xr-var-dims'>(variants, filters)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 1), meta=np.ndarray&gt;</div><input id='attrs-6dbfa86d-800a-40f8-8950-85d020656b69' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6dbfa86d-800a-40f8-8950-85d020656b69' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cf3b1215-5d74-4c49-9a66-477b15e354d8' class='xr-var-data-in' type='checkbox'><label for='data-cf3b1215-5d74-4c49-9a66-477b15e354d8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Filter status of the variant</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 3.41 kiB </td>\n",
       "                        <td> 3.41 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 1) </td>\n",
       "                        <td> (3491, 1) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"75\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 25.412616514582485,0.0 25.412616514582485,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"12.706308\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1</text>\n",
       "  <text x=\"45.412617\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,45.412617,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-1aa6cd89-ed75-47d3-8a58-331a746c2a03' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1aa6cd89-ed75-47d3-8a58-331a746c2a03' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-42216cec-f693-4ea0-8ae9-0fe489928f02' class='xr-var-data-in' type='checkbox'><label for='data-42216cec-f693-4ea0-8ae9-0fe489928f02' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>List of unique identifiers where applicable</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_id_mask</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-0168e5cc-dca8-410b-8967-f0bdc0b2a119' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0168e5cc-dca8-410b-8967-f0bdc0b2a119' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1e0689e2-107d-4120-a424-7f0d377ab7b2' class='xr-var-data-in' type='checkbox'><label for='data-1e0689e2-107d-4120-a424-7f0d377ab7b2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd></dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 3.41 kiB </td>\n",
       "                        <td> 3.41 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> bool numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_position</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-4c3fcc6a-ace1-46e4-941b-9b6c5013e0a4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4c3fcc6a-ace1-46e4-941b-9b6c5013e0a4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3e6f319e-dab0-4dfa-b542-c39d8098ee06' class='xr-var-data-in' type='checkbox'><label for='data-3e6f319e-dab0-4dfa-b542-c39d8098ee06' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The reference position</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 13.64 kiB </td>\n",
       "                        <td> 13.64 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_quality</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-1b04e604-afea-4ded-bc05-72b6c65bc0b9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1b04e604-afea-4ded-bc05-72b6c65bc0b9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6018ee7e-a268-49d9-9824-7da03be4e313' class='xr-var-data-in' type='checkbox'><label for='data-6018ee7e-a268-49d9-9824-7da03be4e313' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Phred-scaled quality score</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 13.64 kiB </td>\n",
       "                        <td> 13.64 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>variant_contig_name</span></div><div class='xr-var-dims'>(variants)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491,), meta=np.ndarray&gt;</div><input id='attrs-4ce82e90-ee31-4793-93e0-d110cffb389b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4ce82e90-ee31-4793-93e0-d110cffb389b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8d61541a-93cf-418c-8d6e-249abd7f86cb' class='xr-var-data-in' type='checkbox'><label for='data-8d61541a-93cf-418c-8d6e-249abd7f86cb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                        <td> 27.27 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491,) </td>\n",
       "                        <td> (3491,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 10 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> object numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3491</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Population</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;GBR&#x27; &#x27;GBR&#x27; &#x27;GBR&#x27; ... &#x27;GIH&#x27; &#x27;GIH&#x27;</div><input id='attrs-d0b12416-ac5a-4695-9b6c-d833b18cf981' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d0b12416-ac5a-4695-9b6c-d833b18cf981' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-10210335-182d-445d-9504-06d11276c7ba' class='xr-var-data-in' type='checkbox'><label for='data-10210335-182d-445d-9504-06d11276c7ba' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;GBR&#x27;, &#x27;FIN&#x27;, &#x27;FIN&#x27;,\n",
       "       &#x27;FIN&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;,\n",
       "       &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;CHS&#x27;, &#x27;PUR&#x27;, &#x27;CDX&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;GBR&#x27;, &#x27;CLM&#x27;,\n",
       "       &#x27;PUR&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;CLM&#x27;, &#x27;IBS&#x27;, &#x27;PEL&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;,\n",
       "       &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;GBR&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;PEL&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;, &#x27;KHV&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;IBS&#x27;, &#x27;IBS&#x27;, &#x27;CDX&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;, &#x27;PEL&#x27;,\n",
       "       &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;, &#x27;CDX&#x27;,\n",
       "       &#x27;ACB&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;KHV&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ACB&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;,\n",
       "       &#x27;GWD&#x27;, &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;,\n",
       "       &#x27;ESN&#x27;, &#x27;BEB&#x27;, &#x27;GWD&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;PJL&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;GWD&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;,\n",
       "       &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;PJL&#x27;, &#x27;PJL&#x27;, &#x27;ESN&#x27;, &#x27;MSL&#x27;, &#x27;MSL&#x27;, &#x27;BEB&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;PJL&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;, &#x27;BEB&#x27;, &#x27;BEB&#x27;, &#x27;ITU&#x27;, &#x27;STU&#x27;,\n",
       "       &#x27;STU&#x27;, &#x27;ITU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;,\n",
       "       &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;CEU&#x27;, &#x27;YRI&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;CHB&#x27;,\n",
       "       &#x27;CHB&#x27;, &#x27;CHB&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;,\n",
       "       &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;JPT&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;, &#x27;YRI&#x27;,\n",
       "       &#x27;YRI&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;, &#x27;LWK&#x27;,\n",
       "       &#x27;LWK&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;MXL&#x27;, &#x27;MXL&#x27;,\n",
       "       &#x27;MXL&#x27;, &#x27;ASW&#x27;, &#x27;ASW&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;,\n",
       "       &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;TSI&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;,\n",
       "       &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;, &#x27;GIH&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SuperPopulation</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;EUR&#x27; &#x27;EUR&#x27; &#x27;EUR&#x27; ... &#x27;SAS&#x27; &#x27;SAS&#x27;</div><input id='attrs-0f1341f9-4b18-4e86-8571-083e5aa62c91' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0f1341f9-4b18-4e86-8571-083e5aa62c91' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b0b24469-eb37-446d-aba1-7923001e47c5' class='xr-var-data-in' type='checkbox'><label for='data-b0b24469-eb37-446d-aba1-7923001e47c5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;AMR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EAS&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;,\n",
       "       &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;EAS&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;,\n",
       "       &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AMR&#x27;, &#x27;AMR&#x27;,\n",
       "       &#x27;AMR&#x27;, &#x27;AFR&#x27;, &#x27;AFR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;,\n",
       "       &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;EUR&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;,\n",
       "       &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;, &#x27;SAS&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>isFemale</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False True False ... False True</div><input id='attrs-a85e496f-6f00-408e-8adf-55ae27d2ac9a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a85e496f-6f00-408e-8adf-55ae27d2ac9a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8d1b8dd0-06e2-4a57-b7e1-2aad49e86684' class='xr-var-data-in' type='checkbox'><label for='data-8d1b8dd0-06e2-4a57-b7e1-2aad49e86684' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False,  True, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False, False, False,  True,\n",
       "        True,  True, False,  True,  True, False,  True,  True, False,\n",
       "       False,  True, False,  True, False,  True,  True, False,  True,\n",
       "        True, False, False,  True,  True,  True, False,  True, False,\n",
       "       False,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True,  True,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True, False, False,  True,\n",
       "        True,  True,  True,  True, False, False, False,  True,  True,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True,  True, False,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False,  True,  True, False, False,  True, False,\n",
       "       False, False, False,  True,  True,  True,  True, False,  True,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True,  True,  True,  True,  True,  True, False,  True,\n",
       "        True, False,  True, False,  True,  True, False,  True,  True,\n",
       "       False,  True, False,  True, False,  True,  True, False, False,\n",
       "       False, False,  True, False,  True,  True, False,  True,  True,\n",
       "        True,  True,  True, False,  True, False,  True,  True, False,\n",
       "       False, False, False,  True, False, False,  True, False,  True,\n",
       "       False, False,  True, False,  True, False,  True,  True, False,\n",
       "        True, False, False,  True,  True, False, False,  True,  True,\n",
       "        True, False, False, False, False,  True, False, False,  True,\n",
       "        True,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True, False,  True, False,  True, False,  True, False, False,\n",
       "        True, False, False,  True, False,  True,  True,  True, False,\n",
       "        True, False,  True, False, False,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PurpleHair</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>bool</div><div class='xr-var-preview xr-preview'>False False False ... True True</div><input id='attrs-1e4de878-005a-480b-8019-286bd3310358' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1e4de878-005a-480b-8019-286bd3310358' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-afcf3ee8-1d3a-4914-bb75-e3f231198926' class='xr-var-data-in' type='checkbox'><label for='data-afcf3ee8-1d3a-4914-bb75-e3f231198926' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([False, False, False, False, False,  True, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False, False, False, False,\n",
       "        True, False,  True,  True,  True, False,  True, False,  True,\n",
       "       False, False, False, False,  True, False, False,  True, False,\n",
       "       False,  True,  True, False,  True, False, False, False, False,\n",
       "       False,  True,  True, False, False,  True,  True,  True, False,\n",
       "       False,  True, False,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True, False,  True,  True,  True,  True,  True, False,\n",
       "       False, False,  True, False,  True,  True, False, False, False,\n",
       "       False,  True, False,  True, False,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True, False, False, False,  True,\n",
       "        True, False, False,  True,  True,  True,  True,  True, False,\n",
       "       False,  True,  True, False, False, False, False, False,  True,\n",
       "       False, False, False, False,  True, False, False, False, False,\n",
       "       False, False, False, False,  True, False, False,  True,  True,\n",
       "        True, False,  True, False,  True,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False,  True,  True,\n",
       "        True,  True, False, False,  True, False,  True,  True, False,\n",
       "       False,  True, False, False,  True,  True,  True,  True,  True,\n",
       "        True, False,  True,  True, False, False,  True,  True,  True,\n",
       "       False,  True, False, False, False,  True,  True,  True, False,\n",
       "       False, False, False, False,  True, False, False, False,  True,\n",
       "       False, False,  True, False, False, False, False, False,  True,\n",
       "       False,  True,  True, False, False, False, False,  True, False,\n",
       "        True, False,  True,  True, False, False, False, False,  True,\n",
       "        True,  True,  True,  True,  True, False, False,  True, False,\n",
       "       False,  True,  True,  True, False,  True,  True])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>CaffeineConsumption</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>4 4 4 3 6 2 2 5 ... 5 6 4 6 4 6 5 5</div><input id='attrs-c3bcd7b5-80ea-49b3-a577-89ed7de9f5f7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c3bcd7b5-80ea-49b3-a577-89ed7de9f5f7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b67a0b32-9cba-44ca-8f86-d64a72c4dd96' class='xr-var-data-in' type='checkbox'><label for='data-b67a0b32-9cba-44ca-8f86-d64a72c4dd96' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([4, 4, 4, 3, 6, 2, 2, 5, 5, 4, 6, 5, 7, 5, 7, 1, 5, 5, 4, 4, 5, 5,\n",
       "       5, 6, 4, 4, 6, 3, 3, 5, 4, 4, 5, 5, 4, 6, 5, 4, 4, 5, 6, 3, 7, 5,\n",
       "       5, 6, 3, 2, 5, 5, 4, 6, 5, 6, 4, 6, 7, 6, 7, 3, 5, 6, 5, 6, 4, 5,\n",
       "       4, 4, 5, 8, 3, 4, 4, 7, 5, 2, 6, 7, 6, 5, 3, 4, 5, 5, 5, 5, 6, 4,\n",
       "       5, 7, 2, 3, 3, 2, 6, 4, 2, 6, 5, 3, 4, 7, 6, 7, 6, 3, 4, 2, 2, 5,\n",
       "       6, 7, 8, 6, 2, 3, 2, 0, 5, 7, 5, 1, 4, 3, 2, 4, 6, 5, 4, 4, 1, 5,\n",
       "       5, 3, 1, 1, 3, 2, 4, 2, 1, 3, 3, 4, 4, 5, 6, 5, 4, 5, 0, 4, 5, 4,\n",
       "       3, 3, 4, 4, 3, 5, 6, 5, 3, 4, 4, 6, 3, 5, 5, 4, 5, 3, 5, 4, 6, 5,\n",
       "       7, 5, 6, 6, 4, 4, 5, 3, 5, 4, 3, 8, 4, 6, 8, 3, 4, 2, 5, 6, 6, 4,\n",
       "       3, 5, 7, 4, 5, 5, 6, 3, 2, 4, 5, 6, 7, 2, 4, 2, 1, 5, 3, 4, 9, 6,\n",
       "       4, 3, 4, 4, 6, 7, 6, 3, 4, 3, 6, 6, 3, 4, 4, 4, 6, 7, 4, 5, 4, 5,\n",
       "       5, 6, 4, 6, 4, 6, 5, 5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sample_dp_mean</span></div><div class='xr-var-dims'>(samples)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(250,), meta=np.ndarray&gt;</div><input id='attrs-64e18d72-6e07-4382-81e4-725c09eea258' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-64e18d72-6e07-4382-81e4-725c09eea258' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7233dc6c-a917-4459-99f2-549c7c8055a2' class='xr-var-data-in' type='checkbox'><label for='data-7233dc6c-a917-4459-99f2-549c7c8055a2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Mean Sample DP</dd></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                        <td> 0.98 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (250,) </td>\n",
       "                        <td> (250,) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 8 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>call_dosage</span></div><div class='xr-var-dims'>(variants, samples)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(3491, 250), meta=np.ndarray&gt;</div><input id='attrs-c5e6c003-a87d-43c0-8674-60f0477d64a9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c5e6c003-a87d-43c0-8674-60f0477d64a9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-18053a1f-4a8b-4d5b-b580-08d5e94de0c5' class='xr-var-data-in' type='checkbox'><label for='data-18053a1f-4a8b-4d5b-b580-08d5e94de0c5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 6.66 MiB </td>\n",
       "                        <td> 6.66 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3491, 250) </td>\n",
       "                        <td> (3491, 250) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> int64 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"86\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"36\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 36.6748228670204,0.0 36.6748228670204,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"18.337411\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >250</text>\n",
       "  <text x=\"56.674823\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,56.674823,60.000000)\">3491</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li></ul></div></li><li class='xr-section-item'><input id='section-1e68fb78-952a-4b9b-b40b-de2dcbbb822c' class='xr-section-summary-in' type='checkbox'  ><label for='section-1e68fb78-952a-4b9b-b40b-de2dcbbb822c' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>genotypes</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-7952e71a-592f-4c28-9d55-d8c7237edc03' class='xr-index-data-in' type='checkbox'/><label for='index-7952e71a-592f-4c28-9d55-d8c7237edc03' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;0/0&#x27;, &#x27;0/1&#x27;, &#x27;1/1&#x27;], dtype=&#x27;object&#x27;, name=&#x27;genotypes&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c4657a46-6440-4b5f-8876-9ef71f9d02c6' class='xr-section-summary-in' type='checkbox'  ><label for='section-c4657a46-6440-4b5f-8876-9ef71f9d02c6' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>source :</span></dt><dd>bio2zarr-0.1.1</dd><dt><span>vcf_header :</span></dt><dd>##fileformat=VCFv4.2\n",
       "##FILTER=&lt;ID=PASS,Description=&quot;All filters passed&quot;&gt;\n",
       "##hailversion=0.2-29fbaeaf265e\n",
       "##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=AD,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##FORMAT=&lt;ID=PL,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ClippingRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DP,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=DS,Number=0,Type=Flag,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=FS,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=HaplotypeScore,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=InbreedingCoeff,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAC,Number=.,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MLEAF,Number=.,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQ0,Number=1,Type=Integer,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=MQRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=QD,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=ReadPosRankSum,Number=1,Type=Float,Description=&quot;&quot;&gt;\n",
       "##INFO=&lt;ID=set,Number=1,Type=String,Description=&quot;&quot;&gt;\n",
       "##contig=&lt;ID=1,length=249250621,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=2,length=243199373,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=3,length=198022430,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=4,length=191154276,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=5,length=180915260,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=6,length=171115067,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=7,length=159138663,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=8,length=146364022,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=9,length=141213431,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=10,length=135534747,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=11,length=135006516,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=12,length=133851895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=13,length=115169878,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=14,length=107349540,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=15,length=102531392,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=16,length=90354753,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=17,length=81195210,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=18,length=78077248,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=19,length=59128983,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=20,length=63025520,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=21,length=48129895,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=22,length=51304566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=X,length=155270560,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=Y,length=59373566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=MT,length=16569,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000207.1,length=4262,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000226.1,length=15008,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000229.1,length=19913,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000231.1,length=27386,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000210.1,length=27682,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000239.1,length=33824,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000235.1,length=34474,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000201.1,length=36148,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000247.1,length=36422,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000245.1,length=36651,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000197.1,length=37175,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000203.1,length=37498,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000246.1,length=38154,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000249.1,length=38502,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000196.1,length=38914,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000248.1,length=39786,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000244.1,length=39929,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000238.1,length=39939,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000202.1,length=40103,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000234.1,length=40531,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000232.1,length=40652,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000206.1,length=41001,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000240.1,length=41933,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000236.1,length=41934,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000241.1,length=42152,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000243.1,length=43341,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000242.1,length=43523,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000230.1,length=43691,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000237.1,length=45867,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000233.1,length=45941,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000204.1,length=81310,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000198.1,length=90085,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000208.1,length=92689,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000191.1,length=106433,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000227.1,length=128374,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000228.1,length=129120,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000214.1,length=137718,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000221.1,length=155397,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000209.1,length=159169,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000218.1,length=161147,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000220.1,length=161802,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000213.1,length=164239,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000211.1,length=166566,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000199.1,length=169874,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000217.1,length=172149,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000216.1,length=172294,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000215.1,length=172545,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000205.1,length=174588,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000219.1,length=179198,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000224.1,length=179693,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000223.1,length=180455,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000195.1,length=182896,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000212.1,length=186858,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000222.1,length=186861,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000200.1,length=187035,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000193.1,length=189789,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000194.1,length=191469,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000225.1,length=211173,assembly=GRCh37&gt;\n",
       "##contig=&lt;ID=GL000192.1,length=547496,assembly=GRCh37&gt;\n",
       "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tHG00096\tHG00099\tHG00105\tHG00118\tHG00129\tHG00148\tHG00177\tHG00182\tHG00242\tHG00254\tHG00265\tHG00271\tHG00274\tHG00332\tHG00335\tHG00369\tHG00421\tHG00436\tHG00452\tHG00472\tHG00530\tHG00534\tHG00583\tHG00590\tHG00598\tHG00607\tHG00619\tHG00623\tHG00657\tHG00663\tHG00704\tHG00705\tHG00733\tHG00864\tHG00881\tHG01052\tHG01070\tHG01075\tHG01164\tHG01174\tHG01241\tHG01248\tHG01256\tHG01275\tHG01284\tHG01334\tHG01348\tHG01396\tHG01443\tHG01491\tHG01498\tHG01537\tHG01572\tHG01606\tHG01623\tHG01630\tHG01783\tHG01784\tHG01790\tHG01799\tHG01801\tHG01806\tHG01812\tHG01813\tHG01817\tHG01848\tHG01849\tHG01857\tHG01863\tHG01874\tHG01915\tHG01924\tHG01965\tHG01970\tHG01991\tHG02010\tHG02020\tHG02054\tHG02086\tHG02087\tHG02116\tHG02122\tHG02130\tHG02131\tHG02152\tHG02154\tHG02165\tHG02224\tHG02232\tHG02236\tHG02250\tHG02259\tHG02298\tHG02318\tHG02345\tHG02351\tHG02363\tHG02373\tHG02383\tHG02384\tHG02386\tHG02388\tHG02389\tHG02397\tHG02419\tHG02462\tHG02464\tHG02497\tHG02511\tHG02521\tHG02561\tHG02574\tHG02580\tHG02595\tHG02603\tHG02629\tHG02651\tHG02682\tHG02688\tHG02690\tHG02699\tHG02760\tHG02768\tHG02771\tHG02792\tHG02798\tHG02811\tHG02814\tHG02840\tHG02870\tHG02881\tHG02970\tHG02973\tHG03009\tHG03046\tHG03074\tHG03091\tHG03105\tHG03127\tHG03193\tHG03224\tHG03237\tHG03241\tHG03247\tHG03259\tHG03267\tHG03354\tHG03366\tHG03367\tHG03380\tHG03419\tHG03449\tHG03451\tHG03458\tHG03490\tHG03491\tHG03511\tHG03556\tHG03563\tHG03598\tHG03603\tHG03607\tHG03636\tHG03684\tHG03686\tHG03690\tHG03731\tHG03740\tHG03755\tHG03800\tHG03815\tHG03832\tHG03850\tHG03873\tHG03897\tHG03905\tHG03937\tHG03948\tHG03973\tHG04054\tHG04059\tHG04063\tHG04096\tHG04099\tHG04140\tHG04171\tHG04209\tHG04210\tHG04229\tHG04239\tNA07347\tNA11918\tNA11919\tNA12045\tNA12273\tNA12342\tNA12414\tNA12546\tNA12760\tNA12878\tNA18516\tNA18525\tNA18534\tNA18541\tNA18557\tNA18565\tNA18616\tNA18619\tNA18623\tNA18630\tNA18631\tNA18740\tNA18853\tNA18865\tNA18873\tNA18874\tNA18916\tNA18960\tNA18966\tNA18975\tNA18976\tNA18978\tNA18990\tNA19060\tNA19063\tNA19076\tNA19086\tNA19087\tNA19096\tNA19113\tNA19118\tNA19185\tNA19209\tNA19311\tNA19314\tNA19317\tNA19321\tNA19379\tNA19384\tNA19390\tNA19397\tNA19399\tNA19404\tNA19446\tNA19448\tNA19455\tNA19456\tNA19466\tNA19655\tNA19657\tNA19670\tNA19678\tNA19679\tNA19701\tNA19720\tNA19756\tNA19761\tNA19764\tNA19786\tNA20318\tNA20351\tNA20517\tNA20518\tNA20529\tNA20587\tNA20757\tNA20798\tNA20799\tNA20800\tNA20810\tNA20826\tNA20858\tNA20864\tNA20869\tNA20877\tNA20888\tNA20910\tNA21101\tNA21113\tNA21114\tNA21116\tNA21118\tNA21133\tNA21143\n",
       "</dd><dt><span>vcf_zarr_version :</span></dt><dd>0.2</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 17MB\n",
       "Dimensions:                              (samples: 250, components: 10,\n",
       "                                          variants: 3491, genotypes: 3,\n",
       "                                          alleles: 2, ploidy: 2, contigs: 84,\n",
       "                                          filters: 1)\n",
       "Coordinates:\n",
       "  * genotypes                            (genotypes) <U3 36B '0/0' '0/1' '1/1'\n",
       "Dimensions without coordinates: samples, components, variants, alleles, ploidy,\n",
       "                                contigs, filters\n",
       "Data variables: (12/48)\n",
       "    sample_pca_projection                (samples, components) float32 10kB dask.array<chunksize=(250, 10), meta=np.ndarray>\n",
       "    sample_pca_component                 (variants, components) float32 140kB dask.array<chunksize=(3491, 10), meta=np.ndarray>\n",
       "    sample_pca_explained_variance        (components) float32 40B dask.array<chunksize=(10,), meta=np.ndarray>\n",
       "    sample_pca_explained_variance_ratio  (components) float32 40B dask.array<chunksize=(10,), meta=np.ndarray>\n",
       "    sample_pca_loading                   (variants, components) float32 140kB dask.array<chunksize=(3491, 10), meta=np.ndarray>\n",
       "    call_alternate_allele_count          (variants, samples) int16 2MB dask.array<chunksize=(3491, 250), meta=np.ndarray>\n",
       "    ...                                   ...\n",
       "    SuperPopulation                      (samples) object 2kB 'EUR' ... 'SAS'\n",
       "    isFemale                             (samples) bool 250B False True ... True\n",
       "    PurpleHair                           (samples) bool 250B False ... True\n",
       "    CaffeineConsumption                  (samples) int64 2kB 4 4 4 3 ... 4 6 5 5\n",
       "    sample_dp_mean                       (samples) float32 1kB dask.array<chunksize=(250,), meta=np.ndarray>\n",
       "    call_dosage                          (variants, samples) int64 7MB dask.array<chunksize=(3491, 250), meta=np.ndarray>\n",
       "Attributes: (3)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_pca"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "interior-puzzle",
   "metadata": {},
   "source": [
    "Let's plot the first two components. Notice how they cluster by ancestry."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "returning-champagne",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds_pca[\"sample_pca_projection_0\"] = ds_pca.sample_pca_projection[:,0]\n",
    "ds_pca[\"sample_pca_projection_1\"] = ds_pca.sample_pca_projection[:,1]\n",
    "ds_pca[\"sample_pca_projection_2\"] = ds_pca.sample_pca_projection[:,2]\n",
    "# Following does not work with recent versions of xarray, see https://github.com/sgkit-dev/sgkit/issues/934\n",
    "#ds_pca.plot.scatter(x=\"sample_pca_projection_0\", y=\"sample_pca_projection_1\", hue=\"SuperPopulation\", size=8, s=10);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abroad-pilot",
   "metadata": {},
   "source": [
    "Now we can rerun our linear regression, controlling for sample sex and the first few principal components."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "armed-newspaper",
   "metadata": {},
   "outputs": [],
   "source": [
    "# copy pca components back to dataset with full set of variants to run linear regression again\n",
    "ds[\"sample_pca_projection_0\"] = ds_pca.sample_pca_projection[:,0]\n",
    "ds[\"sample_pca_projection_1\"] = ds_pca.sample_pca_projection[:,1]\n",
    "ds[\"sample_pca_projection_2\"] = ds_pca.sample_pca_projection[:,2]\n",
    "ds_lr = sg.gwas_linear_regression(ds, dosage=\"call_dosage\",\n",
    "                                  add_intercept=True,\n",
    "                                  covariates=[\"isFemale\", \"sample_pca_projection_0\", \"sample_pca_projection_1\", \"sample_pca_projection_2\"],\n",
    "                                  traits=[\"CaffeineConsumption\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "excellent-buffer",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x1200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "qq_plot(ds_lr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "electric-henry",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n",
      "  if pd.api.types.is_categorical_dtype(vector):\n",
      "/Users/tom/miniconda3/envs/sgkit-dev-3.10/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "manhattan_plot(ds_lr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "incorrect-mystery",
   "metadata": {},
   "source": [
    "The \"caffeine consumption\" locus in chromosome 8 is clearly apparent, just like in the Hail tutorial."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
